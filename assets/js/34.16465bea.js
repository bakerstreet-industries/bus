(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{244:function(e,t,r){"use strict";r.r(t);var n=r(0),i=Object(n.a)({},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"change-log"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#change-log","aria-hidden":"true"}},[e._v("#")]),e._v(" Change Log")]),e._v(" "),r("h2",{attrs:{id:"v6-1-3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v6-1-3","aria-hidden":"true"}},[e._v("#")]),e._v(" v6.1.3")]),e._v(" "),r("ul",[r("li",[e._v("[bugfix] add support for TypeScript 4.0 peer dependency (#4943)")])]),e._v(" "),r("h2",{attrs:{id:"v6-1-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v6-1-2","aria-hidden":"true"}},[e._v("#")]),e._v(" v6.1.2")]),e._v(" "),r("ul",[r("li",[e._v("[bugfix] restore typings compatibility with TS < 3.8 (#4933)")])]),e._v(" "),r("h2",{attrs:{id:"v6-1-1"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v6-1-1","aria-hidden":"true"}},[e._v("#")]),e._v(" v6.1.1")]),e._v(" "),r("ul",[r("li",[e._v("[bugfix] upgrade mkdirp dependency to "),r("code",[e._v("^0.5.3")]),e._v(" (#4918)")])]),e._v(" "),r("h2",{attrs:{id:"v6-1-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v6-1-0","aria-hidden":"true"}},[e._v("#")]),e._v(" v6.1.0")]),e._v(" "),r("ul",[r("li",[e._v("[enhancement] Upgrade to TypeScript 3.8, support new syntax (#4915)")]),e._v(" "),r("li",[e._v("[docs]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-object-literal-type-assertion/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-object-literal-type-assertion")]),r("OutboundLink")],1),e._v(" fix typo in rule description (#4911)")])]),e._v(" "),r("p",[e._v("Thanks to our contributors!")]),e._v(" "),r("ul",[r("li",[e._v("Daniel Zwelling")]),e._v(" "),r("li",[e._v("Ryan Delaney")])]),e._v(" "),r("h2",{attrs:{id:"v6-0-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v6-0-0","aria-hidden":"true"}},[e._v("#")]),e._v(" v6.0.0")]),e._v(" "),r("p",[e._v("This version has been marked as deprecated on NPM to encourage users to migrate to ESLint.")]),e._v(" "),r("ul",[r("li",[e._v("[bugfix] fix "),r("code",[e._v("enforce-trailing-newline")]),e._v(" option in "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/file-header/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("file-header")]),r("OutboundLink")],1),e._v(" rule (#4890)")]),e._v(" "),r("li",[e._v("[bugfix] avoid writing to temp files with "),r("code",[e._v("writeFileSync")]),e._v(" on macOS 10.15 (#4887)")]),e._v(" "),r("li",[e._v("[bugfix] fix crash in "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/completed/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("completed-docs")]),r("OutboundLink")],1),e._v(" rule when tag contents are undefined (#4895)")]),e._v(" "),r("li",[e._v("[docs] fix example code of Radix rule (#4892)")]),e._v(" "),r("li",[e._v("[docs] Add missing colon after "),r("code",[e._v("[error]")]),e._v(" in testing rules documentation (#4903)")])]),e._v(" "),r("p",[e._v("Thanks to our contributors!")]),e._v(" "),r("ul",[r("li",[e._v("Ivan Sorokin")]),e._v(" "),r("li",[e._v("Tanmoy Bhowmik")]),e._v(" "),r("li",[e._v("Meng Wang")]),e._v(" "),r("li",[e._v("Jay Bhagat")]),e._v(" "),r("li",[e._v("Aman Sharma")]),e._v(" "),r("li",[e._v("Josh Goldberg")])]),e._v(" "),r("h2",{attrs:{id:"v6-0-0-beta1"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v6-0-0-beta1","aria-hidden":"true"}},[e._v("#")]),e._v(" v6.0.0-beta1")]),e._v(" "),r("p",[e._v("No changes from v6.0.0-beta0, just re-released to correctly mark with the "),r("code",[e._v("beta")]),e._v(" and "),r("code",[e._v("next")]),e._v(" dist-tags on NPM.")]),e._v(" "),r("h2",{attrs:{id:"v6-0-0-beta0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v6-0-0-beta0","aria-hidden":"true"}},[e._v("#")]),e._v(" v6.0.0-beta0")]),e._v(" "),r("ul",[r("li",[e._v("🔥 BREAKING CHANGES 🔥\n"),r("ul",[r("li",[e._v("[api] Changed default formatter to stylish (#4872)")]),e._v(" "),r("li",[e._v("[enhancement] Removed formatting and whitespace rules from "),r("code",[e._v("tslint:recommended")]),e._v(" configuration (#4871)")]),e._v(" "),r("li",[e._v("[enhancement] Removed pedantic rules from "),r("code",[e._v("tslint:recommended")]),e._v(" configuration (#4312)")]),e._v(" "),r("li",[e._v("[enhancement] "),r("code",[e._v("vso")]),e._v(" formatter now reports severity of rule failures (#4286)")]),e._v(" "),r("li",[e._v("[enhancement]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/typedef/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("typedef")]),r("OutboundLink")],1),e._v(" rule "),r("code",[e._v("arrow-call-signature")]),e._v(" option is more consistent in reporting errors on lambdas and will flag more violations that were missed in the previous rule implementation (#4533)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/ordered-imports/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("ordered-imports")]),r("OutboundLink")],1),e._v(" is now consistent with TypeScript's Organise Imports ordering (#4064)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/member-ordering/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("member-ordering")]),r("OutboundLink")],1),e._v(" now checks property accessors (getters and setters) (#3984)")])])]),e._v(" "),r("li",[e._v("Other changes\n"),r("ul",[r("li",[e._v("[bugfix] Removed deprecated rules from "),r("code",[e._v("tslint:all")]),e._v(" configuration (#4862)")]),e._v(" "),r("li",[e._v("[bugfix] Preserve significant zeros in fixer for number-literal-format (#4856)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-redundant-jsdoc/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-redundant-jsdoc")]),r("OutboundLink")],1),e._v(" allow "),r("code",[e._v("@author")]),e._v(" tag (#4854)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("RuleFailure#toJson()")]),e._v(" no longer forces rule severity to be an uppercase string (#2622)")]),e._v(" "),r("li",[e._v("[bugfixfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/return-undefined/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("return-undefined")]),r("OutboundLink")],1),e._v(" rule now works with TS 3.7 (#4866)")]),e._v(" "),r("li",[e._v("[enhancement]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/prefer-switch/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("prefer-switch")]),r("OutboundLink")],1),e._v(" is more lenient with "),r("code",[e._v("if")]),e._v(" statements containing multiple OR conditions without any "),r("code",[e._v("else")]),e._v(" clause (#4873)")]),e._v(" "),r("li",[e._v("[enhancement]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/completed-doc/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("completed-doc")]),r("OutboundLink")],1),e._v(": add support for constructor documentation (#4861)")]),e._v(" "),r("li",[e._v("[new-rule-option] "),r("code",[e._v("case-insensitive-legacy")]),e._v(" for "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/ordered-imports/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("ordered-imports")]),r("OutboundLink")],1),e._v(" rule (#4064)")]),e._v(" "),r("li",[e._v("[docs]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/import-blacklist/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("import-blacklist")]),r("OutboundLink")],1),e._v(": add some options examples (#4858)")]),e._v(" "),r("li",[e._v("[docs] Update custom rule example to use recursive walker (#4883)")])])])]),e._v(" "),r("p",[e._v("Thanks to our contributors!")]),e._v(" "),r("ul",[r("li",[e._v("J Rob Gant")]),e._v(" "),r("li",[e._v("Tanmoy Bhowmik")]),e._v(" "),r("li",[e._v("谭九鼎")]),e._v(" "),r("li",[e._v("Ahmed Ghoneim")]),e._v(" "),r("li",[e._v("Josh Goldberg")]),e._v(" "),r("li",[e._v("Andrew Boyton")]),e._v(" "),r("li",[e._v("Peter Sandor")]),e._v(" "),r("li",[e._v("Vincent Langlet")]),e._v(" "),r("li",[e._v("Adrian Leonhard")]),e._v(" "),r("li",[e._v("Philipp Foedermayr")]),e._v(" "),r("li",[e._v("Brian Olore")]),e._v(" "),r("li",[e._v("andrew bernard")]),e._v(" "),r("li",[e._v("joon1030")])]),e._v(" "),r("h2",{attrs:{id:"v5-20-1"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v5-20-1","aria-hidden":"true"}},[e._v("#")]),e._v(" v5.20.1")]),e._v(" "),r("p",[e._v("No changes from v5.20.0, just re-released to correctly mark with the "),r("code",[e._v("latest")]),e._v(" dist-tag on NPM.")]),e._v(" "),r("h2",{attrs:{id:"v5-20-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v5-20-0","aria-hidden":"true"}},[e._v("#")]),e._v(" v5.20.0")]),e._v(" "),r("ul",[r("li",[e._v("[bugfix] fix "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/strict-boolean-expressions/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("strict-boolean-expressions")]),r("OutboundLink")],1),e._v(" false positive with "),r("code",[e._v('"ignore-rhs"')]),e._v(" option (#4833)")]),e._v(" "),r("li",[e._v("[bugfix] fix "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-unnecessary-type-assertion/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-unnecessary-type-assertion")]),r("OutboundLink")],1),e._v(" no error when "),r("code",[e._v('"strict": true')]),e._v(" in compiler flags (#4841)")]),e._v(" "),r("li",[e._v('[bugfix] "ignore" option for '),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/file-name-casing/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("file-name-casing")]),r("OutboundLink")],1),e._v(" rule works correctly (#4848)")]),e._v(" "),r("li",[e._v("[bugfix] fix "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/array-type/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("array-type")]),r("OutboundLink")],1),e._v(' false positive for simple parenthesized types with "array-simple" option (#4844)')]),e._v(" "),r("li",[e._v("[new-rule-option]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/object-literal-shorthand/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("object-literal-shorthand")]),r("OutboundLink")],1),e._v(" supports "),r("code",[e._v('{"property"?: "never", "method"?: "never"}')]),e._v(" as config options (#4842)")]),e._v(" "),r("li",[e._v("[new-rule-option]: "),r("code",[e._v("allow-generics")]),e._v(" option for "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/invalid-void",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("invalid-void")]),r("OutboundLink")],1),e._v(" rule (#4839)")]),e._v(" "),r("li",[e._v("[new-rule-option] "),r("code",[e._v("check-super-calls")]),e._v(" option for "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/unnecessary-constructor/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("unnecessary-constructor")]),r("OutboundLink")],1),e._v(" rule (#4813)")]),e._v(" "),r("li",[e._v("[chore] Upgrade "),r("code",[e._v("diff")]),e._v(" dependency to v4.0.1 (#4845, #4852)")])]),e._v(" "),r("p",[e._v("Thanks to our contributors!")]),e._v(" "),r("ul",[r("li",[e._v("Bas Bosman")]),e._v(" "),r("li",[e._v("Tanmoy Bhowmik")]),e._v(" "),r("li",[e._v("David Zulaica")]),e._v(" "),r("li",[e._v("Maxime Kjaer")]),e._v(" "),r("li",[e._v("@guidsdo")]),e._v(" "),r("li",[e._v("Pavel Birukov")]),e._v(" "),r("li",[e._v("Josh Goldberg")]),e._v(" "),r("li",[e._v("Akshaya Srivatsa")])]),e._v(" "),r("h2",{attrs:{id:"v5-19-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v5-19-0","aria-hidden":"true"}},[e._v("#")]),e._v(" v5.19.0")]),e._v(" "),r("ul",[r("li",[e._v("[bugfix] relax "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/promise-function-async/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("promise-function-async")]),r("OutboundLink")],1),e._v(" for short parenthesized arrow functions (#4765)")]),e._v(" "),r("li",[e._v("[bugfix] fix "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-async-without-await/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-async-without-await")]),r("OutboundLink")],1),e._v(" false positive for abstract methods (#4782)")]),e._v(" "),r("li",[e._v("[bugfix] fix "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/strict-comparisons/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("strict-comparisons")]),r("OutboundLink")],1),e._v(" false positive for "),r("code",[e._v("null")]),e._v(" and "),r("code",[e._v("undefined")]),e._v(" literals (#4786)")]),e._v(" "),r("li",[e._v("[bugfix] improve "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-angle-bracket-type-assertion/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-angle-bracket-type-assertion")]),r("OutboundLink")],1),e._v(" autofix semantics with more parentheses (#4823)")]),e._v(" "),r("li",[e._v("[enhancement] add BigInt support to "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/restrict-plus-operands/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("restrict-plus-operands")]),r("OutboundLink")],1),e._v(" rule (#4814)")]),e._v(" "),r("li",[e._v("[enhancement]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/await-promise/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("await-promise")]),r("OutboundLink")],1),e._v(" now supports new TypeScript 3.6 AST API symbols for async iterators (#4800)")]),e._v(" "),r("li",[e._v("[new-rule-option] "),r("code",[e._v("check-strings")]),e._v(" and "),r("code",[e._v("check-regex")]),e._v(" options for "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/max-line-length/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("max-line-length")]),r("OutboundLink")],1),e._v(" rule (#4798)")]),e._v(" "),r("li",[e._v("[new-rule-option] "),r("code",[e._v("variable-declaration-ignore-function")]),e._v(" option for "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/typedef/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("typedef")]),r("OutboundLink")],1),e._v(" rule (#4769)")]),e._v(" "),r("li",[e._v("[new-rule-option] "),r("code",[e._v("ignore-blank-lines")]),e._v(" option for "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/object-literal-sort-keys/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("object-literal-sort-keys")]),r("OutboundLink")],1),e._v(" rule (#4808)")]),e._v(" "),r("li",[e._v("[new-rule]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-for-in/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-for-in")]),r("OutboundLink")],1),e._v(" (#4747)")]),e._v(" "),r("li",[e._v("[new-rule]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/invalid-void/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("invalid-void")]),r("OutboundLink")],1),e._v(" (#4736)")]),e._v(" "),r("li",[e._v("[new-rule]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/strict-string-expressions/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("strict-string-expressions")]),r("OutboundLink")],1),e._v(" reports errors on type coercions found in string expressions (#4807)")]),e._v(" "),r("li",[e._v("[new-rule]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-promise-as-boolean/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-promise-as-boolean")]),r("OutboundLink")],1),e._v(" (#4790)")]),e._v(" "),r("li",[e._v("[docs] link to OSS fellowship medium post in README (#4821)")])]),e._v(" "),r("p",[e._v("Thanks to our contributors!")]),e._v(" "),r("ul",[r("li",[e._v("Josh Pike")]),e._v(" "),r("li",[e._v("Tanmoy Bhowmik")]),e._v(" "),r("li",[e._v("Michael Withagen")]),e._v(" "),r("li",[e._v("Evgeniy Timokhov")]),e._v(" "),r("li",[e._v("Vitalij Krotov")]),e._v(" "),r("li",[e._v("Josh Goldberg")]),e._v(" "),r("li",[e._v("Veda")]),e._v(" "),r("li",[e._v("Guido")]),e._v(" "),r("li",[e._v("Robert Fink")]),e._v(" "),r("li",[e._v("Max Sysoev")])]),e._v(" "),r("h2",{attrs:{id:"v5-18-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v5-18-0","aria-hidden":"true"}},[e._v("#")]),e._v(" v5.18.0")]),e._v(" "),r("ul",[r("li",[e._v("[feature] New "),r("code",[e._v("--print-config")]),e._v(" CLI flag (#4744)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-unnecessary-type-assertion/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-unnecessary-type-assertion")]),r("OutboundLink")],1),e._v(" no longer flags "),r("code",[e._v("x!")]),e._v(" non-null assertions if "),r("code",[e._v("--strictNullChecks")]),e._v(" is not enabled (#3724)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/quotemark/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("quotemark")]),r("OutboundLink")],1),e._v(" handles unbalanced quotes more gracefully without crashing (#4344)")]),e._v(" "),r("li",[e._v("[docs] Add tslint-playground link to README and bug report template (#4150)")]),e._v(" "),r("li",[e._v("[enhancement]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-magic-numbers/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-magic-numbers")]),r("OutboundLink")],1),e._v(" rule ignores arguments passed into default Number methods (#3668)")]),e._v(" "),r("li",[e._v("[new-fixer]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/comment-format/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("comment-format")]),r("OutboundLink")],1),e._v(" (#3583)")]),e._v(" "),r("li",[e._v("[new-rule-option] "),r("code",[e._v('"allow-trailing-lowercase"')]),e._v(" option for "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/comment-format/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("comment-format")]),r("OutboundLink")],1),e._v(" rule (#3583)")]),e._v(" "),r("li",[e._v("[new-rule-option] "),r("code",[e._v('"ignore-accessors"')]),e._v(" for "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/adjacent-overload-signatures/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("adjacent-overload-signatures")]),r("OutboundLink")],1),e._v(" to ignore getters / setters overloads (#3718)")]),e._v(" "),r("li",[e._v("[new-rule]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-async-without-await/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-async-without-await")]),r("OutboundLink")],1),e._v(" (#3945)")]),e._v(" "),r("li",[e._v("[new-rule]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/strict-comparisons/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("strict-comparisons")]),r("OutboundLink")],1),e._v(" (#4519)")])]),e._v(" "),r("p",[e._v("Thanks to our contributors!")]),e._v(" "),r("ul",[r("li",[e._v("Josh Goldberg")]),e._v(" "),r("li",[e._v("smoehrle")]),e._v(" "),r("li",[e._v("Mateusz Witkowski")]),e._v(" "),r("li",[e._v("Andy Hanson")]),e._v(" "),r("li",[e._v("John Wiseheart")]),e._v(" "),r("li",[e._v("Eran Shabi")]),e._v(" "),r("li",[e._v("Tibor Blenessy")]),e._v(" "),r("li",[e._v("AndreasGassmann")]),e._v(" "),r("li",[e._v("Ryan Waskiewicz")]),e._v(" "),r("li",[e._v("Isabelle")])]),e._v(" "),r("h2",{attrs:{id:"v5-17-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v5-17-0","aria-hidden":"true"}},[e._v("#")]),e._v(" v5.17.0")]),e._v(" "),r("ul",[r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/quotemark/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("quotemark")]),r("OutboundLink")],1),e._v(" backtic option now ignores enum members, use strict declarations, lookup types, and strings containing octal escape sequences. (#4693)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-redundant-jsdoc/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-redundant-jsdoc")]),r("OutboundLink")],1),e._v(" no longer errors on "),r("code",[e._v("JSDocThisTag")]),e._v(" (#4690)")]),e._v(" "),r("li",[e._v("[chore] Update devDependency mocha from v3.2.0 to v6.1.4 (#4669) (#4674)")]),e._v(" "),r("li",[e._v("[chore] Update devDependency js-yaml from ^3.13.0 to ^3.13.1 (#4663)")]),e._v(" "),r("li",[e._v("[chore] Update deprecated devDependency github to @octokit/rest (#4673)")]),e._v(" "),r("li",[e._v("[chore] Update devDependency nyc from v13.3.0 to v14.1.1 (#4699)")]),e._v(" "),r("li",[e._v("[deprecation]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-use-before-declare/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-use-before-declare")]),r("OutboundLink")],1),e._v(" rule for typescript >= 2.9.0 (#4695)")]),e._v(" "),r("li",[e._v("[documentation] Minor fix for "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/variable-name/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("variable-name")]),r("OutboundLink")],1),e._v(" rule metadata (#4731)")]),e._v(" "),r("li",[e._v("[documentation] Fixed "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-unused-variable/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-unused-variable")]),r("OutboundLink")],1),e._v(" argument count (#4683)")]),e._v(" "),r("li",[e._v("[enhancement] Allow const assertions in "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-object-literal-type-assertion/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-object-literal-type-assertion")]),r("OutboundLink")],1),e._v(" (#4681)")]),e._v(" "),r("li",[e._v("[new-fixer]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/unnecessary-constructor/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("unnecessary-constructor")]),r("OutboundLink")],1),e._v(" (#4694)")])]),e._v(" "),r("p",[e._v("Thanks to our contributors!")]),e._v(" "),r("ul",[r("li",[e._v("Bjorn Stromberg")]),e._v(" "),r("li",[e._v("Vitaliy Agoshkov")]),e._v(" "),r("li",[e._v("knafteN")]),e._v(" "),r("li",[e._v("Bowen Ni")]),e._v(" "),r("li",[e._v("Waseem Ahmad")]),e._v(" "),r("li",[e._v("Åsmund Grammeltvedt")]),e._v(" "),r("li",[e._v("Eric Ferreira")]),e._v(" "),r("li",[e._v("Zhen Tian")]),e._v(" "),r("li",[e._v("Tom Lakesman")]),e._v(" "),r("li",[e._v("zachkirsch")])]),e._v(" "),r("h2",{attrs:{id:"v5-16-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v5-16-0","aria-hidden":"true"}},[e._v("#")]),e._v(" v5.16.0")]),e._v(" "),r("ul",[r("li",[e._v("[bugfix] Excuse more "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/quotemark/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("quotemark")]),r("OutboundLink")],1),e._v(" backtick edge cases and fix behavior for TS < 2.7.1 (#4642)")]),e._v(" "),r("li",[e._v("[bugfix] Fix regression in "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/interface-name/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("interface-name")]),r("OutboundLink")],1),e._v(" rule related to numeric characters in interface names (#4655, #4626)")]),e._v(" "),r("li",[e._v("[enhancement] Update "),r("code",[e._v("nyc")]),e._v(" from v10.2.0 to v13.3.0 (#4633)")]),e._v(" "),r("li",[e._v("[enhancement] Migrate from deprecated "),r("a",{attrs:{href:"https://www.npmjs.com/package/babel-code-frame",target:"_blank",rel:"noopener noreferrer"}},[e._v("babel-code-frame"),r("OutboundLink")],1),e._v(" package to new "),r("a",{attrs:{href:"https://www.npmjs.com/package/@babel/code-frame",target:"_blank",rel:"noopener noreferrer"}},[e._v("@babel/code-frame"),r("OutboundLink")],1),e._v(" package (#4632)")]),e._v(" "),r("li",[e._v("[enhancement] Improve error message for "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/restrict-plus-operands/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("restrict-plus-operands")]),r("OutboundLink")],1),e._v(" rule. (#4635)")]),e._v(" "),r("li",[e._v("[enhancement]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/comment-format/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("comment-format")]),r("OutboundLink")],1),e._v(" rule now whitelists "),r("code",[e._v("//region")]),e._v(" comments generated by JetBrains IDE (#4609)")]),e._v(" "),r("li",[e._v("[enhancement] Relax "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-null-undefined-union/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-null-undefined-union")]),r("OutboundLink")],1),e._v(" rule. (#4625)")]),e._v(" "),r("li",[e._v("[new-rule-option] "),r("code",[e._v("allow-else-if")]),e._v(" option for "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/unnecessary-else/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("unnecessary-else")]),r("OutboundLink")],1),e._v(" rule (#4599)")]),e._v(" "),r("li",[e._v('[documentation] Fix "identifer" typo in custom rules docs (#4657)')]),e._v(" "),r("li",[e._v("[documentation] Fix code example for "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/switch-default/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("switch-default")]),r("OutboundLink")],1),e._v(" rule (#4650)")]),e._v(" "),r("li",[e._v("[documentation] Fix documentation example for prose formatter (#4656)")]),e._v(" "),r("li",[e._v("[documentation]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-parameter-properties/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-parameter-properties")]),r("OutboundLink")],1),e._v(": fix unclear rule description (#4629)")]),e._v(" "),r("li",[e._v("[documentation] Fix typo in rule docs generation (#4638)")])]),e._v(" "),r("p",[e._v("Thanks to our contributors!")]),e._v(" "),r("ul",[r("li",[e._v("Oleg Artene")]),e._v(" "),r("li",[e._v("William Neely")]),e._v(" "),r("li",[e._v("Bjorn Stromberg")]),e._v(" "),r("li",[e._v("Matthew Barry")]),e._v(" "),r("li",[e._v("Neha Rathi")]),e._v(" "),r("li",[e._v("Vincent Langlet")]),e._v(" "),r("li",[e._v("rarenal")]),e._v(" "),r("li",[e._v("Greg Jednaszewski")]),e._v(" "),r("li",[e._v("Adam Postma")]),e._v(" "),r("li",[e._v("Eric Ferreira")]),e._v(" "),r("li",[e._v("Evgeniy Timokhov")]),e._v(" "),r("li",[e._v("Martin Probst")])]),e._v(" "),r("h2",{attrs:{id:"v5-15-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v5-15-0","aria-hidden":"true"}},[e._v("#")]),e._v(" v5.15.0")]),e._v(" "),r("ul",[r("li",[e._v("[api] "),r("code",[e._v("WalkContext")]),e._v(" and "),r("code",[e._v("AbstractWalker")]),e._v(" type parameter defaults to "),r("code",[e._v("void")]),e._v(" (#2600)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-void-expression/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-void-expression")]),r("OutboundLink")],1),e._v(" now allows conditional expressions (#4606)")]),e._v(" "),r("li",[e._v("[bugfix] fix linebreak handling in "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/ordered-imports/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("ordered-imports")]),r("OutboundLink")],1),e._v(" (#4583)")]),e._v(" "),r("li",[e._v("[bugfix] fix "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/static-this/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("static-this")]),r("OutboundLink")],1),e._v(" false positive for higher order components (#4580)")]),e._v(" "),r("li",[e._v("[bugfix] Fixed crash in "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/unnecessary-else/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("unnecessary-else")]),r("OutboundLink")],1),e._v(" from blank "),r("code",[e._v("if")]),e._v(" statements (#4603)")]),e._v(" "),r("li",[e._v("[bugfix] Fixed false positive in "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/unnecessary-else/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("unnecessary-else")]),r("OutboundLink")],1),e._v(" after non-jumping statement (#4603)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/interface-name/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("interface-name")]),r("OutboundLink")],1),e._v(' now handles interface starting with "I18n" correctly (#4486)')]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-string-throw/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-string-throw")]),r("OutboundLink")],1),e._v(" fix inserts whitespace if not present after "),r("code",[e._v("throw")]),e._v(" keyword (#4540)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/quotemark/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("quotemark")]),r("OutboundLink")],1),e._v(": fix some edge cases for "),r("code",[e._v("backtick")]),e._v(" option (#4618)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/unnecessary-constructor/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("unnecessary-constructor")]),r("OutboundLink")],1),e._v(": don't flag non-private constructors that are actually necessary (#4619)")]),e._v(" "),r("li",[e._v("[enhancement] Upgrade js-yaml to avoid security issue (#4595)")]),e._v(" "),r("li",[e._v("[new-rule-option] "),r("code",[e._v("allow-single-line-comments")]),e._v(" option for "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/file-header/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("file-header")]),r("OutboundLink")],1),e._v(" rule (#4560)")]),e._v(" "),r("li",[e._v("[new-rule-option] "),r("code",[e._v("ignore-rest-args")]),e._v(" option for "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-any/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-any")]),r("OutboundLink")],1),e._v(" rule (#4581)")]),e._v(" "),r("li",[e._v("[new-rule]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-null-undefined-union/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-null-undefined-union")]),r("OutboundLink")],1),e._v(" (#4589)")])]),e._v(" "),r("p",[e._v("Thanks to our contributors!")]),e._v(" "),r("ul",[r("li",[e._v("Max Belsky")]),e._v(" "),r("li",[e._v("Steve Moser")]),e._v(" "),r("li",[e._v("Christian Flach")]),e._v(" "),r("li",[e._v("Roman Rogowski")]),e._v(" "),r("li",[e._v("Terry")]),e._v(" "),r("li",[e._v("Luke")]),e._v(" "),r("li",[e._v("Andy Hanson")]),e._v(" "),r("li",[e._v("Vitalij Krotov")]),e._v(" "),r("li",[e._v("Josh Goldberg")]),e._v(" "),r("li",[e._v("Vincent Langlet")]),e._v(" "),r("li",[e._v("Neha Rathi")]),e._v(" "),r("li",[e._v("Eric Ferreira")])]),e._v(" "),r("h2",{attrs:{id:"v5-14-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v5-14-0","aria-hidden":"true"}},[e._v("#")]),e._v(" v5.14.0")]),e._v(" "),r("ul",[r("li",[e._v("[bugfix] "),r("code",[e._v("backtick")]),e._v(" option for "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/quotemark/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("quotemark")]),r("OutboundLink")],1),e._v(" rule no longer incorrectly flags string literals that must use single/double quotes (#4535)")]),e._v(" "),r("li",[e._v("[bugfix] Fixed regression in CheckstyleFormatter backwards compatibility (#4561)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/whitespace/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("whitespace")]),r("OutboundLink")],1),e._v(" rule now lints export statements (#4554)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-trailing-whitespace/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-trailing-whitespace")]),r("OutboundLink")],1),e._v(" no longer flags files starting with a byte order mark (#4543)")]),e._v(" "),r("li",[e._v("[enhancement]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/promise-function-async/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("promise-function-async")]),r("OutboundLink")],1),e._v(" now allows single statement lamda functions that delegate to another promise-returning function (#4553)")]),e._v(" "),r("li",[e._v("[enhancement] Add note to docs about zero-indexing for machine formatters (#4544)")]),e._v(" "),r("li",[e._v("[enhancement] Fix metadata of the "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/whitespace/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("whitespace")]),r("OutboundLink")],1),e._v(" rule (#4551)")]),e._v(" "),r("li",[e._v("[enhancement] Add junit output for files which are successfully linted (#4566)")]),e._v(" "),r("li",[e._v("[new-rule-option] "),r("code",[e._v("underscore")]),e._v(" option for "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-shadowed-variable/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-shadowed-variable")]),r("OutboundLink")],1),e._v(" rule to ignore shadowed underscores (#4546)")]),e._v(" "),r("li",[e._v("[new-rule-option] "),r("code",[e._v("require-const-for-all-caps")]),e._v(" option for "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/variable-name/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("variable-name")]),r("OutboundLink")],1),e._v(" rule (#2936)")]),e._v(" "),r("li",[e._v("[new-rule-option] "),r("code",[e._v("overloads")]),e._v(" option for "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/completed-docs/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("completed-docs")]),r("OutboundLink")],1),e._v(" rule to enforce documentation of each overload signature (#4563)")]),e._v(" "),r("li",[e._v("[new-rule-option] "),r("code",[e._v("allow-namespace-imports")]),e._v(" option for "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-duplicate-imports/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-duplicate-imports")]),r("OutboundLink")],1),e._v(" rule (#4524)")]),e._v(" "),r("li",[e._v("[new-rule-option] "),r("code",[e._v("allow-arguments")]),e._v(" option for "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-object-literal-type-assertion/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-object-literal-type-assertion")]),r("OutboundLink")],1),e._v(" rule to allow type assertions on object literals used inside call expressions (#4521)")]),e._v(" "),r("li",[e._v("[new-rule-option] "),r("code",[e._v("allow-delete")]),e._v(" option for "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-unbound-method/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-unbound-method")]),r("OutboundLink")],1),e._v(" rule (#4548)")]),e._v(" "),r("li",[e._v("[new-rule]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-tautology-expression/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-tautology-expression")]),r("OutboundLink")],1),e._v(" (#4470)")]),e._v(" "),r("li",[e._v("[new-rule]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/static-this/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("static-this")]),r("OutboundLink")],1),e._v(" (#4475)")]),e._v(" "),r("li",[e._v("[new-rule]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/unnecessary-else/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("unnecessary-else")]),r("OutboundLink")],1),e._v(" (#4502)")])]),e._v(" "),r("p",[e._v("Thanks to our contributors!")]),e._v(" "),r("ul",[r("li",[e._v("Roman Rogowski")]),e._v(" "),r("li",[e._v("Max Belsky")]),e._v(" "),r("li",[e._v("Edward Drapkin")]),e._v(" "),r("li",[e._v("Dominik Palo")]),e._v(" "),r("li",[e._v("Matthew McCune")]),e._v(" "),r("li",[e._v("Debsmita")]),e._v(" "),r("li",[e._v("Lucas Charles")]),e._v(" "),r("li",[e._v("Piotr Gajowniczek")]),e._v(" "),r("li",[e._v("Darren Anderson")]),e._v(" "),r("li",[e._v("Noam Yogev")]),e._v(" "),r("li",[e._v("Josh Goldberg")]),e._v(" "),r("li",[e._v("Karol Majewski")])]),e._v(" "),r("h2",{attrs:{id:"v5-13-1"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v5-13-1","aria-hidden":"true"}},[e._v("#")]),e._v(" v5.13.1")]),e._v(" "),r("ul",[r("li",[e._v("[bugfix] Fix regression in CheckstyleFormatter backwards compatibility (#4561)")])]),e._v(" "),r("h2",{attrs:{id:"v5-13-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v5-13-0","aria-hidden":"true"}},[e._v("#")]),e._v(" v5.13.0")]),e._v(" "),r("ul",[r("li",[e._v("[deprecation] Mark "),r("code",[e._v("RuleWalker")]),e._v(" and "),r("code",[e._v("ProgramAwareRuleWalker")]),e._v(" as deprecated (#4413)")]),e._v(" "),r("li",[e._v("[bugfix] Create output directory when the output path (specified by "),r("code",[e._v("--out")]),e._v(" CLI flag) does not exist. (#4507)")]),e._v(" "),r("li",[e._v("[bugfix] Explicit disabling of rules is now copied over to jsRules when using "),r("code",[e._v("jsRules: true")]),e._v(" (#4517)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("unknown")]),e._v(" is recognized as simple type in "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/array-type/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("array-type")]),r("OutboundLink")],1),e._v(" (#4433)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/ban/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("ban")]),r("OutboundLink")],1),e._v(": Fix a false positive which would occur when banning method calls nested inside objects. Previously, banning "),r("code",[e._v('["a", "b", "c"]')]),e._v(" would trigger lint failures on the syntax "),r("code",[e._v("b.c()")]),e._v(", which was not the intent of this rule. (#4383)")]),e._v(" "),r("li",[e._v("[bugfix] Fixed single-line comment parsing for completed-docs (#3557)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/trailing-comma/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("trailing-comma")]),r("OutboundLink")],1),e._v(" no longer crashes if it cannot find the closing parenthesis of a function declaration (#4457)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-unsafe-any/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-unsafe-any")]),r("OutboundLink")],1),e._v(": allow implicitly downcasting "),r("code",[e._v("any")]),e._v(" to "),r("code",[e._v("unknown")]),e._v(" (#4442)")]),e._v(" "),r("li",[e._v("[bugfix] Add "),r("code",[e._v("grouped-imports")]),e._v(" to "),r("code",[e._v("tslint:all")]),e._v(" (#4420)")]),e._v(" "),r("li",[e._v("[docs] Fix docs typo (#4395)")]),e._v(" "),r("li",[e._v('[enhancement] Add "formatting" rule category (#2832)')]),e._v(" "),r("li",[e._v("[enhancement]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/ordered-imports/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("ordered-imports")]),r("OutboundLink")],1),e._v(" now supports a groups option to provide custom grouping rules. (#4134)")]),e._v(" "),r("li",[e._v("[enhancement] Convert "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/completed-docs/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("completed-docs")]),r("OutboundLink")],1),e._v(" to an untyped rule (#3557)")]),e._v(" "),r("li",[e._v("[enhancement] Checkstyle formatter includes every file linted regardless of lint errors. (#3838)")]),e._v(" "),r("li",[e._v("[enhancement] Formatters now receive the full list of of linted file paths as a third argument. (#3838)")]),e._v(" "),r("li",[e._v("[enhancement]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/array-type/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("array-type")]),r("OutboundLink")],1),e._v(" rule handles Typescript 3.0's unknown type properly (#4219)")]),e._v(" "),r("li",[e._v("[enhancement]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/import-blacklist/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("import-blacklist")]),r("OutboundLink")],1),e._v(" now supports regular expression patterns for blacklisting (#3504)")]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("no-restricted-globals")]),e._v(" (#3824)")]),e._v(" "),r("li",[e._v("[new-fixer] added fixer for "),r("code",[e._v("newline-before-return")]),e._v(" rule (#4482)")]),e._v(" "),r("li",[e._v("[new-fixer]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/number-literal-format/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("number-literal-format")]),r("OutboundLink")],1),e._v(" now includes auto fix (#4496)")]),e._v(" "),r("li",[e._v("[new-rule-option] Added "),r("code",[e._v("whitelist")]),e._v(" option to "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-unbound-method/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-unbound-method")]),r("OutboundLink")],1),e._v(" (#4472)")]),e._v(" "),r("li",[e._v("[new-rule-option] Added "),r("code",[e._v("jsx-ignore")]),e._v(" option to "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-magic-numbers/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-magic-numbers")]),r("OutboundLink")],1),e._v(" rule (#4460)")]),e._v(" "),r("li",[e._v("[new-rule-option]: "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/object-literal-sort-keys/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("object-literal-sort-keys")]),r("OutboundLink")],1),e._v(": Add "),r("code",[e._v("match-declaration-order-only")]),e._v(" option (#3748)")]),e._v(" "),r("li",[e._v("[new-rule-option]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/strict-boolean-expressions/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("strict-boolean-expressions")]),r("OutboundLink")],1),e._v(" accepts "),r("code",[e._v("ignore-rhs")]),e._v(" option to disable checking the right-hand side of the "),r("code",[e._v("&&")]),e._v(" and "),r("code",[e._v("||")]),e._v(" operators as strictly boolean. (#4159)")])]),e._v(" "),r("p",[e._v("Thanks to our contributors!")]),e._v(" "),r("ul",[r("li",[e._v("Enes SOYLU")]),e._v(" "),r("li",[e._v("jbsingh")]),e._v(" "),r("li",[e._v("Sven Efftinge")]),e._v(" "),r("li",[e._v("James C. Davis")]),e._v(" "),r("li",[e._v("Norio Suzuki")]),e._v(" "),r("li",[e._v("Thomas den Hollander")]),e._v(" "),r("li",[e._v("Retsam")]),e._v(" "),r("li",[e._v("Dobes Vandermeer")]),e._v(" "),r("li",[e._v("Young Min Kim")]),e._v(" "),r("li",[e._v("Grant Wu")]),e._v(" "),r("li",[e._v("Felix Schindler")]),e._v(" "),r("li",[e._v("Lydia")]),e._v(" "),r("li",[e._v("Adrian Leonhard")]),e._v(" "),r("li",[e._v("James Jensen")]),e._v(" "),r("li",[e._v("Athene Noctua")]),e._v(" "),r("li",[e._v("Allen")]),e._v(" "),r("li",[e._v("Vincent Langlet")]),e._v(" "),r("li",[e._v("Paul Medynski")]),e._v(" "),r("li",[e._v("Liz")]),e._v(" "),r("li",[e._v("Piotr Gajowniczek")]),e._v(" "),r("li",[e._v("Max Sysoev")]),e._v(" "),r("li",[e._v("Jakub Beneš")]),e._v(" "),r("li",[e._v("Ian Mobley")]),e._v(" "),r("li",[e._v("周昊宇")]),e._v(" "),r("li",[e._v("Nazanin Delam")]),e._v(" "),r("li",[e._v("Matt R. Wilson")]),e._v(" "),r("li",[e._v("Andy Hanson")]),e._v(" "),r("li",[e._v("Zen")]),e._v(" "),r("li",[e._v("Josh Goldberg")]),e._v(" "),r("li",[e._v("Jeff Lau")])]),e._v(" "),r("h2",{attrs:{id:"v5-12-1"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v5-12-1","aria-hidden":"true"}},[e._v("#")]),e._v(" v5.12.1")]),e._v(" "),r("h2",{attrs:{id:"bugfixes-enhancements"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#bugfixes-enhancements","aria-hidden":"true"}},[e._v("#")]),e._v(" 🛠 Bugfixes & enhancements")]),e._v(" "),r("ul",[r("li",[e._v("[bugfix] Revert breaking change to tslint:recommended, update tslint:latest (#4404)")]),e._v(" "),r("li",[e._v("[bugfix] Correcting fixer for the "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/increment-decrement/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("increment-decrement")]),r("OutboundLink")],1),e._v(" rule (#4415)")]),e._v(" "),r("li",[e._v("[bugfix] Fix "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/strict-type-predicates/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("strict-type-predicates")]),r("OutboundLink")],1),e._v(" with "),r("code",[e._v("unknown")]),e._v(" (#4444)")]),e._v(" "),r("li",[e._v("[bugfix] Skip linting of "),r("code",[e._v(".json")]),e._v(" files to avoid problems with "),r("code",[e._v("--resolveJsonModule")]),e._v(" compiler option (#4001)")]),e._v(" "),r("li",[e._v("[bugfix] fix some "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/quotemark/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("quotemark")]),r("OutboundLink")],1),e._v(" issues when using backticks with the "),r("code",[e._v("avoid-template")]),e._v(" option (#4408)")]),e._v(" "),r("li",[e._v("[enhancement] Mention file names in test script parse failures (#4397)")])]),e._v(" "),r("p",[e._v("Thanks to our contributors!")]),e._v(" "),r("ul",[r("li",[e._v("Young Min Kim")]),e._v(" "),r("li",[e._v("Enes SOYLU")]),e._v(" "),r("li",[e._v("Thomas den Hollander")]),e._v(" "),r("li",[e._v("Adrian Leonhard")])]),e._v(" "),r("h2",{attrs:{id:"v5-12-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v5-12-0","aria-hidden":"true"}},[e._v("#")]),e._v(" v5.12.0")]),e._v(" "),r("h2",{attrs:{id:"features"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#features","aria-hidden":"true"}},[e._v("#")]),e._v(" 🎉 Features")]),e._v(" "),r("ul",[r("li",[e._v("[feature] Configure format from file (#4155)")]),e._v(" "),r("li",[e._v("[feature] Make cli expect array for rules dir (#3788)")]),e._v(" "),r("li",[e._v("[feature] Set js rules to all valid active rules (#3641)")]),e._v(" "),r("li",[e._v("[improvement] Add tests for typescript@2.9 and typescript@3.0 (#4053)")]),e._v(" "),r("li",[e._v("[new-fixer]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/type-literal-delimiter/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("type-literal-delimiter")]),r("OutboundLink")],1),e._v(" (#3964)")]),e._v(" "),r("li",[e._v("[new-rule-option]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/whitespace/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("whitespace")]),r("OutboundLink")],1),e._v(" Add whitespace rule for open braces (#4068)")]),e._v(" "),r("li",[e._v("[new-rule-option]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/file-name-casing/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("file-name-casing")]),r("OutboundLink")],1),e._v(": Add file name whitelist (#4206)")]),e._v(" "),r("li",[e._v("[new-rule-option]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/object-literal-sort-keys/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("object-literal-sort-keys")]),r("OutboundLink")],1),e._v(": "),r("code",[e._v("locale-compare")]),e._v(" (#4193)")]),e._v(" "),r("li",[e._v("[new-rule-option]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/strict-boolean-expressions/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("strict-boolean-expressions")]),r("OutboundLink")],1),e._v(" adds "),r("code",[e._v("allow-enum")]),e._v(" to allow using enums in boolean expressions (#3604)")]),e._v(" "),r("li",[e._v("[new-rule-option]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/import-blacklist/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("import-blacklist")]),r("OutboundLink")],1),e._v(": support blacklisting specific named exports (#3926)")]),e._v(" "),r("li",[e._v("[new-rule-option]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/type-literal-delimiter/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("type-literal-delimiter")]),r("OutboundLink")],1),e._v(": Add "),r("code",[e._v('{ singleLine: "always" | "never"}')]),e._v(" (#3964)")]),e._v(" "),r("li",[e._v("[new-rule-option]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/file-name-casing/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("file-name-casing")]),r("OutboundLink")],1),e._v(": Add "),r("code",[e._v("snake-case")]),e._v(" option (#4081)")]),e._v(" "),r("li",[e._v("[new-rule-option]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/file-header/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("file-header")]),r("OutboundLink")],1),e._v(": Enforce Blank Line after File Header (#3740)")]),e._v(" "),r("li",[e._v("[new-rule]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/ban-ts-ignore/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("ban-ts-ignore")]),r("OutboundLink")],1),e._v(" (#3728)")]),e._v(" "),r("li",[e._v("[new-rule]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/function-constructor/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("function-constructor")]),r("OutboundLink")],1),e._v(" (#4198)")]),e._v(" "),r("li",[e._v("[new-rule]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/increment-decrement/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("increment-decrement")]),r("OutboundLink")],1),e._v(" (#3575)")]),e._v(" "),r("li",[e._v("[new-rule]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-default-import/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-default-import")]),r("OutboundLink")],1),e._v(" (#4023)")]),e._v(" "),r("li",[e._v("[new-rule]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/unnecessary-constructor/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("unnecessary-constructor")]),r("OutboundLink")],1),e._v(" (#3647)")]),e._v(" "),r("li",[e._v("[new-rule]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/comment-type/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("comment-type")]),r("OutboundLink")],1),e._v(" (#4008)")]),e._v(" "),r("li",[e._v("[new-rule]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/unnecessary-bind/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("unnecessary-bind")]),r("OutboundLink")],1),e._v(" (#3588)")])]),e._v(" "),r("h2",{attrs:{id:"bugfixes-enhancements-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#bugfixes-enhancements-2","aria-hidden":"true"}},[e._v("#")]),e._v(" 🛠 Bugfixes & enhancements")]),e._v(" "),r("ul",[r("li",[e._v("[api] Allow "),r("code",[e._v("exclude")]),e._v(" to work with node API (#4143)")]),e._v(" "),r("li",[e._v("[api] Upgrade TSLint to support TS 3.1 (#4274)")]),e._v(" "),r("li",[e._v("[bugfix] Allow whitelisted modules to start with "),r("code",[e._v("@")]),e._v(" symbol (#4192)")]),e._v(" "),r("li",[e._v("[bugfix] Added exception for generators in "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/return-undefined/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("return-undefined")]),r("OutboundLink")],1),e._v(" rule (#4370)")]),e._v(" "),r("li",[e._v("[bugfix] Allow unknown in 'no-object-literal-type-assertion' rule. (#4362)")]),e._v(" "),r("li",[e._v("[bugfix] Completed docs rule can check single-line comments (#3841)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/prefer-method-signature/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("prefer-method-signature")]),r("OutboundLink")],1),e._v(": Correct the auto-fix code of rule, now capable to handle multiline signature. (#4066)")]),e._v(" "),r("li",[e._v("[bugfix] Default logger.error should log to stderr. (#3982)")]),e._v(" "),r("li",[e._v("[bugfix] Fixes an issue where TSLint doesn't correctly resolve packages in a "),r("code",[e._v("node_modules")]),e._v(" folder that are symlinked to another location where their dependencies are satisfied. (#4295)")]),e._v(" "),r("li",[e._v("[bugfix] Fix configuration tests when comparing rules (#4346)")]),e._v(" "),r("li",[e._v("[bugfix] Fix semicolon: Cannot read property 'initializer' of undefined (#4351)")]),e._v(" "),r("li",[e._v("[bugfix] Fix whitespace rule in importClause with 'as' statement (#4249)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-invalid-this/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-invalid-this")]),r("OutboundLink")],1),e._v(": fixes false positives on method-like syntax and false negatives on nested functions (#4034)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/one-line/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("one-line")]),r("OutboundLink")],1),e._v(": Check block in a case clause (#3619)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/whitespace/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("whitespace")]),r("OutboundLink")],1),e._v(" Don't require space between import and paren with in type imports (#4243)")]),e._v(" "),r("li",[e._v("[bugfix] remove "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-unused-variable/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-unused-variable")]),r("OutboundLink")],1),e._v(" from "),r("code",[e._v("tslint:all")]),e._v(" (#4079)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/callable-types/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("callable-types")]),r("OutboundLink")],1),e._v(" support interfaces containing a single construct signature (#4291) (#4352)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/ordered-imports/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("ordered-imports")]),r("OutboundLink")],1),e._v(": Setting "),r("code",[e._v("import-sources-order: any")]),e._v(" no longer invalidates "),r("code",[e._v("grouped-imports: true")]),e._v(" (#4374)")]),e._v(" "),r("li",[e._v("[develop] Add issue templates (#4028)")]),e._v(" "),r("li",[e._v("[develop] Add test for 3.0 (#4119)")]),e._v(" "),r("li",[e._v("[develop] Changes the node version from 4 to 6 for TS 2.1 tests. (#4282)")]),e._v(" "),r("li",[e._v("[develop] Fix prettier command in package.json (#4275)")]),e._v(" "),r("li",[e._v("[develop] Fix semantic merge break from #4374 and #3733 (#4378)")]),e._v(" "),r("li",[e._v("[develop] Fix typo in launch.json (#4287)")]),e._v(" "),r("li",[e._v("[develop] Prettier (#4012)")]),e._v(" "),r("li",[e._v("[develop] Re-ran Prettier on source files again, with some more ignores (#4270)")]),e._v(" "),r("li",[e._v("[develop] Update 'json-stringify-pretty-compact' to 1.2.0 and remove unnecessary type declaration (#4371)")]),e._v(" "),r("li",[e._v("[develop] Upgrade prettier and run over all files (#4214)")]),e._v(" "),r("li",[e._v('[docs] "< 0" means less than zero, not greater than (#4183)')]),e._v(" "),r("li",[e._v("[docs] Added badges for dependencies status (#4160)")]),e._v(" "),r("li",[e._v("[docs] Additional code examples for rules (#3869)")]),e._v(" "),r("li",[e._v("[docs] Clarify no-shadowed-variable doc (#4347)")]),e._v(" "),r("li",[e._v("[docs] Fix docs typo (#4165)")]),e._v(" "),r("li",[e._v("[docs] Fix docs typo (#4182)")]),e._v(" "),r("li",[e._v("[docs] Fix typo in index.md (#4242)")]),e._v(" "),r("li",[e._v("[docs] Fix typos in formatter descriptions (#4288)")]),e._v(" "),r("li",[e._v("[docs] Fixed typo in documentation (#4047)")]),e._v(" "),r("li",[e._v("[docs] Includes new name Azure DevOps for VSO (#4289)")]),e._v(" "),r("li",[e._v("[docs] Typo correction in no-unused-expression (#4322)")]),e._v(" "),r("li",[e._v("[docs] Update documentation to reflect changes made in #2229. (#4336)")]),e._v(" "),r("li",[e._v("[docs] Update stylish example (#4095)")]),e._v(" "),r("li",[e._v("[docs] Use latest docs deps to avoid vulnerable libs (#4366)")]),e._v(" "),r("li",[e._v("[docs] prefer-object-spread: this is new to ES2018, not ES2015 (#4321)")]),e._v(" "),r("li",[e._v("[documentation] Update configuration documentation to include array syntax (#4258)")]),e._v(" "),r("li",[e._v("[enhancement] Add "),r("code",[e._v("homepage")]),e._v(" to package.json (#4101)")]),e._v(" "),r("li",[e._v("[enhancement] Add esSpecCompliant: true to recommended trailing-comma config (#4072)")]),e._v(" "),r("li",[e._v("[enhancement] Add new tests to workflows (#4054)")]),e._v(" "),r("li",[e._v("[enhancement] Add quiet flag to hide warnings (#4025)")]),e._v(" "),r("li",[e._v("[enhancement] Don't flag unmatched ${ in no-invalid-template-strings (#3769)")]),e._v(" "),r("li",[e._v("[enhancement] Show offending value in 'no-magic-numbers' error message (#4332)")]),e._v(" "),r("li",[e._v("[enhancement]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/ordered-imports/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("ordered-imports")]),r("OutboundLink")],1),e._v(": When "),r("code",[e._v("grouped-imports")]),e._v(" option of the rule is set, the fact that imports of the same type are all in one group is also checked. (#3733)")]),e._v(" "),r("li",[e._v("[enhancement] Yaml parser now uses default schema, allowing for "),r("code",[e._v("<<:")]),e._v(" to be used to merge anchors (#4350)")]),e._v(" "),r("li",[e._v("[enhancement] Improve JUnit formatter (#4327)")]),e._v(" "),r("li",[e._v("[enhancement] completed-docs: check properties and methods in interfaces (#4032)")]),e._v(" "),r("li",[e._v("[enhancement] file-name-casing-rule supports regex expression for matching file (#4284)")]),e._v(" "),r("li",[e._v("[enhancement] prose formatter uses "),r("code",[e._v("line:column")]),e._v(" instead of "),r("code",[e._v("[line, column]")]),e._v(" (#4222)")]),e._v(" "),r("li",[e._v('[rule-change] Add "backtick" option for quotemark (#4029)')]),e._v(" "),r("li",[e._v("[rule-change] Allow void expressions in binary expressions (#4323)")])]),e._v(" "),r("p",[e._v("Thanks to our contributors!")]),e._v(" "),r("ul",[r("li",[e._v("Shinigami")]),e._v(" "),r("li",[e._v("Matthew Herbst")]),e._v(" "),r("li",[e._v("Joshua R")]),e._v(" "),r("li",[e._v("John Wiseheart")]),e._v(" "),r("li",[e._v("Mitchell Wills")]),e._v(" "),r("li",[e._v("Eric Ferreira")]),e._v(" "),r("li",[e._v("Daniel Reichhart")]),e._v(" "),r("li",[e._v("Rui")]),e._v(" "),r("li",[e._v("Pavel Birukov")]),e._v(" "),r("li",[e._v("Brian Schlenker")]),e._v(" "),r("li",[e._v("Michael Black")]),e._v(" "),r("li",[e._v("Andy Hanson")]),e._v(" "),r("li",[e._v("atsu85")]),e._v(" "),r("li",[e._v("PomanoB")]),e._v(" "),r("li",[e._v("Oleg Vaskevich")]),e._v(" "),r("li",[e._v("Daniel McNab")]),e._v(" "),r("li",[e._v("Jan Pilzer")]),e._v(" "),r("li",[e._v("Sebastian Silbermann")]),e._v(" "),r("li",[e._v("Michael Lavina")]),e._v(" "),r("li",[e._v("reduckted")]),e._v(" "),r("li",[e._v("Ryan Waskiewicz")]),e._v(" "),r("li",[e._v("Bowen Ni")]),e._v(" "),r("li",[e._v("Josh Goldberg")]),e._v(" "),r("li",[e._v("Erik")]),e._v(" "),r("li",[e._v("Nathan")]),e._v(" "),r("li",[e._v("Kevin Verdieck")]),e._v(" "),r("li",[e._v("Joe Chung")]),e._v(" "),r("li",[e._v("Peter Safranek")]),e._v(" "),r("li",[e._v("Xavier Downs")]),e._v(" "),r("li",[e._v("Igor Ovsiannikov")]),e._v(" "),r("li",[e._v("RyosukeFukushima")]),e._v(" "),r("li",[e._v("Andrew Boyton")]),e._v(" "),r("li",[e._v("samuela")]),e._v(" "),r("li",[e._v("stefanhamburger")]),e._v(" "),r("li",[e._v("Carsten Dietzel")]),e._v(" "),r("li",[e._v("Jakob Warkotsch")]),e._v(" "),r("li",[e._v("Karthick Manoharan")]),e._v(" "),r("li",[e._v("Ian Clanton-Thuon")]),e._v(" "),r("li",[e._v("Yordis Prieto")]),e._v(" "),r("li",[e._v("Mike Frysinger")]),e._v(" "),r("li",[e._v("Dario Banfi")]),e._v(" "),r("li",[e._v("Gérôme Grignon")]),e._v(" "),r("li",[e._v("Antony74")]),e._v(" "),r("li",[e._v("Morgan Zolob")]),e._v(" "),r("li",[e._v("Young Min Kim")]),e._v(" "),r("li",[e._v("rrogowski")]),e._v(" "),r("li",[e._v("Eric Anderson")]),e._v(" "),r("li",[e._v("Simon Marchi")]),e._v(" "),r("li",[e._v("ulrichb")]),e._v(" "),r("li",[e._v("Marvin Altemeier")]),e._v(" "),r("li",[e._v("Ifiok Jr")]),e._v(" "),r("li",[e._v("Andrew MacLeay")]),e._v(" "),r("li",[e._v("Ethan")]),e._v(" "),r("li",[e._v("Dan Homola")]),e._v(" "),r("li",[e._v("NN")]),e._v(" "),r("li",[e._v("Roman Rogowski")])]),e._v(" "),r("h2",{attrs:{id:"v5-11-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v5-11-0","aria-hidden":"true"}},[e._v("#")]),e._v(" v5.11.0")]),e._v(" "),r("h2",{attrs:{id:"deprecations"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#deprecations","aria-hidden":"true"}},[e._v("#")]),e._v(" ⚠️ Deprecations")]),e._v(" "),r("ul",[r("li",[e._v("[deprecation] "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-unused-variable/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-unused-variable")]),r("OutboundLink")],1),e._v(" is deprecated because typescript now covers most of its functionality (#3919)")])]),e._v(" "),r("h2",{attrs:{id:"features-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#features-2","aria-hidden":"true"}},[e._v("#")]),e._v(" 🎉 Features")]),e._v(" "),r("ul",[r("li",[e._v("[new-rule]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/file-name-casing/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("file-name-casing")]),r("OutboundLink")],1),e._v(" (#3978)")]),e._v(" "),r("li",[e._v("[new-fixer] Add fixer for "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/switch-final-break/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("switch-final-break")]),r("OutboundLink")],1),e._v(" (#3615)")]),e._v(" "),r("li",[e._v("[new-fixer] Implemented fixer for "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/member-ordering/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("member-ordering")]),r("OutboundLink")],1),e._v(" and added corresponding tests. (#3935)")]),e._v(" "),r("li",[e._v("[new-rule-option] Add whitelist for "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-implicit-dependencies/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-implicit-dependencies")]),r("OutboundLink")],1),e._v(" (#3979)")])]),e._v(" "),r("h2",{attrs:{id:"bugfixes-enhancements-3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#bugfixes-enhancements-3","aria-hidden":"true"}},[e._v("#")]),e._v(" 🛠 Bugfixes & enhancements")]),e._v(" "),r("ul",[r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-use-before-declare/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-use-before-declare")]),r("OutboundLink")],1),e._v(" Fixes false positives when using the destructuring syntax (#3761) (#3876)")]),e._v(" "),r("li",[e._v("[bugfix] Fix Copyright: @license JSDoc tag was missing (#3879)")]),e._v(" "),r("li",[e._v("[bugfix] Fix missing newline at end of file (#3896)")]),e._v(" "),r("li",[e._v("[bugfix] allow-empty-functions option of "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-empty/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-empty")]),r("OutboundLink")],1),e._v(" rule is now properly respecting empty methods (#3897)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-magic-numbers/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-magic-numbers")]),r("OutboundLink")],1),e._v(" - support for negative zero (#3903)")]),e._v(" "),r("li",[e._v("[bugfix] Handle tsconfig.json errors without using JSON.stringify (#3908)")]),e._v(" "),r("li",[e._v("[bugfix] Fix CI: "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-implicit-dependencies/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-implicit-dependencies")]),r("OutboundLink")],1),e._v(" test failure; typescript@next failure (#4019)")]),e._v(" "),r("li",[e._v("[bugfix] Fix edge case in "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-console/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-console")]),r("OutboundLink")],1),e._v(" rule (#4041)")]),e._v(" "),r("li",[e._v("[docs] Fix typos in the "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-floating-promises/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-floating-promises")]),r("OutboundLink")],1),e._v(" rule docs. (#3886)")]),e._v(" "),r("li",[e._v("[docs] Updated "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/prefer-while/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("prefer-while")]),r("OutboundLink")],1),e._v(" docs to be semantically correct (#3888)")]),e._v(" "),r("li",[e._v("[docs] Fix link to configuration page (#3891)")]),e._v(" "),r("li",[e._v("[docs] Fix docs typo (#3898)")]),e._v(" "),r("li",[e._v("[docs] Fix docs typo (#3910)")]),e._v(" "),r("li",[e._v("[enhancement] Turn on strictPropertyInitialization for src/ and test/ (#3924)")]),e._v(" "),r("li",[e._v("[enhancement] Use Buffer.allocUnsafe instead of the deprecated new Buffer() (#3985)")]),e._v(" "),r("li",[e._v("[enhancement] Improve "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/radix/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("radix")]),r("OutboundLink")],1),e._v(" rule checks (#3901)")]),e._v(" "),r("li",[e._v("[enhancement] Output +/- on diff so added/removed empty lines are visible. (#3973)")]),e._v(" "),r("li",[e._v("[rule-change]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-implicit-dependencies/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-implicit-dependencies")]),r("OutboundLink")],1),e._v(" now always considers peer dependencies (#3875)")])]),e._v(" "),r("p",[e._v("Thanks to our contributors!")]),e._v(" "),r("ul",[r("li",[e._v("Bowen Ni")]),e._v(" "),r("li",[e._v("Peter Safranek")]),e._v(" "),r("li",[e._v("Saugat Acharya")]),e._v(" "),r("li",[e._v("Jason Mendes")]),e._v(" "),r("li",[e._v("Ryan Waskiewicz")]),e._v(" "),r("li",[e._v("Dariusz Rumiński")]),e._v(" "),r("li",[e._v("Xinhu Liu")]),e._v(" "),r("li",[e._v("Rado Kirov")]),e._v(" "),r("li",[e._v("aervin_")]),e._v(" "),r("li",[e._v("Josh Goldberg")]),e._v(" "),r("li",[e._v("mertdeg2")]),e._v(" "),r("li",[e._v("Jason Killian")]),e._v(" "),r("li",[e._v("Adrian Leonhard")]),e._v(" "),r("li",[e._v("david-cannady")]),e._v(" "),r("li",[e._v("Andy Russell")]),e._v(" "),r("li",[e._v("Tibor Blenessy")]),e._v(" "),r("li",[e._v("Andrew Crites")]),e._v(" "),r("li",[e._v("Pavel Birukov")]),e._v(" "),r("li",[e._v("shalomdotnet")])]),e._v(" "),r("h2",{attrs:{id:"v5-10-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v5-10-0","aria-hidden":"true"}},[e._v("#")]),e._v(" v5.10.0")]),e._v(" "),r("h2",{attrs:{id:"features-3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#features-3","aria-hidden":"true"}},[e._v("#")]),e._v(" 🎉 Features")]),e._v(" "),r("ul",[r("li",[e._v("[new-rule]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/prefer-while/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("prefer-while")]),r("OutboundLink")],1),e._v(" (#3750)")]),e._v(" "),r("li",[e._v("[new-fixer]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/comment-format/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("comment-format")]),r("OutboundLink")],1),e._v(" (#3845)")]),e._v(" "),r("li",[e._v("[new-rule-option] "),r("code",[e._v('"allow-empty-functions"')]),e._v(" for "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-empty/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-empty")]),r("OutboundLink")],1),e._v(" rule (#3624)")]),e._v(" "),r("li",[e._v("[new-rule-option] New options for "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/promise-function-async/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("promise-function-async")]),r("OutboundLink")],1),e._v(" specifying what kinds of functions to check (#3807)")])]),e._v(" "),r("h2",{attrs:{id:"bugfixes-enhancements-4"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#bugfixes-enhancements-4","aria-hidden":"true"}},[e._v("#")]),e._v(" 🛠 Bugfixes & enhancements")]),e._v(" "),r("ul",[r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/file-header/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("file-header")]),r("OutboundLink")],1),e._v(" rule plays nice with "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-trailing-whitespace/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-trailing-whitespace")]),r("OutboundLink")],1),e._v(" rule (#3802)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-unbound-method/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-unbound-method")]),r("OutboundLink")],1),e._v(" rule allows square bracket property access (#3610)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-unsafe-any/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-unsafe-any")]),r("OutboundLink")],1),e._v(" no longer marks native JSX elements as unsafe (#3699)")]),e._v(" "),r("li",[e._v("[enhancement]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/file-header/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("file-header")]),r("OutboundLink")],1),e._v(" auto-fixes use '!' character to ensure header stays above imports (#3741)")]),e._v(" "),r("li",[e._v("[enhancement] Better error messages if a rule crashes (#3836)")]),e._v(" "),r("li",[e._v("[enhancement] Better error messages when no valid rules are specified (#3729)")]),e._v(" "),r("li",[e._v("[enhancement] Better lint messages for unused imports in "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-unused-variable/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-unused-variable")]),r("OutboundLink")],1),e._v(" rule (#3831)")]),e._v(" "),r("li",[e._v("[docs] Improve documentation of cli flag --project (#3703)")]),e._v(" "),r("li",[e._v("[docs] Added short rationales for about thirty rules (#3734)")]),e._v(" "),r("li",[e._v("[docs] Added optional capability to provide code examples in rules' metadata (#3602)")]),e._v(" "),r("li",[e._v("[docs] Many small docs fixes and tweaks from many great contributors!")])]),e._v(" "),r("p",[e._v("Thanks to our contributors!")]),e._v(" "),r("ul",[r("li",[e._v("Achim Weimert")]),e._v(" "),r("li",[e._v("BB9z")]),e._v(" "),r("li",[e._v("Blair Zajac")]),e._v(" "),r("li",[e._v("Chia-Lun Wu (Leo)")]),e._v(" "),r("li",[e._v("Ethan")]),e._v(" "),r("li",[e._v("Janis Koehr")]),e._v(" "),r("li",[e._v("Josh Goldberg")]),e._v(" "),r("li",[e._v("Julian Verdurmen")]),e._v(" "),r("li",[e._v("Lucas Sloan")]),e._v(" "),r("li",[e._v("Mark Vincze")]),e._v(" "),r("li",[e._v("Martin Möhwald")]),e._v(" "),r("li",[e._v("Oliver Joseph Ash")]),e._v(" "),r("li",[e._v("Pichest Wongsiripiphat")]),e._v(" "),r("li",[e._v("Rafael Santana")]),e._v(" "),r("li",[e._v("Ruben Bridgewater")]),e._v(" "),r("li",[e._v("Ryan Waskiewicz")]),e._v(" "),r("li",[e._v("Sehrope Sarkuni")]),e._v(" "),r("li",[e._v("Suchan Lee")]),e._v(" "),r("li",[e._v("Victor Belozyorov")]),e._v(" "),r("li",[e._v("aervin_")]),e._v(" "),r("li",[e._v("cwgorman")]),e._v(" "),r("li",[e._v("felipeissa")]),e._v(" "),r("li",[e._v("jishi9")])]),e._v(" "),r("h2",{attrs:{id:"v5-9-1"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v5-9-1","aria-hidden":"true"}},[e._v("#")]),e._v(" v5.9.1")]),e._v(" "),r("h2",{attrs:{id:"bugfixes"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#bugfixes","aria-hidden":"true"}},[e._v("#")]),e._v(" 🛠 Bugfixes")]),e._v(" "),r("ul",[r("li",[e._v("[bugfix] Removed extraneous deprecation warning produced when using "),r("code",[e._v("tslint:recommended")]),e._v(" or "),r("code",[e._v("tslint:latest")]),e._v(" by disabling "),r("code",[e._v("typeof-compare")]),e._v(" in these rulesets. (#3639)")]),e._v(" "),r("li",[e._v("[bugfix] Resolve directories as absolute paths when validating custom "),r("code",[e._v("rulesDirectory")]),e._v(" paths, which fixes usage with tslint-loader. (#3640)")])]),e._v(" "),r("h2",{attrs:{id:"v5-9-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v5-9-0","aria-hidden":"true"}},[e._v("#")]),e._v(" v5.9.0")]),e._v(" "),r("h2",{attrs:{id:"deprecations-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#deprecations-2","aria-hidden":"true"}},[e._v("#")]),e._v(" ⚠️ Deprecations")]),e._v(" "),r("ul",[r("li",[e._v("[deprecation] Several utility functions from "),r("code",[e._v("src/language/utils.ts")]),e._v(" have been deprecated (#3476)")]),e._v(" "),r("li",[e._v("[deprecation] Linting non-existent files now outputs a warning. This will be an error in TSLint 6. (#3313)")])]),e._v(" "),r("h2",{attrs:{id:"configuration-inheritance-changes"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#configuration-inheritance-changes","aria-hidden":"true"}},[e._v("#")]),e._v(" Configuration inheritance changes")]),e._v(" "),r("p",[e._v("Significant changes have been made to configuration inheritance to address a long-standing UX issue around "),r("code",[e._v("defaultSeverity")]),e._v(": #2569.")]),e._v(" "),r("p",[r("code",[e._v("defaultSeverity")]),e._v(" defined in a "),r("code",[e._v("tslint.json")]),e._v(" file will now override the "),r("code",[e._v("defaultSeverity")]),e._v(" value defined in any configurations you are extending.\nThis means that any rules specified in the base configurations can now take on a new "),r("code",[e._v("defaultSeverity")]),e._v(" if you so choose. If you extend multiple\nconfiguration files, the "),r("code",[e._v("defaultSeverity")]),e._v(" defined in the last one wins.")]),e._v(" "),r("p",[e._v("In practice, this allows users to, for example, more easily use the built-in TSLint configurations ("),r("code",[e._v("tslint:recommended")]),e._v(", "),r("code",[e._v("tslint:latest")]),e._v(", "),r("code",[e._v("tslint:all")]),e._v(")\nand treat all errors as warnings instead of errors.")]),e._v(" "),r("p",[e._v("For more details, see the relevant PRs:")]),e._v(" "),r("ul",[r("li",[e._v("Override "),r("code",[e._v("defaultSeverity")]),e._v(" defined in extended configs (#3449)")]),e._v(" "),r("li",[e._v("Inherit defaultSeverity and apply it to preceding base configs (#3530)")])]),e._v(" "),r("h2",{attrs:{id:"features-4"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#features-4","aria-hidden":"true"}},[e._v("#")]),e._v(" 🎉 Features")]),e._v(" "),r("ul",[r("li",[e._v("[feature] Support yaml configuration files (#1598) (#3433)")]),e._v(" "),r("li",[e._v("[new-fixer]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/file-header/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("file-header")]),r("OutboundLink")],1),e._v(" (#3475)")]),e._v(" "),r("li",[e._v("[new-rule]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-dynamic-delete/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-dynamic-delete")]),r("OutboundLink")],1),e._v(" (#3573)")]),e._v(" "),r("li",[e._v("[new-rule]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/prefer-readonly/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("prefer-readonly")]),r("OutboundLink")],1),e._v(" (#2896)")]),e._v(" "),r("li",[e._v("[new-rule]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/newline-per-chained-call/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("newline-per-chained-call")]),r("OutboundLink")],1),e._v(" (#3278)")]),e._v(" "),r("li",[e._v("[new-rule-option] "),r("code",[e._v('"temporalDeadZone"')]),e._v(" for "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-shadowed-variable/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-shadowed-variable")]),r("OutboundLink")],1),e._v(" to ignore shadowing in the temporal dead zone of classes, parameters, enums and variables declared with "),r("code",[e._v("let")]),e._v(" or "),r("code",[e._v("const")]),e._v("\n(#3389)")]),e._v(" "),r("li",[e._v("[new-rule-option] "),r("code",[e._v('"shorthand-first"')]),e._v(" for "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/object-literal-sort-keys/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("object-literal-sort-keys")]),r("OutboundLink")],1),e._v(" (#3607)")]),e._v(" "),r("li",[e._v("[new-rule-option] Add support for an ignore pattern for "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/max-line-length/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("max-line-length")]),r("OutboundLink")],1),e._v(" (#3099)")])]),e._v(" "),r("h2",{attrs:{id:"bugfixes-enhancements-5"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#bugfixes-enhancements-5","aria-hidden":"true"}},[e._v("#")]),e._v(" 🛠 Bugfixes & enhancements")]),e._v(" "),r("ul",[r("li",[e._v("[bugfix] Update commander.js dependency to prevent users from transitively installing a buggy 2.12.0 release (#3510)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("--project")]),e._v(" excludes all files of external dependencies (#3320)")]),e._v(" "),r("li",[e._v("[bugfix] Show errors when "),r("code",[e._v("tsconfig.json")]),e._v(" is invalid (#3410)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-implicit-dependencies/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-implicit-dependencies")]),r("OutboundLink")],1),e._v(" don't crash on malformed package.json (#3373)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/strict-type-predicates/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("strict-type-predicates")]),r("OutboundLink")],1),e._v(" allows comparing typeof result with non-literals (#3542)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-redundant-jsdoc/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-redundant-jsdoc")]),r("OutboundLink")],1),e._v(" fixed crash on unhandled tag (#3414)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/object-literal-sort-keys/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("object-literal-sort-keys")]),r("OutboundLink")],1),e._v(" fixed regression that effectively disabled the rule with "),r("code",[e._v("\\r\\n")]),e._v(" line breaks (#3427)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/curly/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("curly")]),r("OutboundLink")],1),e._v(" fixer now correctly handles comments (#3473)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-unsafe-any/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-unsafe-any")]),r("OutboundLink")],1),e._v(" fixed false-positive with namespaced types (#3487)")]),e._v(" "),r("li",[e._v("[bugfix] Removed potentailly dangerous fixer for "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-any/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-any")]),r("OutboundLink")],1),e._v(" (#3486)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-unnecessary-type-assertion/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-unnecessary-type-assertion")]),r("OutboundLink")],1),e._v(" fixed false negatives for types with numeric keys (#3468)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/callable-types/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("callable-types")]),r("OutboundLink")],1),e._v(" adds parentheses when fixing a type literal inside an array type (#3440)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-unsafe-any/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-unsafe-any")]),r("OutboundLink")],1),e._v(" allows spreading an "),r("code",[e._v("any")]),e._v(" value into an object (#3439)")]),e._v(" "),r("li",[e._v("[bugfix] no unnecessary whitespace before argument in callback functions fixed with "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/arrow-parens",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("arrow-parens")]),r("OutboundLink")],1),e._v(" fixer (#3618)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/prefer-const/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("prefer-const")]),r("OutboundLink")],1),e._v(" false negative with index signature named like a variable (#3385)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/whitespace",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("whitespace")]),r("OutboundLink")],1),e._v(" rule checks property declarations if "),r("code",[e._v('"check-decl"')]),e._v(" is enabled (#3546)")]),e._v(" "),r("li",[e._v("[bugfix] Using ternary operator for calling super() now passes "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-duplicate-super",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-duplicate-super")]),r("OutboundLink")],1),e._v(" rule. (#3544)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-shadowed-variable/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-shadowed-variable")]),r("OutboundLink")],1),e._v(" now excludes declaration files and ambient modules (#3387)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-duplicate-imports",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-duplicate-imports")]),r("OutboundLink")],1),e._v(" Allow duplicate imports from separate ambient module declarations (#3398)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/await-promise/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("await-promise")]),r("OutboundLink")],1),e._v(" correctly recognises classes extending Promise (#3383)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/prefer-conditional-expression/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("prefer-conditional-expression")]),r("OutboundLink")],1),e._v(": don't repeat error on nested if statements (#3528)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/completed-docs/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("completed-docs")]),r("OutboundLink")],1),e._v(": don't require documentation on methods in object literals (#3532)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/one-line/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("one-line")]),r("OutboundLink")],1),e._v(" fixed crash on syntax error in class or interface (#3538)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-redundant-jsdoc/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-redundant-jsdoc")]),r("OutboundLink")],1),e._v(" allow "),r("code",[e._v("@template")]),e._v(" tag if it has a description (#3415)")]),e._v(" "),r("li",[e._v("[bugfix] Fix condition for deprecation of "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/typeof-compare",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("typeof-compare")]),r("OutboundLink")],1),e._v(" (#3429)")]),e._v(" "),r("li",[e._v("[enhancement] Better error message for files not contained in the project (#3313)")]),e._v(" "),r("li",[e._v("[enhancement] "),r("code",[e._v('"properties"')]),e._v(" option for "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/completed-docs/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("completed-docs")]),r("OutboundLink")],1),e._v(" rule now checks getter and setter accessors. (#3497)")]),e._v(" "),r("li",[e._v("[enhancement]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-magic-numbers",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-magic-numbers")]),r("OutboundLink")],1),e._v(" ignores parseInt radix parameter (#3536)")]),e._v(" "),r("li",[e._v("[enhancement] Avoid duplicate I/O when using "),r("code",[e._v("--project")]),e._v(" option (#3313)")]),e._v(" "),r("li",[e._v("[enhancement] clicking the filename in "),r("code",[e._v("stylish")]),e._v("-formatter's output jumps to the first failure in that file. (#3491)")]),e._v(" "),r("li",[e._v("[enhancement]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/ban-comma-operator/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("ban-comma-operator")]),r("OutboundLink")],1),e._v(" ignores comma operator inside for-loop incrementor (#3485)")]),e._v(" "),r("li",[e._v("[enhancement]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/space-within-parens/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("space-within-parens")]),r("OutboundLink")],1),e._v(" updated to always allow empty parentheses "),r("code",[e._v("()")]),e._v(". (#3513)")]),e._v(" "),r("li",[e._v("[enhancement] Better error message syntax for "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/completed-docs/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("completed-docs")]),r("OutboundLink")],1),e._v(" modifier lists (#3379)")]),e._v(" "),r("li",[e._v("[enhancement] Improve failure message & docs for "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/ban-comma-operator/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("ban-comma-operator")]),r("OutboundLink")],1),e._v(" (#3384)")]),e._v(" "),r("li",[e._v("[enhancement] Output code warnings in yellow instead of red for codeFrame formatter (#3402)")]),e._v(" "),r("li",[e._v("[enhancement] Converted "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/completed-docs",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("completed-docs")]),r("OutboundLink")],1),e._v(" rule to use a function instead of a walker (#3466)")]),e._v(" "),r("li",[e._v("[docs]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/ban-comma-operator/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("ban-comma-operator")]),r("OutboundLink")],1),e._v(': fix metadata, list as "functionality" rule (#3612)')]),e._v(" "),r("li",[e._v("[docs] Enhance "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-use-before-declare/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-use-before-declare")]),r("OutboundLink")],1),e._v(" documentation to clarify the rule's status (#3520)")]),e._v(" "),r("li",[e._v("[docs] Enhance "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/await-promise/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("await-promise")]),r("OutboundLink")],1),e._v(" options documentation (#3519)")]),e._v(" "),r("li",[e._v("[docs] Add "),r("code",[e._v("hasFix")]),e._v(" metadata for the "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/indent",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("indent")]),r("OutboundLink")],1),e._v(" rule (#3529)")]),e._v(" "),r("li",[e._v("[docs] Clearer rule description for "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-irregular-whitespace",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-irregular-whitespace")]),r("OutboundLink")],1),e._v(" (#3627)")])]),e._v(" "),r("p",[e._v("Thanks to our contributors!")]),e._v(" "),r("ul",[r("li",[e._v("Klaus Meinhardt")]),e._v(" "),r("li",[e._v("Josh Goldberg")]),e._v(" "),r("li",[e._v("Chris Barr")]),e._v(" "),r("li",[e._v("Nathan Shively-Sanders")]),e._v(" "),r("li",[e._v("Jeremy Morton")]),e._v(" "),r("li",[e._v("Sergey Koshechkin")]),e._v(" "),r("li",[e._v("Daniel Kucal")]),e._v(" "),r("li",[e._v("Eric Smekens")]),e._v(" "),r("li",[e._v("Johannes Choo")]),e._v(" "),r("li",[e._v("Elena Vilchik")]),e._v(" "),r("li",[e._v("Eugene Timokhov")]),e._v(" "),r("li",[e._v("Carlo Bottiglieri")]),e._v(" "),r("li",[e._v("reduckted")]),e._v(" "),r("li",[e._v("Glavin Wiechert")]),e._v(" "),r("li",[e._v("jbsingh")]),e._v(" "),r("li",[e._v("Mateusz Witkowski")]),e._v(" "),r("li",[e._v("HideDev")]),e._v(" "),r("li",[e._v("Bruno Lemos")]),e._v(" "),r("li",[e._v("aervin_")]),e._v(" "),r("li",[e._v("Roman")]),e._v(" "),r("li",[e._v("Ryan Waskiewicz")])]),e._v(" "),r("h2",{attrs:{id:"v5-8-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v5-8-0","aria-hidden":"true"}},[e._v("#")]),e._v(" v5.8.0")]),e._v(" "),r("h2",{attrs:{id:"deprecations-3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#deprecations-3","aria-hidden":"true"}},[e._v("#")]),e._v(" ⚠️ Deprecations")]),e._v(" "),r("ul",[r("li",[e._v("[deprecation]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/typeof-compare/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("typeof-compare")]),r("OutboundLink")],1),e._v(" is deprecated because typescript already does that check (#3286)")]),e._v(" "),r("li",[e._v("[deprecation] CLI argument "),r("code",[e._v("--type-check")]),e._v(" is no longer necessary and will be removed in the next major version (#3322)")])]),e._v(" "),r("h2",{attrs:{id:"updates-to-tslint-latest-configuration"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#updates-to-tslint-latest-configuration","aria-hidden":"true"}},[e._v("#")]),e._v(" Updates to "),r("code",[e._v("tslint:latest")]),e._v(" configuration")]),e._v(" "),r("div",{staticClass:"language-diff extra-class"},[r("pre",{pre:!0,attrs:{class:"language-diff"}},[r("code",[r("span",{pre:!0,attrs:{class:"token inserted"}},[e._v('+    "ban-comma-operator": true,')]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token inserted"}},[e._v('+    "jsdoc-format": {')]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token inserted"}},[e._v('+        options: "check-multiline-start",')]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token inserted"}},[e._v("+    },")]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token inserted"}},[e._v('+    "no-duplicate-switch-case": true,')]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token inserted"}},[e._v('+    "no-implicit-dependencies": true,')]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token inserted"}},[e._v('+    "no-return-await": true,')]),e._v("\n")])])]),r("h2",{attrs:{id:"features-5"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#features-5","aria-hidden":"true"}},[e._v("#")]),e._v(" 🎉 Features")]),e._v(" "),r("ul",[r("li",[e._v("[feature] Added "),r("code",[e._v("linterOptions")]),e._v(" configuration field to "),r("code",[e._v("tslint.json")]),e._v(", which supports a list of "),r("code",[e._v("exclude")]),e._v(" globs to disable linting for a subset of files (#2409)")]),e._v(" "),r("li",[e._v("[new-rule]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-return-await/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-return-await")]),r("OutboundLink")],1),e._v(" (#3233)")]),e._v(" "),r("li",[e._v("[new-rule]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-redundant-jsdoc/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-redundant-jsdoc")]),r("OutboundLink")],1),e._v(" (#2754)")]),e._v(" "),r("li",[e._v("[new-rule]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-duplicate-switch-case/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-duplicate-switch-case")]),r("OutboundLink")],1),e._v(" (#2937)")]),e._v(" "),r("li",[e._v("[new-rule]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-implicit-dependencies/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-implicit-dependencies")]),r("OutboundLink")],1),e._v(" (#3343)")]),e._v(" "),r("li",[e._v("[new-rule]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-unnecessary-class/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-unnecessary-class")]),r("OutboundLink")],1),e._v(" (#3119)")]),e._v(" "),r("li",[e._v("[new-rule]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/ban-comma-operator/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("ban-comma-operator")]),r("OutboundLink")],1),e._v(" (#3250)")]),e._v(" "),r("li",[e._v("[new-fixer]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/one-line/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("one-line")]),r("OutboundLink")],1),e._v(" (#3200)")]),e._v(" "),r("li",[e._v("[new-fixer]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/curly/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("curly")]),r("OutboundLink")],1),e._v(" (#3262)")]),e._v(" "),r("li",[e._v("[new-rule-option]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/jsdoc-format/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("jsdoc-format")]),r("OutboundLink")],1),e._v(" adds option "),r("code",[e._v('"check-multiline-start"')]),e._v(" to enforce the first line of a multiline JSDoc comment to be empty. (#3181)")]),e._v(" "),r("li",[e._v("[new-rule-option]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/trailing-comma/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("trailing-comma")]),r("OutboundLink")],1),e._v(" adds option "),r("code",[e._v('"esSpecCompliant"')]),e._v(" to make it compatible with the ES spec regarding trailing commas after object/array rest and rest parameters. (#3176)")]),e._v(" "),r("li",[e._v("[new-rule-option] "),r("code",[e._v('"check-parameter-property"')]),e._v(" option for "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/member-access/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("member-access")]),r("OutboundLink")],1),e._v(" rule (#3325)")]),e._v(" "),r("li",[e._v("[new-rule-option] "),r("code",[e._v('"strict-bound-class-methods"')]),e._v(" option for "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/semicolon/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("semicolon")]),r("OutboundLink")],1),e._v(" rule (#3294)")]),e._v(" "),r("li",[e._v("[new-rule-option] "),r("code",[e._v('"grouped-imports"')]),e._v(" option for "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/ordered-imports/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("ordered-imports")]),r("OutboundLink")],1),e._v(" rule (#3138)")]),e._v(" "),r("li",[e._v("[new-rule-option] "),r("code",[e._v('"ignore-blank-lines"')]),e._v(" option for "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-trailing-whitespace/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-trailing-whitespace")]),r("OutboundLink")],1),e._v(" rule (#3346)")]),e._v(" "),r("li",[e._v("[new-rule-option] "),r("code",[e._v('"never"')]),e._v(" option for "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/object-literal-shorthand/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("object-literal-shorthand")]),r("OutboundLink")],1),e._v(" disallows shorthand notation (#3268)")]),e._v(" "),r("li",[e._v("[new-rule-option] "),r("code",[e._v('"exclude-class-expressions"')]),e._v(" option for "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/max-classes-per-file/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("max-classes-per-file")]),r("OutboundLink")],1),e._v(" rule (#3281)")]),e._v(" "),r("li",[e._v("[new-rule-option]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-unnecessary-type-assertion/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-unnecessary-type-assertion")]),r("OutboundLink")],1),e._v(" supports a whitelist of types to ignore (#3257)")]),e._v(" "),r("li",[e._v("[new-rule-option] "),r("code",[e._v('"module-source-path"')]),e._v(" for "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/ordered-imports/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("ordered-imports")]),r("OutboundLink")],1),e._v(" allows sorting imports by trailing end of path (#3178)")]),e._v(" "),r("li",[e._v("[new-formatter] JUnit (#3194)")])]),e._v(" "),r("h2",{attrs:{id:"bugfixes-enhancements-6"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#bugfixes-enhancements-6","aria-hidden":"true"}},[e._v("#")]),e._v(" 🛠 Bugfixes & enhancements")]),e._v(" "),r("ul",[r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-empty-interface/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-empty-interface")]),r("OutboundLink")],1),e._v(" allows providing type arguments for extended type (#3260)")]),e._v(" "),r("li",[e._v("[bugfix] Fixed line switches to not disable failures in the next line following the disabled line (#3177)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/return-undefined/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("return-undefined")]),r("OutboundLink")],1),e._v(" handles union return types in async functions (#3298)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/deprecation/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("deprecation")]),r("OutboundLink")],1),e._v(" checks correct constructor overload (#3203)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/return-undefined/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("return-undefined")]),r("OutboundLink")],1),e._v(" declared return type takes precedence over contextual type (#3298)")]),e._v(" "),r("li",[e._v("[bugfix] Correctly mark "),r("code",[e._v("inputFilePath")]),e._v(" as an optional parameter in "),r("code",[e._v("Configuration.findConfiguration()")]),e._v(" (#3195)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/return-undefined/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("return-undefined")]),r("OutboundLink")],1),e._v(" fixed regressions: once again allows anything if return type is "),r("code",[e._v("any")]),e._v(" (#3298)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/only-arrow-functions/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("only-arrow-functions")]),r("OutboundLink")],1),e._v(" allow function if "),r("code",[e._v("this")]),e._v(" is used in parameter initializer (#3315)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-conditional-assignment/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-conditional-assignment")]),r("OutboundLink")],1),e._v(": exclude intentional assignments, e.g. inside functions (#2629)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-angle-bracket-type-assertion/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-angle-bracket-type-assertion")]),r("OutboundLink")],1),e._v(" fixer adds parentheses when necessary (#3301)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-angle-bracket-type-assertion/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-angle-bracket-type-assertion")]),r("OutboundLink")],1),e._v(" fixed order when autofixing consecutive assertions (#3301)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("vso")]),e._v(" formatter no longer duplicates output for fixed failures (#3348)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-unbound-method/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-unbound-method")]),r("OutboundLink")],1),e._v(": Allow negation of method (#3349)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/arrow-parens/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("arrow-parens")]),r("OutboundLink")],1),e._v(" with option "),r("code",[e._v('"ban-single-arg-parens"')]),e._v(" no longer produces invalid code when fixed (#3247)")]),e._v(" "),r("li",[e._v("[bugfix] Fixed regression where the lookup of "),r("code",[e._v("tslint.json")]),e._v(" stopped at the current directory. (#3309)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("--test")]),e._v(" works correctly with any "),r("code",[e._v("compilerOptions.target")]),e._v(" (#3296)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("whitepace")]),e._v(" handles files with BOM and other irregular whitespace (#3305)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/callable-types/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("callable-types")]),r("OutboundLink")],1),e._v(" auto fix produces invalid results (#3342)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-string-literal/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-string-literal")]),r("OutboundLink")],1),e._v(" correctly fix property names with leading underscores (#3184)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/variable-name/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("variable-name")]),r("OutboundLink")],1),e._v(" fixed crash on empty variable name (#3292)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/trailing-comma/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("trailing-comma")]),r("OutboundLink")],1),e._v(" fixed crash on arrow function without parens (#3246)")]),e._v(" "),r("li",[e._v("[bugfix] Fix "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/space-before-function-paren/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("space-before-function-paren")]),r("OutboundLink")],1),e._v(" for anonymous/arrow generic functions (#3085)")]),e._v(" "),r("li",[e._v("[bugfix] Removed warning printed to console when using the "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-unused-variable/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-unused-variable")]),r("OutboundLink")],1),e._v(" along with the "),r("code",[e._v("noUnusedLocals")]),e._v(" and "),r("code",[e._v("noUnusedParameters")]),e._v(" compiler options (#3227)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-invalid-this/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-invalid-this")]),r("OutboundLink")],1),e._v(" ignores functions with a "),r("code",[e._v("this")]),e._v(" param (#3267)")]),e._v(" "),r("li",[e._v("[enhancement] Sort failures by line and character for formatters (#3345)")]),e._v(" "),r("li",[e._v("[enhancement]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/import-blacklist/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("import-blacklist")]),r("OutboundLink")],1),e._v(" also checks exports and dynamic imports (#3258)")]),e._v(" "),r("li",[e._v("[enhancement]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-conditional-assignment/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-conditional-assignment")]),r("OutboundLink")],1),e._v(" added check for conditional (ternary) expressions (#2629)")]),e._v(" "),r("li",[e._v("[enhancement] Allow "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/completed-docs/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("completed-docs")]),r("OutboundLink")],1),e._v(" to list doc tags that mark a node as not requiring a documentation body. Tags can also provide a regexp matcher to validate that their contents are docs-valid. (#2415)")]),e._v(" "),r("li",[e._v("[enhancement]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/await-promise/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("await-promise")]),r("OutboundLink")],1),e._v(" enforces that "),r("code",[e._v("for-await-of")]),e._v(" is only used with "),r("code",[e._v("AsyncIterable")]),e._v(" (#3297)")]),e._v(" "),r("li",[e._v("[enhancement]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/one-line/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("one-line")]),r("OutboundLink")],1),e._v(" checks type alias declarations (#3200)")]),e._v(" "),r("li",[e._v("[enhancement]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/deprecation/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("deprecation")]),r("OutboundLink")],1),e._v(" checks object destructuring (#3318)")]),e._v(" "),r("li",[e._v("[enhancement]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-submodule-imports/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-submodule-imports")]),r("OutboundLink")],1),e._v(" also checks exports (#3258)")]),e._v(" "),r("li",[e._v("[enhancement]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/restrict-plus-operands/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("restrict-plus-operands")]),r("OutboundLink")],1),e._v(": More specific error message when arguments include strings (#3220)")]),e._v(" "),r("li",[e._v("[enhancement]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-unsafe-any/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-unsafe-any")]),r("OutboundLink")],1),e._v(" checks more expressions, for example destructuring, "),r("code",[e._v("yield")]),e._v(", property initializer (#3196)")]),e._v(" "),r("li",[e._v("[enhancement]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/object-literal-sort-keys/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("object-literal-sort-keys")]),r("OutboundLink")],1),e._v(": allow grouping of object properties via additional blank lines when using alphabetical ordering. (#3191)")]),e._v(" "),r("li",[e._v("[enhancement] Migrated CLI from using "),r("code",[e._v("colors")]),e._v(" module to "),r("code",[e._v("chalk")]),e._v(" module (#3171)")]),e._v(" "),r("li",[e._v("[enhancement]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-unused-variable/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-unused-variable")]),r("OutboundLink")],1),e._v(" applies the ignorePattern to imports (#3187)")])]),e._v(" "),r("p",[e._v("Thanks to our contributors!")]),e._v(" "),r("ul",[r("li",[e._v("Klaus Meinhardt")]),e._v(" "),r("li",[e._v("Charles Samborski")]),e._v(" "),r("li",[e._v("Donald Pipowitch")]),e._v(" "),r("li",[e._v("Josh Goldberg")]),e._v(" "),r("li",[e._v("mmkal")]),e._v(" "),r("li",[e._v("Erik")]),e._v(" "),r("li",[e._v("Csaba Miklos")]),e._v(" "),r("li",[e._v("Dominik Moritz")]),e._v(" "),r("li",[e._v("Khalid Saifullah")]),e._v(" "),r("li",[e._v("Lukas Spieß")]),e._v(" "),r("li",[e._v("Merott Movahedi")]),e._v(" "),r("li",[e._v("Bowen Ni")]),e._v(" "),r("li",[e._v("ksvitkovsky")]),e._v(" "),r("li",[e._v("Hutson Betts")]),e._v(" "),r("li",[e._v("Caleb Eggensperger")]),e._v(" "),r("li",[e._v("Brent Erickson")]),e._v(" "),r("li",[e._v("Trivikram")]),e._v(" "),r("li",[e._v("Brandon Furtwangler")]),e._v(" "),r("li",[e._v("Pavel Zet")]),e._v(" "),r("li",[e._v("aervin_")]),e._v(" "),r("li",[e._v("Holger Jeromin")]),e._v(" "),r("li",[e._v("Danny Guo")]),e._v(" "),r("li",[e._v("Jeremy Morton")]),e._v(" "),r("li",[e._v("Cyril Gandon")]),e._v(" "),r("li",[e._v("Andy Hanson")]),e._v(" "),r("li",[e._v("yadan")])]),e._v(" "),r("h2",{attrs:{id:"v5-7-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v5-7-0","aria-hidden":"true"}},[e._v("#")]),e._v(" v5.7.0")]),e._v(" "),r("h2",{attrs:{id:"new-rules-options-and-fixers"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#new-rules-options-and-fixers","aria-hidden":"true"}},[e._v("#")]),e._v(" 🎉 New rules, options, and fixers")]),e._v(" "),r("ul",[r("li",[e._v("[new-rule]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-parameter-reassignment/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-parameter-reassignment")]),r("OutboundLink")],1),e._v(" (#3045)")]),e._v(" "),r("li",[e._v("[new-rule-option]: "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/object-literal-sort-keys/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("object-literal-sort-keys")]),r("OutboundLink")],1),e._v(": Add "),r("code",[e._v("match-declaration-order")]),e._v(" option (#2829)")]),e._v(" "),r("li",[e._v("[new-rule-option] "),r("code",[e._v("check-type-operator")]),e._v(" for "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/whitespace/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("whitespace")]),r("OutboundLink")],1),e._v(" rule (#3083)")]),e._v(" "),r("li",[e._v("[new-rule-option]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/whitespace/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("whitespace")]),r("OutboundLink")],1),e._v(": Add "),r("code",[e._v("check-rest-spread")]),e._v(" option (#3089)")])]),e._v(" "),r("h2",{attrs:{id:"bugfixes-enhancements-7"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#bugfixes-enhancements-7","aria-hidden":"true"}},[e._v("#")]),e._v(" 🛠 Bugfixes & enhancements")]),e._v(" "),r("ul",[r("li",[e._v("[api] "),r("code",[e._v("AbstractRule#applyWithFunction")]),e._v(" allows additional parameter that is passed through to "),r("code",[e._v("walkFn")]),e._v(" (#3140)")]),e._v(" "),r("li",[e._v("[api] "),r("code",[e._v("AbstractRule#applyWithFunction")]),e._v(" has better type checking for its type parameter (#2660)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/member-access/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("member-access")]),r("OutboundLink")],1),e._v(" autofix now correcly inserts "),r("code",[e._v("public")]),e._v(" keyword after decorators (#3162)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/prefer-const/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("prefer-const")]),r("OutboundLink")],1),e._v(" correctly handle "),r("code",[e._v("catch")]),e._v(" without binding parameter introduced in "),r("code",[e._v("typescript@2.5.1")]),e._v(" (#3151)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-invalid-template-strings/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-invalid-template-strings")]),r("OutboundLink")],1),e._v(" allows backslash-prefixed template expressions (#3116)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/deprecation/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("deprecation")]),r("OutboundLink")],1),e._v(" no longer shows errors on imports and exports (#3141)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/deprecation/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("deprecation")]),r("OutboundLink")],1),e._v(": fix false positive when calling a function or method where another overload is deprecated (#2883)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/whitespace/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("whitespace")]),r("OutboundLink")],1),e._v(": fixed "),r("code",[e._v('"check-separator"')]),e._v(" for trivial "),r("code",[e._v("for")]),e._v(" cases. (#3132)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/prefer-object-spread/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("prefer-object-spread")]),r("OutboundLink")],1),e._v(" prevent spreading "),r("code",[e._v("this")]),e._v(" as it is not allowed by the compiler (#3126)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("msbuild")]),e._v(" formatter uses backslashes in paths on Windows (#3145)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-namespace/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-namespace")]),r("OutboundLink")],1),e._v(" ignores global augmentation (#3161)")]),e._v(" "),r("li",[e._v("[enhancement] remove superfluous empty lines on tslint output. (#3121)")]),e._v(" "),r("li",[e._v("[enhancement]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-submodule-imports/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-submodule-imports")]),r("OutboundLink")],1),e._v(" allows whitelisting of submodules like "),r("code",[e._v("@angular/core/testing")]),e._v(" (#3129)")]),e._v(" "),r("li",[e._v("[enhancement] custom lint rules will be resolved using node's path resolution to allow for loaders like "),r("code",[e._v("ts-node")]),e._v(" (#3108)")]),e._v(" "),r("li",[e._v("[enhancement]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/quotemark/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("quotemark")]),r("OutboundLink")],1),e._v(" no longer requires "),r("code",[e._v('"single"')]),e._v(" or "),r("code",[e._v('"double"')]),e._v(" to be the first option. The rule defaults to "),r("code",[e._v('"double"')]),e._v(" if none is specified. (#3114)")]),e._v(" "),r("li",[e._v("[enhancement]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-unused-variable/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-unused-variable")]),r("OutboundLink")],1),e._v(" autofix removes trailing comments of imports (#3156)")]),e._v(" "),r("li",[e._v("[enhancement]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-unnecessary-type-assertion/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-unnecessary-type-assertion")]),r("OutboundLink")],1),e._v(" allows certain necessary assertions to prevent type widening (#3120)")])]),e._v(" "),r("p",[e._v("Thanks to our contributors!")]),e._v(" "),r("ul",[r("li",[e._v("Paul Gschwendtner")]),e._v(" "),r("li",[e._v("Andy Hanson")]),e._v(" "),r("li",[e._v("ksvitkovsky")]),e._v(" "),r("li",[e._v("Santi Albo")]),e._v(" "),r("li",[e._v("aervin")]),e._v(" "),r("li",[e._v("Junle Li")]),e._v(" "),r("li",[e._v("Joscha Feth")]),e._v(" "),r("li",[e._v("WiseBird")]),e._v(" "),r("li",[e._v("Caleb Eggensperger")]),e._v(" "),r("li",[e._v("WGroenestein")]),e._v(" "),r("li",[e._v("Bowen Ni")])]),e._v(" "),r("h2",{attrs:{id:"v5-6-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v5-6-0","aria-hidden":"true"}},[e._v("#")]),e._v(" v5.6.0")]),e._v(" "),r("h2",{attrs:{id:"new-rules-options-and-fixers-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#new-rules-options-and-fixers-2","aria-hidden":"true"}},[e._v("#")]),e._v(" 🎉 New rules, options, and fixers")]),e._v(" "),r("ul",[r("li",[e._v("[new-rule]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-duplicate-imports/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-duplicate-imports")]),r("OutboundLink")],1),e._v(" (#3075)")]),e._v(" "),r("li",[e._v("[new-rule]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-submodule-imports/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-submodule-imports")]),r("OutboundLink")],1),e._v(" (#3091)")]),e._v(" "),r("li",[e._v("[new-rule]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/space-within-parens/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("space-within-parens")]),r("OutboundLink")],1),e._v(" (#2959)")]),e._v(" "),r("li",[e._v("[new-fixer]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/member-access/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("member-access")]),r("OutboundLink")],1),e._v(" (#2969)")]),e._v(" "),r("li",[e._v("[new-fixer]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-null-keyword/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-null-keyword")]),r("OutboundLink")],1),e._v(": fix "),r("code",[e._v("x == null")]),e._v(" to "),r("code",[e._v("x == undefined")]),e._v(" (#2802)")]),e._v(" "),r("li",[e._v("[new-rule-option]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-shadowed-variable/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-shadowed-variable")]),r("OutboundLink")],1),e._v(" let's you optionally ignore certain kinds of declarations (#3030)")]),e._v(" "),r("li",[e._v("[new-rule-option]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/prefer-conditional-expression/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("prefer-conditional-expression")]),r("OutboundLink")],1),e._v(" adds "),r("code",[e._v("check-else-if")]),e._v(" (#2963)")])]),e._v(" "),r("h2",{attrs:{id:"bugfixes-enhancements-8"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#bugfixes-enhancements-8","aria-hidden":"true"}},[e._v("#")]),e._v(" 🛠 Bugfixes & enhancements")]),e._v(" "),r("ul",[r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/array-type/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("array-type")]),r("OutboundLink")],1),e._v(": consider "),r("code",[e._v("this")]),e._v(" to be simple type (#2982)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/await-promise/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("await-promise")]),r("OutboundLink")],1),e._v(" accepts not only union types but also intersection types with Promise-like types (#2987)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/callable-types/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("callable-types")]),r("OutboundLink")],1),e._v(": don't remove export modifier of interfaces (#2962)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/completed-docs/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("completed-docs")]),r("OutboundLink")],1),e._v(": Only checks variables at the file-level. (#2950)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/completed-docs/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("completed-docs")]),r("OutboundLink")],1),e._v(": Uses correct visibility of variables. (#2950)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-floating-promises/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-floating-promises")]),r("OutboundLink")],1),e._v(": recognize rejection handler passed as second argument to "),r("code",[e._v("promise.then()")]),e._v(" (#3048)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-shadowed-variable/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-shadowed-variable")]),r("OutboundLink")],1),e._v(" don't warn for shadowed type parameter on static class members (#3030)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-shadowed-variable/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-shadowed-variable")]),r("OutboundLink")],1),e._v(" fixed false positive with key name in index signature (#3030)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-shadowed-variable/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-shadowed-variable")]),r("OutboundLink")],1),e._v(" fixed false positive with parameter inside function decorator (#3030)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-unsafe-any/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-unsafe-any")]),r("OutboundLink")],1),e._v(": allow truthyness and falsyness checks (#3008)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-unused-variable/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-unused-variable")]),r("OutboundLink")],1),e._v(" fixed crash when using destructuring (#3058)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/one-line/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("one-line")]),r("OutboundLink")],1),e._v(" correctly handles multiline type parameters (#3004)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/prefer-for-of/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("prefer-for-of")]),r("OutboundLink")],1),e._v(" fixed false positives when array is modified, e.g. "),r("code",[e._v("arr[i]++")]),e._v(" (#3044)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/prefer-object-spread/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("prefer-object-spread")]),r("OutboundLink")],1),e._v(" adds parens when fixing arrow function return (#3026)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/prefer-object-spread/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("prefer-object-spread")]),r("OutboundLink")],1),e._v(" permit functions as first argument to Object.assign (#3098)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/space-before-function-paren/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("space-before-function-paren")]),r("OutboundLink")],1),e._v(" Handle default exports of functions without names like anonymous functions (fixes #3040) (#3053)")]),e._v(" "),r("li",[e._v("[bugfix] Fixed an issue where, at runtime, the module "),r("code",[e._v("./test/parse")]),e._v(" could not be located due after consumers had run "),r("code",[e._v("yarn clean")]),e._v(" (#3072)")]),e._v(" "),r("li",[e._v("[enhancement]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-null-keyword/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-null-keyword")]),r("OutboundLink")],1),e._v(" allows strict comparison (#2802)")]),e._v(" "),r("li",[e._v("[enhancement]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-switch-case-fall-through/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-switch-case-fall-through")]),r("OutboundLink")],1),e._v(" matches "),r("code",[e._v("// falls through")]),e._v(" comments case insensitive and allows trailing text (#2983)")]),e._v(" "),r("li",[e._v("[enhancement]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/ordered-imports/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("ordered-imports")]),r("OutboundLink")],1),e._v(": support importEqualsDeclaration (#3102)")]),e._v(" "),r("li",[e._v("[enhancement] Added NaN and (+/-)Infinity as numbers to "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-inferrable-types/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-inferrable-types")]),r("OutboundLink")],1),e._v(" (#2885)")]),e._v(" "),r("li",[e._v("[enhancement] Improved CLI error message when no filenames are specified (#3066)")]),e._v(" "),r("li",[e._v("[rule-change]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/prefer-conditional-expression/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("prefer-conditional-expression")]),r("OutboundLink")],1),e._v(": ignore "),r("code",[e._v("if-else-if")]),e._v(" by default. Use the new "),r("code",[e._v('"check-else-if"')]),e._v(" option to check nested if statements (#2963)")])]),e._v(" "),r("p",[e._v("Thanks to our contributors!")]),e._v(" "),r("ul",[r("li",[e._v("Klaus Meinhardt")]),e._v(" "),r("li",[e._v("Julian Verdurmen")]),e._v(" "),r("li",[e._v("Alexandre Alonso")]),e._v(" "),r("li",[e._v("Josh Goldberg")]),e._v(" "),r("li",[e._v("ksvitkovsky")]),e._v(" "),r("li",[e._v("Daisuke Yokomoto")]),e._v(" "),r("li",[e._v("Andrii Dieiev")]),e._v(" "),r("li",[e._v("Florent Suc")]),e._v(" "),r("li",[e._v("Jason Killian")]),e._v(" "),r("li",[e._v("Amin Pakseresht")]),e._v(" "),r("li",[e._v("reduckted")]),e._v(" "),r("li",[e._v("vilicvane")]),e._v(" "),r("li",[e._v("Russell Briggs")]),e._v(" "),r("li",[e._v("Andy Hanson")]),e._v(" "),r("li",[e._v("Leo Liang")]),e._v(" "),r("li",[e._v("Dan Homola")]),e._v(" "),r("li",[e._v("BehindTheMath")]),e._v(" "),r("li",[e._v("David Golightly")]),e._v(" "),r("li",[e._v("aervin")]),e._v(" "),r("li",[e._v("Daniel Kucal")]),e._v(" "),r("li",[e._v("Ika")]),e._v(" "),r("li",[e._v("Chris Barr")])]),e._v(" "),r("h2",{attrs:{id:"v5-5-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v5-5-0","aria-hidden":"true"}},[e._v("#")]),e._v(" v5.5.0")]),e._v(" "),r("p",[r("strong",[e._v("Editor's note")]),e._v(": This release features an important bugfix for overlapping fixes when using "),r("code",[e._v("--project")]),e._v(" and "),r("code",[e._v("--fix")]),e._v(" (#2864).")]),e._v(" "),r("h2",{attrs:{id:"new-rules-and-options"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#new-rules-and-options","aria-hidden":"true"}},[e._v("#")]),e._v(" 🎉 New rules and options")]),e._v(" "),r("ul",[r("li",[e._v("[new-rule-option]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/completed-docs/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("completed-docs")]),r("OutboundLink")],1),e._v(": Add "),r("code",[e._v("enum-members")]),e._v(" option (#2911)")]),e._v(" "),r("li",[e._v("[new-rule]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-this-assignment/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-this-assignment")]),r("OutboundLink")],1),e._v(" (#2931)")])]),e._v(" "),r("h2",{attrs:{id:"bugfixes-enhancements-9"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#bugfixes-enhancements-9","aria-hidden":"true"}},[e._v("#")]),e._v(" 🛠 Bugfixes & enhancements")]),e._v(" "),r("ul",[r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/encoding/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("encoding")]),r("OutboundLink")],1),e._v(" closes files correctly (#2958)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/whitespace/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("whitespace")]),r("OutboundLink")],1),e._v(" fix whitespace "),r("code",[e._v('"check-module"')]),e._v(" to properly lint and fix errors (#2401) (#2825)")]),e._v(" "),r("li",[e._v("[bugfix]: "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/whitespace/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("whitespace")]),r("OutboundLink")],1),e._v(": now correctly handles dynamic imports introduced in typescript@2.4.0 (#2924)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/switch-final-break/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("switch-final-break")]),r("OutboundLink")],1),e._v(": don't fail if break jumps to a label outside of the switch (#2914)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-shadowed-variable/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-shadowed-variable")]),r("OutboundLink")],1),e._v(": exempt "),r("code",[e._v("this")]),e._v(" parameter (#2598)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/prefer-for-of/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("prefer-for-of")]),r("OutboundLink")],1),e._v(" correctly handles variable scopes and other unrelated identifiers (#2984)")]),e._v(" "),r("li",[e._v("[bugfix] Don't leave blank lines when "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-unused-variable/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-unused-variable")]),r("OutboundLink")],1),e._v(" autofix removes whole import (#2901)")]),e._v(" "),r("li",[e._v("[cli] restore "),r("code",[e._v("-v")]),e._v(" option (#2926)")]),e._v(" "),r("li",[e._v("[enhancement] Print stack trace of exceptions (#2890)")]),e._v(" "),r("li",[e._v("[enhancement] Added allow-empty-catch option to "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-empty/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-empty")]),r("OutboundLink")],1),e._v(" (#2886)")]),e._v(" "),r("li",[e._v("[enhancement]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/prefer-const/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("prefer-const")]),r("OutboundLink")],1),e._v(": handle destructuring in for-of loop initializer as if "),r("code",[e._v('{"destructuring": "all"}')]),e._v(" was specified (#2904)")]),e._v(" "),r("li",[e._v("[enhancement]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-shadowed-variable/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-shadowed-variable")]),r("OutboundLink")],1),e._v(": added checks for other shadowing declarations, e.g. interfaces, classes, type parameters, imports, etc. (#2598)")]),e._v(" "),r("li",[e._v("[rule-change]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-shadowed-variable/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-shadowed-variable")]),r("OutboundLink")],1),e._v(" no longer fails for declarations in the same scope, e.g. "),r("code",[e._v("var foo; var foo;")]),e._v(". Use the rule "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-duplicate-variable/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-duplicate-variable")]),r("OutboundLink")],1),e._v(" to find such errors. (#2598)")])]),e._v(" "),r("p",[e._v("Thanks to our contributors!")]),e._v(" "),r("ul",[r("li",[e._v("Klaus Meinhardt")]),e._v(" "),r("li",[e._v("Josh Goldberg")]),e._v(" "),r("li",[e._v("Petr Kosikhin")]),e._v(" "),r("li",[e._v("Pablo Núñez")]),e._v(" "),r("li",[e._v("Benny Neugebauer")]),e._v(" "),r("li",[e._v("Radon Rosborough")]),e._v(" "),r("li",[e._v("reduckted")]),e._v(" "),r("li",[e._v("Chris Barr")]),e._v(" "),r("li",[e._v("Julian Verdurmen")])]),e._v(" "),r("h2",{attrs:{id:"v5-4-3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v5-4-3","aria-hidden":"true"}},[e._v("#")]),e._v(" v5.4.3")]),e._v(" "),r("h2",{attrs:{id:"bugfixes-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#bugfixes-2","aria-hidden":"true"}},[e._v("#")]),e._v(" 🛠 Bugfixes")]),e._v(" "),r("ul",[r("li",[e._v("[bugfix] Fixed regression with empty "),r("code",[e._v("--out")]),e._v(" file (#2867)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/unified-signatures/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("unified-signatures")]),r("OutboundLink")],1),e._v(": Don't suggest to unify rest parameters. (#2874)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/binary-expression-operand-order/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("binary-expression-operand-order")]),r("OutboundLink")],1),e._v(": Allow if both sides of the binary expression are literals. (#2873)")]),e._v(" "),r("li",[e._v("[bugfix] Restore compatibility with typescript@2.1 and 2.2 for "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/whitespace/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("whitespace")]),r("OutboundLink")],1),e._v(", "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/space-before-function-paren/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("space-before-function-paren")]),r("OutboundLink")],1),e._v(" and "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/deprecation/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("deprecation")]),r("OutboundLink")],1),e._v(" (#2893)")]),e._v(" "),r("li",[e._v("[docs]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-string-literal/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-string-literal")]),r("OutboundLink")],1),e._v(": Fix documentation (#2875)")])]),e._v(" "),r("h2",{attrs:{id:"v5-4-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v5-4-2","aria-hidden":"true"}},[e._v("#")]),e._v(" v5.4.2")]),e._v(" "),r("h2",{attrs:{id:"bugfixes-3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#bugfixes-3","aria-hidden":"true"}},[e._v("#")]),e._v(" 🛠 Bugfixes")]),e._v(" "),r("ul",[r("li",[e._v("[bugfix] Restored support for multiple "),r("code",[e._v("--exclude")]),e._v(" options in the CLI (#2855)")]),e._v(" "),r("li",[e._v("[bugfix] Restored support for "),r("code",[e._v("--version")]),e._v(" CLI option (#2857)")])]),e._v(" "),r("h2",{attrs:{id:"v5-4-1"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v5-4-1","aria-hidden":"true"}},[e._v("#")]),e._v(" v5.4.1")]),e._v(" "),r("h2",{attrs:{id:"bugfixes-4"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#bugfixes-4","aria-hidden":"true"}},[e._v("#")]),e._v(" 🛠 Bugfixes")]),e._v(" "),r("ul",[r("li",[e._v("[bugfix] Fixed regression in "),r("code",[e._v("--exclude")]),e._v(" CLI option when using "),r("code",[e._v("--project")]),e._v(" (#2852)")])]),e._v(" "),r("h2",{attrs:{id:"v5-4-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v5-4-0","aria-hidden":"true"}},[e._v("#")]),e._v(" v5.4.0")]),e._v(" "),r("h2",{attrs:{id:"non-breaking-api-changes"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#non-breaking-api-changes","aria-hidden":"true"}},[e._v("#")]),e._v(" ⭐️ Non-breaking API changes")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("--type-check")]),e._v(" only checks for errors before linting is no longer required to enable rules that use the type checker. You only need to supply "),r("code",[e._v("--project")]),e._v(" now.")])]),e._v(" "),r("h2",{attrs:{id:"new-rules-options-and-fixers-3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#new-rules-options-and-fixers-3","aria-hidden":"true"}},[e._v("#")]),e._v(" 🎉 New rules, options, and fixers")]),e._v(" "),r("ul",[r("li",[e._v("[new-rule]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/switch-final-break/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("switch-final-break")]),r("OutboundLink")],1),e._v(" (#2804)")]),e._v(" "),r("li",[e._v("[new-rule]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/use-default-type-parameter/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("use-default-type-parameter")]),r("OutboundLink")],1),e._v(" (#2253)")]),e._v(" "),r("li",[e._v("[new-rule]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/binary-expression-operand-order/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("binary-expression-operand-order")]),r("OutboundLink")],1),e._v(" (#2805)")]),e._v(" "),r("li",[e._v("[new-rule-option]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/ban/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("ban")]),r("OutboundLink")],1),e._v(" new options format: allows to specify an optional explanation message for function bans, banning nested methods and using a wildcard for object of a method ban (#2547)")]),e._v(" "),r("li",[e._v("[new-rule-option]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-duplicate-variable/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-duplicate-variable")]),r("OutboundLink")],1),e._v(" adds "),r("code",[e._v("check-parameters")]),e._v(" option to check if variable has the same name as a parameter (#2597)")]),e._v(" "),r("li",[e._v("[new-rule-option]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/curly/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("curly")]),r("OutboundLink")],1),e._v(': "as-needed" option (#2842)')]),e._v(" "),r("li",[e._v("[new-rule-option]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-unbound-method/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-unbound-method")]),r("OutboundLink")],1),e._v(" add option "),r("code",[e._v('"ignore-static"')]),e._v(" (#2751)")]),e._v(" "),r("li",[e._v("[new-rule-option]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/strict-boolean-expressions/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("strict-boolean-expressions")]),r("OutboundLink")],1),e._v(" adds "),r("code",[e._v("allow-boolean-or-undefined")]),e._v(" (#2820)")]),e._v(" "),r("li",[e._v("[new-fixer]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/object-literal-shorthand/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("object-literal-shorthand")]),r("OutboundLink")],1),e._v(" can fix longhand methods (#2558)")])]),e._v(" "),r("h2",{attrs:{id:"bugfixes-enhancements-10"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#bugfixes-enhancements-10","aria-hidden":"true"}},[e._v("#")]),e._v(" 🛠 Bugfixes & enhancements")]),e._v(" "),r("ul",[r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/prefer-object-spread/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("prefer-object-spread")]),r("OutboundLink")],1),e._v(" allows constructor, function and method calls and more as first argument to "),r("code",[e._v("Object.assign")]),e._v(" (#2828)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-unbound-method/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-unbound-method")]),r("OutboundLink")],1),e._v(" walker skips past the parent if it is a cast or parenthesized expression (#2838)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/object-literal-shorthand/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("object-literal-shorthand")]),r("OutboundLink")],1),e._v(": fixed suggestion for generator functions (#2558)")]),e._v(" "),r("li",[e._v("[bugfix] Fixed issue with case sensitivity of "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-unused-variable/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-unused-variable")]),r("OutboundLink")],1),e._v(" rule on Windows (#2819)")]),e._v(" "),r("li",[e._v("[bugfix] don't crash "),r("code",[e._v("tslint --project")]),e._v(" if "),r("code",[e._v("allowJs")]),e._v(" is set in tsconfig.json (#2823)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/align/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("align")]),r("OutboundLink")],1),e._v(" with option "),r("code",[e._v('"members"')]),e._v(": check members of class expressions; don't check semicolons in classes (#2668)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-inferred-empty-object-type/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-inferred-empty-object-type")]),r("OutboundLink")],1),e._v(": fix stack overflow (#2762)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/semicolon/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("semicolon")]),r("OutboundLink")],1),e._v(": don't warn about unnecesary semicolon when it is actually needed, e.g. when followed by type assertion or template string (#2655)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/space-before-function-paren/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("space-before-function-paren")]),r("OutboundLink")],1),e._v(": Ignore async arrow function with no parentheses (#2833)")]),e._v(" "),r("li",[e._v("[bugfix]: "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-unsafe-any/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-unsafe-any")]),r("OutboundLink")],1),e._v(": Don't fail on "),r("code",[e._v("continue label;")]),e._v(" (#2830)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-unbound-method/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-unbound-method")]),r("OutboundLink")],1),e._v(": Allow unbound method to be used as a condition (#2834)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-unsafe-any/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-unsafe-any")]),r("OutboundLink")],1),e._v(": Allow to switch on a value of type "),r("code",[e._v("any")]),e._v(" (#2836)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-unsafe-any/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-unsafe-any")]),r("OutboundLink")],1),e._v(": Don't mark "),r("code",[e._v("declare global {}")]),e._v(" as an unsafe any. (#2839)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/indent/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("indent")]),r("OutboundLink")],1),e._v(" now checks indentation of expressions inside template strings (#2826)")]),e._v(" "),r("li",[e._v("[enhancement] "),r("code",[e._v("--project")]),e._v(" (or "),r("code",[e._v("-p")]),e._v(") enables rules that require the type checker. "),r("code",[e._v("--type-check")]),e._v(" only checks for errors before linting is no longer required (#2773)")]),e._v(" "),r("li",[e._v("[enhancement]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/deprecation/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("deprecation")]),r("OutboundLink")],1),e._v(": error message includes deprecation text if available (#2748)")]),e._v(" "),r("li",[e._v("[enhancement]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/cyclomatic-complexity/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("cyclomatic-complexity")]),r("OutboundLink")],1),e._v(": Don't count empty switch case(#2743)")]),e._v(" "),r("li",[e._v("[enhancement]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/strict-boolean-expressions/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("strict-boolean-expressions")]),r("OutboundLink")],1),e._v(": Allow "),r("code",[e._v("any")]),e._v(", and "),r("code",[e._v("true")]),e._v(" and "),r("code",[e._v("false")]),e._v(" literal types (#2758)")]),e._v(" "),r("li",[e._v("[enhancement]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-floating-promises/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-floating-promises")]),r("OutboundLink")],1),e._v(": Allow 'promise.catch()' (#2774)")]),e._v(" "),r("li",[e._v("[enhancement]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/comment-format/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("comment-format")]),r("OutboundLink")],1),e._v(" no longer excludes comments with triple slash from linting except "),r("code",[e._v('/// <reference path="..."/>')]),e._v(" (#2616)")]),e._v(" "),r("li",[e._v("[enhancement]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/prefer-object-spread/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("prefer-object-spread")]),r("OutboundLink")],1),e._v(": lint more locations where return value is used. (#2828)")]),e._v(" "),r("li",[e._v("[enhancement]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/semicolon/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("semicolon")]),r("OutboundLink")],1),e._v(": option "),r("code",[e._v('"never"')]),e._v(" is now spec compliant (#2655)")]),e._v(" "),r("li",[e._v("[enhancement]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/object-literal-shorthand/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("object-literal-shorthand")]),r("OutboundLink")],1),e._v(" handles async functions correctly (#2558)")]),e._v(" "),r("li",[e._v("[enhancement] "),r("code",[e._v("--test")]),e._v(" CLI option: allow passing path to tslint.json (#2784)")]),e._v(" "),r("li",[e._v("[enhancement] Use commander instead of optimist for CLI arguments (#2689)")]),e._v(" "),r("li",[e._v("[enhancement]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/strict-type-predicates/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("strict-type-predicates")]),r("OutboundLink")],1),e._v(": warn if strictNullChecks is not enabled (#2786)")])]),e._v(" "),r("p",[e._v("Thanks to our contributors!")]),e._v(" "),r("ul",[r("li",[e._v("Klaus Meinhardt")]),e._v(" "),r("li",[e._v("Manuel Lopez")]),e._v(" "),r("li",[e._v("Andy Hanson")]),e._v(" "),r("li",[e._v("Piotr Tomiak")])]),e._v(" "),r("h2",{attrs:{id:"v5-3-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v5-3-2","aria-hidden":"true"}},[e._v("#")]),e._v(" v5.3.2")]),e._v(" "),r("ul",[r("li",[e._v("[bugfix] Fixes "),r("code",[e._v("not a directory")]),e._v(" error (#2813)")])]),e._v(" "),r("h2",{attrs:{id:"v5-3-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v5-3-0","aria-hidden":"true"}},[e._v("#")]),e._v(" v5.3.0")]),e._v(" "),r("h2",{attrs:{id:"this-change-may-require-a-change-to-tslint-json"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#this-change-may-require-a-change-to-tslint-json","aria-hidden":"true"}},[e._v("#")]),e._v(" This change may require a change to tslint.json")]),e._v(" "),r("ul",[r("li",[e._v("[enhancement]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/prefer-switch/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("prefer-switch")]),r("OutboundLink")],1),e._v(": Change default "),r("code",[e._v("min-cases")]),e._v(" to 3. (#2669)")])]),e._v(" "),r("h2",{attrs:{id:"features-enhancements"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#features-enhancements","aria-hidden":"true"}},[e._v("#")]),e._v(" 🎉 Features & enhancements")]),e._v(" "),r("ul",[r("li",[e._v("[new-cli-option] cli: Add "),r("code",[e._v("outputAbsolutePaths")]),e._v(" option (#2667)")]),e._v(" "),r("li",[e._v("[new-rule]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/prefer-object-spread/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("prefer-object-spread")]),r("OutboundLink")],1),e._v(" (#2624)")]),e._v(" "),r("li",[e._v("[new-rule]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/encoding/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("encoding")]),r("OutboundLink")],1),e._v(" (#2368)")]),e._v(" "),r("li",[e._v("[new-rule]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/prefer-conditional-expression/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("prefer-conditional-expression")]),r("OutboundLink")],1),e._v(" (#2363)")]),e._v(" "),r("li",[e._v("[new-rule-option]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/indent/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("indent")]),r("OutboundLink")],1),e._v(" support indent size (#2723)")]),e._v(" "),r("li",[e._v("[new-rule-option]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/object-literal-sort-keys/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("object-literal-sort-keys")]),r("OutboundLink")],1),e._v(" adds "),r("code",[e._v("ignore-case")]),e._v(" (#2592)")]),e._v(" "),r("li",[e._v("[new-rule-option]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/quotemark/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("quotemark")]),r("OutboundLink")],1),e._v(": Add "),r("code",[e._v("avoid-template")]),e._v(" option (#2766)")]),e._v(" "),r("li",[e._v("[new-rule-option]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/await-promise",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("await-promise")]),r("OutboundLink")],1),e._v(': What\'s considered a "Promise" is now configurable. (#2661)')]),e._v(" "),r("li",[e._v("[new-fixer]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/indent/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("indent")]),r("OutboundLink")],1),e._v(" (#2723)")]),e._v(" "),r("li",[e._v("[new-fixer]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/typedef-whitespace/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("typedef-whitespace")]),r("OutboundLink")],1),e._v(" (#2718)")]),e._v(" "),r("li",[e._v("[enhancement] better error messages in "),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/variable-name/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("variable-name")]),r("OutboundLink")],1),e._v(" (#2672)")]),e._v(" "),r("li",[e._v("[enhancement]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/typedef/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("typedef")]),r("OutboundLink")],1),e._v(": Use name or parameters for error location (#2460)")]),e._v(" "),r("li",[e._v("[enhancement]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/object-literal-sort-keys/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("object-literal-sort-keys")]),r("OutboundLink")],1),e._v(": check shorthand properties (#2592)")]),e._v(" "),r("li",[e._v("[enhancement]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/space-before-function-paren/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("space-before-function-paren")]),r("OutboundLink")],1),e._v(": Handle "),r("code",[e._v("get")]),e._v("/"),r("code",[e._v("set")]),e._v(" accessor (#2700)")]),e._v(" "),r("li",[e._v("[enhancement]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/typedef-whitespace/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("typedef-whitespace")]),r("OutboundLink")],1),e._v(" added checks for arrow function, call and construct signature (#2718)")]),e._v(" "),r("li",[e._v("[enhancement]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-object-literal-type-assertion/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-object-literal-type-assertion")]),r("OutboundLink")],1),e._v(": Allow cast to "),r("code",[e._v("any")]),e._v(" (#2671)")]),e._v(" "),r("li",[e._v("[enhancement] cli: "),r("code",[e._v("-p")]),e._v(" option handles directories (#2756)")]),e._v(" "),r("li",[e._v("[develop] testing rules with type information is enabled when a "),r("code",[e._v("tsconfig.json")]),e._v(" is found next to "),r("code",[e._v("tslint.json")]),e._v(" (#2769)")]),e._v(" "),r("li",[e._v("[configuration] deprecate mixed case tslint.json (#2713)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/return-undefined/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("return-undefined")]),r("OutboundLink")],1),e._v(": Treat a return type "),r("code",[e._v("void | undefined")]),e._v(" same as "),r("code",[e._v("void")]),e._v(" (#2731)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-unnecessary-initializer/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-unnecessary-initializer")]),r("OutboundLink")],1),e._v(": Handle "),r("code",[e._v("BindingElement")]),e._v(" anywhere, not just in a "),r("code",[e._v("VariableDeclaration")]),e._v(". (#2707)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/jsdoc-format/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("jsdoc-format")]),r("OutboundLink")],1),e._v(": correctly handle alignment in files with BOM (#2619)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/jsdoc-format/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("jsdoc-format")]),r("OutboundLink")],1),e._v(": don't treat empty comments ("),r("code",[e._v("/**/")]),e._v(") as jsdoc (#2619)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/typedef-whitespace/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("typedef-whitespace")]),r("OutboundLink")],1),e._v(" don't warn for leading whitespace if token is preceded by line break (#2718)")]),e._v(" "),r("li",[e._v('[bugfix] Make "completed-docs" rule respect "public" privacy (or lack thereof) (#2749)')]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/jsdoc-format/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("jsdoc-format")]),r("OutboundLink")],1),e._v(": fixed error position if line ends with "),r("code",[e._v("\\r\\n")]),e._v(" (#2619)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/prefer-switch/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("prefer-switch")]),r("OutboundLink")],1),e._v(": add missing checks for some expressions (#2686)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/prefer-template/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("prefer-template")]),r("OutboundLink")],1),e._v(": Allow "),r("code",[e._v('"a" + "b" + "c"')]),e._v(". (#2741)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/prefer-const/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("prefer-const")]),r("OutboundLink")],1),e._v(": fix false positive with variable declared outside of for-of or for-in (#2760)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("--project")]),e._v(": fix file matching with relative path to "),r("code",[e._v("tsconfig.json")]),e._v(" (#2688)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-default-export/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-default-export")]),r("OutboundLink")],1),e._v(": correctly handle "),r("code",[e._v("export default abstract class {...}")]),e._v(" (#2630)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-mergeable-namespace/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-mergeable-namespace")]),r("OutboundLink")],1),e._v(": display correct line in error message (#2656)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/object-literal-sort-keys/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("object-literal-sort-keys")]),r("OutboundLink")],1),e._v(": handle object spread correctly (#2592)")]),e._v(" "),r("li",[e._v("[bugfix] Consistently output absolute/relative paths (#2667)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/await-promise",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("await-promise")]),r("OutboundLink")],1),e._v(": Consider types derived from a Promise in union types too. (#2661)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-unsafe-any/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-unsafe-any")]),r("OutboundLink")],1),e._v(": Fix bug where number literal in type position was flagged as an unsafe "),r("code",[e._v("any")]),e._v(". (#2712)")]),e._v(" "),r("li",[e._v("[api] Deprecate "),r("code",[e._v("Lint.Utils.objectify")]),e._v(" (#2764)")])]),e._v(" "),r("p",[e._v("Thanks to our contributors!")]),e._v(" "),r("ul",[r("li",[e._v("Andy Hanson")]),e._v(" "),r("li",[e._v("Klaus Meinhardt")]),e._v(" "),r("li",[e._v("Martin Probst")]),e._v(" "),r("li",[e._v("Filipe Silva")]),e._v(" "),r("li",[e._v("walkerburgin")]),e._v(" "),r("li",[e._v("René Scheibe")])]),e._v(" "),r("h2",{attrs:{id:"v5-2-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v5-2-0","aria-hidden":"true"}},[e._v("#")]),e._v(" v5.2.0")]),e._v(" "),r("ul",[r("li",[e._v("[rule-change]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-console/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-console")]),r("OutboundLink")],1),e._v(" bans all console methods when no methods are specified (#2610)")]),e._v(" "),r("li",[e._v("[new-rule]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-object-literal-type-assertion/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-object-literal-type-assertion")]),r("OutboundLink")],1),e._v(" (#2580)")]),e._v(" "),r("li",[e._v("[new-rule]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-irregular-whitespace/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-irregular-whitespace")]),r("OutboundLink")],1),e._v(" (#2487)")]),e._v(" "),r("li",[e._v("[new-rule]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/prefer-switch/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("prefer-switch")]),r("OutboundLink")],1),e._v(" (#2331)")]),e._v(" "),r("li",[e._v("[new-rule]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/number-literal-format/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("number-literal-format")]),r("OutboundLink")],1),e._v(" (#2526)")]),e._v(" "),r("li",[e._v("[new-rule]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/deprecation/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("deprecation")]),r("OutboundLink")],1),e._v(" (#2395)")]),e._v(" "),r("li",[e._v("[new-rule]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-unnecessary-type-assertion/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-unnecessary-type-assertion")]),r("OutboundLink")],1),e._v(" (#2519)")]),e._v(" "),r("li",[e._v("[new-fixer]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/interface-over-type-literal/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("interface-over-type-literal")]),r("OutboundLink")],1),e._v(" (#2617)")]),e._v(" "),r("li",[e._v("[new-fixer]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/callable-types/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("callable-types")]),r("OutboundLink")],1),e._v(" (#2552)")]),e._v(" "),r("li",[e._v("[new-fixer]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-string-literal/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-string-literal")]),r("OutboundLink")],1),e._v(" (#2495)")]),e._v(" "),r("li",[e._v("[new-fixer]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-internal-module/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-internal-module")]),r("OutboundLink")],1),e._v(" (#2517)")]),e._v(" "),r("li",[e._v("[new-rule-option]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/align/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("align")]),r("OutboundLink")],1),e._v(" rule added "),r("code",[e._v("members")]),e._v(" option, which checks alignment of methods and properties of classes, objects, interfaces, type literals and object destructuring (#2387)")]),e._v(" "),r("li",[e._v("[new-rule-option]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/align/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("align")]),r("OutboundLink")],1),e._v(" rule added "),r("code",[e._v("elements")]),e._v(" option, which checks alignment of elements in array literals, array destructuring and tuple types (#2387)")]),e._v(" "),r("li",[e._v("[new-rule-option]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/trailing-comma/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("trailing-comma")]),r("OutboundLink")],1),e._v(" adds more granular options to specify trailing commas for arrays, objects, functions, type literals, imports, and exports (#2538)")]),e._v(" "),r("li",[e._v("[api] Deprecate "),r("code",[e._v("ScopeAwareRuleWalker")]),e._v(" and "),r("code",[e._v("BlockScopeAwareRuleWalker")]),e._v(". (#2561)")]),e._v(" "),r("li",[e._v("[develop] added support for "),r("a",{attrs:{href:"https://palantir.github.io/tslint/develop/testing-rules/",target:"_blank",rel:"noopener noreferrer"}},[e._v("error templates in rule tests"),r("OutboundLink")],1),e._v(" (#2481)")]),e._v(" "),r("li",[e._v('[bugfix] Fixes "Severity for rule not found" error (#2516)')]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-unused-expression/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-unused-expression")]),r("OutboundLink")],1),e._v(": allow "),r("code",[e._v("void(0)")]),e._v(" in addition to "),r("code",[e._v("void 0")]),e._v(" and "),r("code",[e._v("void")]),e._v(" in expression and statement position (#2645)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/align/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("align")]),r("OutboundLink")],1),e._v(": fix false positive for files with BOM (#2642)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/return-undefined/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("return-undefined")]),r("OutboundLink")],1),e._v(": Handle contextual types with ambiguous signatures; allow "),r("code",[e._v("any")]),e._v("; and handle async functions. (#2576)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/semicolon/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("semicolon")]),r("OutboundLink")],1),e._v(": don't mark semicolon as unnecessary when the next statement is on the same line (#2591)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-internal-module/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-internal-module")]),r("OutboundLink")],1),e._v(": no more false positives for global augmentation (#2517)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-unnecessary-qualifier/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-unnecessary-qualifier")]),r("OutboundLink")],1),e._v(": no longer breaks when walking a function that references "),r("code",[e._v("arguments")]),e._v(" (#2555)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/prefer-const/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("prefer-const")]),r("OutboundLink")],1),e._v(" no longer shows warnings on ambient declarations (#2391)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/callable-types/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("callable-types")]),r("OutboundLink")],1),e._v(": suggest correct fix for interfaces with type arguments (#2552)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/quotemark/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("quotemark")]),r("OutboundLink")],1),e._v(": fix regression with jsx attributes (#2605)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/adjacent-overload-signatures/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("adjacent-overload-signatures")]),r("OutboundLink")],1),e._v(" handles functions ending in semicolon (#2412)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/object-literal-key-quotes/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("object-literal-key-quotes")]),r("OutboundLink")],1),e._v(": correctly stringify numbers when fixing (#2515)")]),e._v(" "),r("li",[e._v("[bugfix]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/object-literal-key-quotes/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("object-literal-key-quotes")]),r("OutboundLink")],1),e._v(": does no longer require quotes for property names containing digits (#2515)")]),e._v(" "),r("li",[e._v("[enhancement] Failures in extended config files now indicate which file (#2588)")]),e._v(" "),r("li",[e._v("[enhancement]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/align/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("align")]),r("OutboundLink")],1),e._v(": Don't report 'statements are not aligned' for empty statements (#2653)")]),e._v(" "),r("li",[e._v("[enhancement]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/class-name/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("class-name")]),r("OutboundLink")],1),e._v(" now also checks class expressions (#2553)")]),e._v(" "),r("li",[e._v("[enhancement] "),r("code",[e._v("optionExamples")]),e._v(": Allow to use an options array directly instead of a string representation. (#2527)")]),e._v(" "),r("li",[e._v("[enhancement] "),r("code",[e._v("rulesDirectory")]),e._v(" can now be resolved with Nodes resolve logic, if the directory contains an "),r("code",[e._v("index.js")]),e._v(" (#2163) (#2358)")]),e._v(" "),r("li",[e._v("[enhancement]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-unused-expression/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-unused-expression")]),r("OutboundLink")],1),e._v(": narrow error location for comma separated expressions and conditional expressions (#2645)")]),e._v(" "),r("li",[e._v("[enhancement]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-string-literal/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-string-literal")]),r("OutboundLink")],1),e._v(" now handles escaped strings (#2495)")]),e._v(" "),r("li",[e._v("[enhancement]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-unnecessary-callback-wrapper/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-unnecessary-callback-wrapper")]),r("OutboundLink")],1),e._v(": Allow "),r("code",[e._v("x => x(x)")]),e._v(" (#2524)")]),e._v(" "),r("li",[e._v("[enhancement]"),r("a",{attrs:{href:"https://palantir.github.io/tslint/rules/no-var-keyword/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("no-var-keyword")]),r("OutboundLink")],1),e._v(": Allow global var declarations (#2513)")])]),e._v(" "),r("p",[e._v("Thanks to our contributors!")]),e._v(" "),r("ul",[r("li",[e._v("Andy Hanson")]),e._v(" "),r("li",[e._v("Alex Eagle")]),e._v(" "),r("li",[e._v("Donald Pipowitch")]),e._v(" "),r("li",[e._v("Klaus Meinhardt")]),e._v(" "),r("li",[e._v("Gord P")]),e._v(" "),r("li",[e._v("Andy")]),e._v(" "),r("li",[e._v("Quentin")]),e._v(" "),r("li",[e._v("Mitchell Wills")]),e._v(" "),r("li",[e._v("Vito")]),e._v(" "),r("li",[e._v("CSchulz")]),e._v(" "),r("li",[e._v("Josh Goldberg")]),e._v(" "),r("li",[e._v("Brian Olore")]),e._v(" "),r("li",[e._v("Manuel Lopez")]),e._v(" "),r("li",[e._v("James Clark")])]),e._v(" "),r("h2",{attrs:{id:"v5-1-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v5-1-0","aria-hidden":"true"}},[e._v("#")]),e._v(" v5.1.0")]),e._v(" "),r("ul",[r("li",[e._v("[new-rule] "),r("code",[e._v("no-invalid-template-strings")]),e._v(" (#2332)")]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("no-sparse-arrays")]),e._v(" (#2407)")]),e._v(" "),r("li",[e._v("[new-rule-option] "),r("code",[e._v("no-void-expression")]),e._v(": adds "),r("code",[e._v("ignore-arrow-function-shorthand")]),e._v(" (#2445)")]),e._v(" "),r("li",[e._v("[api] "),r("code",[e._v("tslint:all")]),e._v(" configuration (#2417)")]),e._v(" "),r("li",[e._v("[bugfix] In tslint:recommended move "),r("code",[e._v("no-reference-import")]),e._v(" from "),r("code",[e._v("jsRules")]),e._v(" to "),r("code",[e._v("rules")]),e._v(" (#2441)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("no-unnecessary-callback-wrapper")]),e._v(": only check if callback is identifier, allow all other expressions (#2510)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("member-access")]),e._v(": Skip index signature, it can not have an access modifier (#2437)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("restrict-plus-operands")]),e._v(" fixes regression where every assignment and comparison was checked (#2454)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("no-unnecessary-callback-wrapper")]),e._v(": allow async wrapper function (#2510)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("prefer-for-of")]),e._v(": No error if "),r("code",[e._v("delete")]),e._v(" is used (#2458)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("radix")]),e._v(": don't warn for missing radix on method calls (#2352)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("no-use-before-declare")]),e._v(": Handle symbol with empty declarations list. (#2436)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("strict-type-predicates")]),e._v(": Check for construct signatures in "),r("code",[e._v("isFunction")]),e._v(". (#2479)")]),e._v(" "),r("li",[e._v("[enhancement] "),r("code",[e._v("strict-boolean-expressions")]),e._v(": When "),r("code",[e._v("--strictNullChecks")]),e._v(" is turned off, "),r("code",[e._v("allow-null-union")]),e._v(" and "),r("code",[e._v("allow-undefined-union")]),e._v(' turn off "always truthy" errors. (#2373)')]),e._v(" "),r("li",[e._v("[enhancement] "),r("code",[e._v("radix")]),e._v(": added check for global.parseInt and window.parseInt (#2352)")]),e._v(" "),r("li",[e._v("[enhancement] "),r("code",[e._v("arrow-return-shorthand")]),e._v(": Improve failure message when return expression is an object literal (#2466)")])]),e._v(" "),r("p",[e._v("Thanks to our contributors!")]),e._v(" "),r("ul",[r("li",[e._v("Andy Hanson")]),e._v(" "),r("li",[e._v("bumbleblym")]),e._v(" "),r("li",[e._v("Klaus Meinhardt")]),e._v(" "),r("li",[e._v("Jonas Kello")]),e._v(" "),r("li",[e._v("Minko Gechev")]),e._v(" "),r("li",[e._v("Donald Pipowitch")])]),e._v(" "),r("h2",{attrs:{id:"v5-0-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v5-0-0","aria-hidden":"true"}},[e._v("#")]),e._v(" v5.0.0")]),e._v(" "),r("h2",{attrs:{id:"breaking-changes"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#breaking-changes","aria-hidden":"true"}},[e._v("#")]),e._v(" 🔥 Breaking changes")]),e._v(" "),r("ul",[r("li",[e._v("Minimum version of TypeScript version is now 2.1.0 (#2425)")]),e._v(" "),r("li",[e._v('The severity level of rules are now configurable and defaults to severity "error". This affects the output of formatters:\n'),r("ul",[r("li",[e._v("[formatter] "),r("code",[e._v("msbuild")]),e._v(' was outputting all failures as "warning".')]),e._v(" "),r("li",[e._v("[formatter] "),r("code",[e._v("pmd")]),e._v(" was outputting all failures as priority 1. Now, it uses "),r("em",[e._v("priority 3")]),e._v(' for "error" (default) and '),r("em",[e._v("priority 4")]),e._v(' for "warning"')])])]),e._v(" "),r("li",[e._v("[formatter] "),r("code",[e._v("json")]),e._v(" changed the "),r("code",[e._v("fix")]),e._v(" property to now contain either one replacement or an array of replacements (#2403)")]),e._v(" "),r("li",[r("code",[e._v("tslint:recommended")]),e._v(" configuration updated with "),r("code",[e._v("tslint:latest")]),e._v(" rules & options (#2424)")]),e._v(" "),r("li",[e._v("Removed "),r("code",[e._v("no-unused-new")]),e._v(" rule, with logic moved into "),r("code",[e._v("no-unused-expression")]),e._v(" (#2269)")]),e._v(" "),r("li",[r("code",[e._v("no-trailing-whitespace")]),e._v(" now checks template strings by default. Use the new options "),r("code",[e._v("ignore-template-strings")]),e._v(" to restore the old behavior. (#2359)")])]),e._v(" "),r("h3",{attrs:{id:"api-breaks-for-custom-rules"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#api-breaks-for-custom-rules","aria-hidden":"true"}},[e._v("#")]),e._v(" API breaks for custom rules")]),e._v(" "),r("ul",[r("li",[r("p",[e._v("Removed method "),r("code",[e._v("skip")]),e._v(" from "),r("code",[e._v("RuleWalker")]),e._v(" (#2313)")])]),e._v(" "),r("li",[r("p",[e._v("Removed all use of the TypeScript Language Service, use only Program APIs instead (#2235)")]),e._v(" "),r("ul",[r("li",[r("p",[e._v("This means that some rules that previously worked without the type checker "),r("em",[e._v("now require it")]),e._v(". This includes:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("no-unused-variable")])]),e._v(" "),r("li",[r("code",[e._v("no-use-before-declare")])])])]),e._v(" "),r("li",[r("p",[e._v("This breaks custom rule compilation. If your rule was not using the "),r("code",[e._v("ts.LanguageService")]),e._v(" APIs, the migration is quite simple:")])])]),e._v(" "),r("div",{staticClass:"language-diff extra-class"},[r("pre",{pre:!0,attrs:{class:"language-diff"}},[r("code",[r("span",{pre:!0,attrs:{class:"token deleted"}},[e._v("- public applyWithProgram(srcFile: ts.SourceFile, langSvc: ts.LanguageService): Lint.RuleFailure[] {")]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token deleted"}},[e._v("-     return this.applyWithWalker(new Walker(srcFile, this.getOptions(), langSvc.getProgram()));")]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token inserted"}},[e._v("+ public applyWithProgram(srcFile: ts.SourceFile, program: ts.Program): Lint.RuleFailure[] {")]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token inserted"}},[e._v("+     return this.applyWithWalker(new Walker(srcFile, this.getOptions(), program));")]),e._v("\n")])])]),r("ul",[r("li",[e._v("N.B. If you are refactoring your custom rules, consider "),r("a",{attrs:{href:"https://palantir.github.io/tslint/develop/custom-rules/performance.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("these performance tips for writing custom rules"),r("OutboundLink")],1),e._v(".")])])]),e._v(" "),r("li",[r("p",[e._v("Removed "),r("code",[e._v("createFix")]),e._v(". Replacements should be passed directly into addFailure. (#2403)")])]),e._v(" "),r("li",[r("p",[e._v("Removed deprecated "),r("code",[e._v("scanAllTokens")]),e._v(" and "),r("code",[e._v("skippableTokenAwareRuleWalker")]),e._v(" (#2370)")])])]),e._v(" "),r("h2",{attrs:{id:"notable-features-enhancements"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#notable-features-enhancements","aria-hidden":"true"}},[e._v("#")]),e._v(" 🎉 Notable features & enhancements")]),e._v(" "),r("ul",[r("li",[r("p",[e._v("[feature] The severity level of rules are now individually configurable. Default severity can also be configured. (#629, #345)")]),e._v(" "),r("ul",[r("li",[e._v("Valid values for "),r("code",[e._v("severity")]),e._v(": "),r("code",[e._v("default")]),e._v(" | "),r("code",[e._v("error | warn | warning | none | off")])]),e._v(" "),r("li",[e._v("Valid values for "),r("code",[e._v("defaultSeverity")]),e._v(": "),r("code",[e._v("error | warn | warning | none | off")])]),e._v(" "),r("li",[e._v("Old style:")])]),e._v(" "),r("div",{staticClass:"language-json extra-class"},[r("pre",{pre:!0,attrs:{class:"language-json"}},[r("code",[r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),r("span",{pre:!0,attrs:{class:"token property"}},[e._v('"extends"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[e._v('"tslint:latest"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),r("span",{pre:!0,attrs:{class:"token property"}},[e._v('"rules"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n        "),r("span",{pre:!0,attrs:{class:"token property"}},[e._v('"callable-types"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n        "),r("span",{pre:!0,attrs:{class:"token property"}},[e._v('"max-line-length"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),r("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[e._v("140")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n    "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),r("ul",[r("li",[e._v("New style (in this example, "),r("code",[e._v("callable-types")]),e._v(" outputs errors and "),r("code",[e._v("max-line-length")]),e._v(" outputs warnings):")])]),e._v(" "),r("div",{staticClass:"language-json extra-class"},[r("pre",{pre:!0,attrs:{class:"language-json"}},[r("code",[r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),r("span",{pre:!0,attrs:{class:"token property"}},[e._v('"extends"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[e._v('"tslint:latest"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),r("span",{pre:!0,attrs:{class:"token property"}},[e._v('"defaultSeverity"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[e._v('"error"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),r("span",{pre:!0,attrs:{class:"token property"}},[e._v('"rules"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n        "),r("span",{pre:!0,attrs:{class:"token property"}},[e._v('"callable-types"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n        "),r("span",{pre:!0,attrs:{class:"token property"}},[e._v('"max-line-length"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n            "),r("span",{pre:!0,attrs:{class:"token property"}},[e._v('"options"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[e._v("140")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n            "),r("span",{pre:!0,attrs:{class:"token property"}},[e._v('"severity"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[e._v('"warning"')]),e._v("\n        "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n    "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])])]),e._v(" "),r("li",[r("p",[e._v("[new-rule] "),r("code",[e._v("prefer-template")]),e._v(" (#2243)")])]),e._v(" "),r("li",[r("p",[e._v("[new-rule] "),r("code",[e._v("return-undefined")]),e._v(" (#2251)")])]),e._v(" "),r("li",[r("p",[e._v("[new-rule] "),r("code",[e._v("no-reference-import")]),e._v(" (#2273)")])]),e._v(" "),r("li",[r("p",[e._v("[new-rule] "),r("code",[e._v("no-unnecessary-callback-wrapper")]),e._v(" (#2249)")])]),e._v(" "),r("li",[r("p",[e._v("[new-fixer] "),r("code",[e._v("linebreak-style")]),e._v(" (#2394)")])]),e._v(" "),r("li",[r("p",[e._v("[new-fixer] "),r("code",[e._v("eofline")]),e._v(" (#2393)")])])]),e._v(" "),r("h2",{attrs:{id:"full-list-of-changes"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#full-list-of-changes","aria-hidden":"true"}},[e._v("#")]),e._v(" Full list of changes")]),e._v(" "),r("ul",[r("li",[e._v("[api] Added class "),r("code",[e._v("OptionallyTypedRule")]),e._v(", which allows rule authors to write a rule that applies when typing is either enabled or disabled (#2300)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("prefer-function-over-method")]),e._v(" now ignores abstract methods (#2307)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("arrow-parens")]),e._v(" with option "),r("code",[e._v("ban-single-arg-parens")]),e._v(" now correctly handles functions with return type annotation (#2265)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("prefer-function-over-method")]),e._v(" exclude overload signatures (#2315)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("use-isnan")]),e._v(" now applies only to comparison operators (#2317)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("file-header-rule")]),e._v(" now handles single-line comments correctly (#2320)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("newline-before-return")]),e._v(": fix handling of blank lines between comments (#2321)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("trailing-comma")]),e._v(" No longer enforce trailing commas in type parameters and tuple types (#2236)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("align")]),e._v(" don't fix if it would remove code (#2379)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("unified-signatures")]),e._v(" now recognizes rest parameters (#2342)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("no-inferrable-types")]),e._v(" don't warn for inferrable type on readonly property (#2312)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("trailing-comma")]),e._v(" no longer crashes on new without parentheses (e.g. "),r("code",[e._v("new Foo")]),e._v(") (#2389)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("semicolon")]),e._v(" Ignore comments when checking for unnecessary semicolon (#2240)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("semicolon")]),e._v(" Don't report unnecessary semicolon when followed by regex literal (#2240)")]),e._v(" "),r("li",[e._v("[bugfix] CLI: exit with 0 on type check errors when "),r("code",[e._v("--force")]),e._v(" is specified (#2322)")]),e._v(" "),r("li",[e._v("[bugfix] CLI: "),r("code",[e._v("--test")]),e._v(" now correctly strips single quotes from patterns on windows (#2322)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("prefer-const")]),e._v(" only fix initialized variables (#2219)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("prefer-const")]),e._v(" correctly handle variables shadowed by parameters and catched exceptions (#2219)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("prefer-const")]),e._v(" don't warn if one variable in a for loop initializer can not be const (#2219)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("prefer-const")]),e._v(" handle more cases in destructuring (#2219)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("no-unused-expression")]),e._v(" allow comma separated assignments (#2269)")]),e._v(" "),r("li",[e._v("[chore] removed update-notifier dependency (#2262)")]),e._v(" "),r("li",[e._v("[development] allow rule tests to specify version requirement for typescript (#2323)")]),e._v(" "),r("li",[e._v("[enhancement] "),r("code",[e._v("ignore-properties")]),e._v(" option of "),r("code",[e._v("no-inferrable-types")]),e._v(" now also ignores parameter properties (#2312)")]),e._v(" "),r("li",[e._v("[enhancement] "),r("code",[e._v("unified-signatures")]),e._v(" now displays line number of the overload to unify if there are more than 2 overloads (#2270)")]),e._v(" "),r("li",[e._v("[enhancement] "),r("code",[e._v("trailing-comma")]),e._v(" New checks for CallSignature and NamedExports (#2236)")]),e._v(" "),r("li",[e._v("[enhancement] "),r("code",[e._v("semicolon")]),e._v(" New check for export statements, function overloads and shorthand module declaration (#2240)")]),e._v(" "),r("li",[e._v("[enhancement] "),r("code",[e._v("semicolon")]),e._v(' Report unnecessary semicolons in classes and in statement position (for option "always" too) (#2240)')]),e._v(" "),r("li",[e._v("[enhancement] "),r("code",[e._v("semicolon")]),e._v(" check for semicolon after method overload (#2240)")]),e._v(" "),r("li",[e._v("[enhancement] "),r("code",[e._v("array-type")]),e._v(" now consider "),r("code",[e._v("object")]),e._v(", "),r("code",[e._v("undefined")]),e._v(" and "),r("code",[e._v("never")]),e._v(" as simple types, allowing "),r("code",[e._v("object")]),e._v(", "),r("code",[e._v("undefined[]")]),e._v(" and "),r("code",[e._v("never[]")]),e._v(" (#1843)(#2353)")]),e._v(" "),r("li",[e._v("[enhancement] "),r("code",[e._v("align")]),e._v(" check statement alignment for all blocks (#2379)")]),e._v(" "),r("li",[e._v("[enhancement] "),r("code",[e._v("align")]),e._v("check parameter alignment for all signatures (#2379)")]),e._v(" "),r("li",[e._v("[enhancement] "),r("code",[e._v("--test")]),e._v(" can handle multiple paths at once (#2322)")]),e._v(" "),r("li",[e._v("[enhancement] "),r("code",[e._v("only-arrow-functions")]),e._v(" allow functions that use "),r("code",[e._v("this")]),e._v(" in the body (#2229)")]),e._v(" "),r("li",[e._v("[enhancement] CLI: print error when "),r("code",[e._v("--type-check")]),e._v(" is used without "),r("code",[e._v("--project")]),e._v(" (#2322)")]),e._v(" "),r("li",[e._v("[enhancement] CLI: don't print stack trace on type check error (#2322)")]),e._v(" "),r("li",[e._v("[enhancement] CLI: added "),r("code",[e._v("-p")]),e._v(" as shorthand for "),r("code",[e._v("--project")]),e._v(" to be consistent with "),r("code",[e._v("tsc")]),e._v(" (#2322)")]),e._v(" "),r("li",[e._v("[enhancement] "),r("code",[e._v("prefer-const")]),e._v(" show warnings for "),r("code",[e._v("var")]),e._v(" (#2219)")]),e._v(" "),r("li",[e._v("[enhancement] "),r("code",[e._v("quotemark")]),e._v(" fixer unescapes original quotemark (e.g. "),r("code",[e._v("'\\''")]),e._v(" -> "),r("code",[e._v('"\'"')]),e._v(") (#2359)")]),e._v(" "),r("li",[e._v("[enhancement] "),r("code",[e._v("no-unused-expression")]),e._v(" allow indirect eval "),r("code",[e._v('(0, eval)("");')]),e._v(" (#2269)")]),e._v(" "),r("li",[e._v("[enhancement] "),r("code",[e._v("no-unused-expression")]),e._v(" checking for unused new can now use option "),r("code",[e._v("allow-fast-null-checks")]),e._v(" (#2269)")]),e._v(" "),r("li",[e._v("[enhancement] "),r("code",[e._v("no-unused-expression")]),e._v(" find unused comma separated expressions in all locations of the code (#2269)")]),e._v(" "),r("li",[e._v("[enhancement] "),r("code",[e._v("no-unused-expression")]),e._v(" find unused expressions inside void expression (#2269)")]),e._v(" "),r("li",[e._v("[new-config-option] Adds "),r("code",[e._v("defaultSeverity")]),e._v(" with options "),r("code",[e._v("error")]),e._v(", "),r("code",[e._v("warning")]),e._v(", and "),r("code",[e._v("off")]),e._v(". (#2416)")]),e._v(" "),r("li",[e._v("[new-formatter] TAP formatter (#2325)")]),e._v(" "),r("li",[e._v("[new-rule-option] "),r("code",[e._v("no-unused-expression")]),e._v(" adds option "),r("code",[e._v("allow-tagged-template")]),e._v(" to allow tagged templates for side effects (#2269)")]),e._v(" "),r("li",[e._v("[new-rule-option] "),r("code",[e._v("no-unused-expression")]),e._v(" adds option "),r("code",[e._v("allow-new")]),e._v(" to allow "),r("code",[e._v("new")]),e._v(" without using the new object (#2269)")]),e._v(" "),r("li",[e._v("[new-rule-option] "),r("code",[e._v("member-access")]),e._v(" adds "),r("code",[e._v("no-public")]),e._v(" option (#2247)")]),e._v(" "),r("li",[e._v("[new-rule-option] "),r("code",[e._v("curly")]),e._v(" added option "),r("code",[e._v("ignore-same-line")]),e._v(" (#2334)")]),e._v(" "),r("li",[e._v("[new-rule-option] "),r("code",[e._v('{destructuring: "all"}')]),e._v(" to only warn if all variables in a destructuring can be const (#2219)")]),e._v(" "),r("li",[e._v("[new-rule-option] added "),r("code",[e._v("ignore-template-strings")]),e._v(" to "),r("code",[e._v("no-trailing-whitespace")]),e._v(" (#2359)")]),e._v(" "),r("li",[e._v("[rule-update] "),r("code",[e._v("array-type")]),e._v(" now consider "),r("code",[e._v("undefined")]),e._v(" and "),r("code",[e._v("never")]),e._v(" as simple types, allowing "),r("code",[e._v("undefined[]")]),e._v(" and "),r("code",[e._v("never[]")]),e._v(" (#1843)")])]),e._v(" "),r("p",[e._v("Thanks to our contributors!")]),e._v(" "),r("ul",[r("li",[e._v("Brian Olore")]),e._v(" "),r("li",[e._v("Andy Hanson")]),e._v(" "),r("li",[e._v("@andy-ms")]),e._v(" "),r("li",[e._v("Chris Barr")]),e._v(" "),r("li",[e._v("Klaus Meinhardt")]),e._v(" "),r("li",[e._v("@bumbleblym")]),e._v(" "),r("li",[e._v("Josh Goldberg")]),e._v(" "),r("li",[e._v("James Clark")]),e._v(" "),r("li",[e._v("@vilic")]),e._v(" "),r("li",[e._v("Aleksandr Filatov")]),e._v(" "),r("li",[e._v("Matt Banz")]),e._v(" "),r("li",[e._v("Karol Janyst")]),e._v(" "),r("li",[e._v("Mike Deverell")]),e._v(" "),r("li",[e._v("Alexander James Phillips")]),e._v(" "),r("li",[e._v("Irfan Hudda")])]),e._v(" "),r("h2",{attrs:{id:"v4-5-1"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v4-5-1","aria-hidden":"true"}},[e._v("#")]),e._v(" v4.5.1")]),e._v(" "),r("ul",[r("li",[e._v("[enhancement] Updated recommended rules to include "),r("code",[e._v("ban-types")]),e._v(" and "),r("code",[e._v("no-duplicate-super")]),e._v(" (#2271)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("object-literal-key-quotes")]),e._v(" handle negative number property name (#2273)")])]),e._v(" "),r("h2",{attrs:{id:"v4-5-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v4-5-0","aria-hidden":"true"}},[e._v("#")]),e._v(" v4.5.0")]),e._v(" "),r("ul",[r("li",[e._v("[new-rule] "),r("code",[e._v("no-import-side-effect")]),e._v(" (#2155)")]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("match-default-export-name")]),e._v(" (#2117)")]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("no-non-null-assertion")]),e._v(" (#2221)")]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("ban-types")]),e._v(" (#2175)")]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("no-duplicate-super")]),e._v(" (#2038)")]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("newline-before-return")]),e._v(" (#2173)")]),e._v(" "),r("li",[e._v("[new-rule-option] "),r("code",[e._v("completed-docs")]),e._v(" adds options for location, type, and privacy. Also adds interfaces, enums, types (#2095)")]),e._v(" "),r("li",[e._v("[new-rule-option] "),r("code",[e._v("no-inferrable-types")]),e._v(" adds option "),r("code",[e._v("ignore-properties")]),e._v(" (#2178)")]),e._v(" "),r("li",[e._v("[new-rule-option] "),r("code",[e._v("typedef")]),e._v(" adds options "),r("code",[e._v("object-destructuring")]),e._v(" and "),r("code",[e._v("array-destructuring")]),e._v(" options (#2146)")]),e._v(" "),r("li",[e._v("[new-rule-option] "),r("code",[e._v("member-ordering")]),e._v(" adds option "),r("code",[e._v("alphabetize")]),e._v(" (#2101)")]),e._v(" "),r("li",[e._v("[new-rule-option] "),r("code",[e._v("no-trailing-whitespace")]),e._v(" adds option "),r("code",[e._v("ignore-jsdoc")]),e._v(" (#2177)")]),e._v(" "),r("li",[e._v("[new-rule-option] "),r("code",[e._v("no-trailing-whitespace")]),e._v(" adds option "),r("code",[e._v("ignore-comments")]),e._v(" option (#2153)")]),e._v(" "),r("li",[e._v("[new-fixer] "),r("code",[e._v("no-inferrable-types")]),e._v(" automatically remove inferrable type annotations (#2178)")]),e._v(" "),r("li",[e._v("[new-fixer] "),r("code",[e._v("no-any")]),e._v(" (#2165)")]),e._v(" "),r("li",[e._v("[new-fixer] "),r("code",[e._v("noConsecutiveBlankLines")]),e._v(" (#2201)")]),e._v(" "),r("li",[e._v("[new-fixer] "),r("code",[e._v("object-literal-shorthand")]),e._v(" (#2165)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("no-switch-case-fallthrough")]),e._v(" handle break, throw, continue and return nested in block, if-else and switch (#2218)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("no-switch-case-fallthrough")]),e._v(" allow empty case clauses before default clause (#2218)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("no-mergeable-namespace")]),e._v(" ignore property types that can't be merged (#2105)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("object-literal-key-quotes")]),e._v(" no need to quote a float if its .toString() is the same. (#2144)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("no-consecutive-blank-lines")]),e._v(" Correctly apply fixes at EOF (#2239)")]),e._v(" "),r("li",[e._v("[bugfix]: Fixes installation issue with node 7.5 (#2212)")]),e._v(" "),r("li",[e._v("[bugfix]: "),r("code",[e._v("quotemark")]),e._v(" now handles escaped chars (#2224)")]),e._v(" "),r("li",[e._v("[enhancement] Don't exit when a rule requires type checking but type checking is not enabled (#2188)")]),e._v(" "),r("li",[e._v("[enhancement] "),r("code",[e._v("no-switch-case-fallthrough")]),e._v(" allow single line comment "),r("code",[e._v("// falls through")]),e._v(" (#2218)")]),e._v(" "),r("li",[e._v("[enhancement] "),r("code",[e._v("no-unbound-method")]),e._v(" allows property access and binary expressions (#2143)")]),e._v(" "),r("li",[e._v("[api] Introduce "),r("code",[e._v("AbstractWalker")]),e._v(" for performance (#2093)\n"),r("ul",[r("li",[e._v("see "),r("a",{attrs:{href:"https://palantir.github.io/tslint/develop/custom-rules/performance.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("performance"),r("OutboundLink")],1),e._v(" and "),r("a",{attrs:{href:"https://palantir.github.io/tslint/develop/custom-rules/migration.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("migration"),r("OutboundLink")],1),e._v(" docs")])])])]),e._v(" "),r("p",[e._v("Thanks to our contributors!")]),e._v(" "),r("ul",[r("li",[e._v("Andy Hanson")]),e._v(" "),r("li",[e._v("Stefan Reichel")]),e._v(" "),r("li",[e._v("Shlomi Assaf")]),e._v(" "),r("li",[e._v("Josh Goldberg")]),e._v(" "),r("li",[e._v("Minko Gechev")]),e._v(" "),r("li",[e._v("Irfan Hudda")]),e._v(" "),r("li",[e._v("Klaus Meinhardt")]),e._v(" "),r("li",[e._v("Martin Probst")]),e._v(" "),r("li",[e._v("Naoto Usuyama")]),e._v(" "),r("li",[e._v("Caleb Eggensperger")]),e._v(" "),r("li",[e._v("Arturs Vonda")]),e._v(" "),r("li",[e._v("Joscha Feth")]),e._v(" "),r("li",[e._v("Moritz")]),e._v(" "),r("li",[e._v("Alexander Rusakov")]),e._v(" "),r("li",[e._v("Alex Ryan")]),e._v(" "),r("li",[e._v("Andy")]),e._v(" "),r("li",[e._v("Yuichi Nukiyama")])]),e._v(" "),r("h2",{attrs:{id:"v4-4-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v4-4-2","aria-hidden":"true"}},[e._v("#")]),e._v(" v4.4.2")]),e._v(" "),r("ul",[r("li",[e._v("[bugfix] "),r("code",[e._v("whitespace")]),e._v(" rule caused false positive on EOF (#2131)")]),e._v(" "),r("li",[e._v("[bugfix] WebStorm fails because "),r("code",[e._v("json")]),e._v(" formatter parameter has extra space (#2132)")])]),e._v(" "),r("h2",{attrs:{id:"v4-4-1"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v4-4-1","aria-hidden":"true"}},[e._v("#")]),e._v(" v4.4.1")]),e._v(" "),r("ul",[r("li",[e._v("[bugfix] errant space in recommended ruleset (couldn't find "),r("code",[e._v("no-misused-new")]),e._v(")")])]),e._v(" "),r("h2",{attrs:{id:"v4-4-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v4-4-0","aria-hidden":"true"}},[e._v("#")]),e._v(" v4.4.0")]),e._v(" "),r("ul",[r("li",[e._v("[new-rule] "),r("code",[e._v("arrow-return-shorthand")]),e._v(" (#1972)")]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("no-unbound-method")]),e._v(" (#2089)")]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("no-boolean-literal-compare")]),e._v(" (#2013)")]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("no-unsafe-any")]),e._v(" (#2047)")]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("no-unnecessary-qualifier")]),e._v(" (#2008)")]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("no-unnecessary-initializer")]),e._v(" (#2106)")]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("await-promise")]),e._v(" (#2102)")]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("no-floating-promises")]),e._v(" (#1632)")]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("strict-type-predicates")]),e._v(" (#2046)")]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("no-misused-new")]),e._v(" (#1963)")]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("prefer-method-signature")]),e._v(" (#2028)")]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("prefer-function-over-method")]),e._v(" (#2037)")]),e._v(" "),r("li",[e._v("[new-rule-option] "),r("code",[e._v("allow-fast-null-checks")]),e._v(" added to "),r("code",[e._v("no-unused-expression")]),e._v(" (#1638)")]),e._v(" "),r("li",[e._v("[new-rule-option] "),r("code",[e._v("comment-format-rule")]),e._v(" adds "),r("code",[e._v("ignore-words")]),e._v(" and "),r("code",[e._v("ignore-pattern")]),e._v(" options (#1757)")]),e._v(" "),r("li",[e._v("[new-rule-option] "),r("code",[e._v("whitespace")]),e._v(" adds "),r("code",[e._v("check-preblock")]),e._v(" option (#2002)")]),e._v(" "),r("li",[e._v("[new-rule-option] "),r("code",[e._v("strict-boolean-expressions")]),e._v(" adds "),r("code",[e._v("allow-null-union")]),e._v(", "),r("code",[e._v("allow-undefined-union")]),e._v(", "),r("code",[e._v("allow-string")]),e._v(", and "),r("code",[e._v("allow-number")]),e._v(" and (#2033)")]),e._v(" "),r("li",[e._v("[new-fixer] "),r("code",[e._v("align")]),e._v(" (#2097)")]),e._v(" "),r("li",[e._v("[new-fixer] "),r("code",[e._v("no-trailing-whitespace")]),e._v(" (#2060)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("no-magic-numbers")]),e._v(" false positive on default parameter values (#2004)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("no-empty-interface")]),e._v(" allow empty interface with 2 or more parents (#2070)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("no-trailing-whitespace")]),e._v(" fixed for comments and EOF (#2060)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("no-empty")]),e._v(" no longer fails for private or protected constructor (#1976)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("tslint:disable")]),e._v("/"),r("code",[e._v("tslint-enable")]),e._v(" now handles multiple rules and fixes what code is enabled/disabled (#2061)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("no-inferrable-types")]),e._v(" now validates property declarations (#2081)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("unified-signatures")]),e._v(" false positive (#2016)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("whitespace")]),e._v(" finds all whitespace errors in JsxExpressions and TemplateExpressions (#2036)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("comment-format")]),e._v(" no more false positives in JsxText (#2036)")]),e._v(" "),r("li",[e._v("[enhancement] "),r("code",[e._v("--test")]),e._v(" option now accepts glob (#2079)")])]),e._v(" "),r("p",[e._v("Thanks to our contributors!")]),e._v(" "),r("ul",[r("li",[e._v("Alexander Rusakov")]),e._v(" "),r("li",[e._v("Andrii Dieiev")]),e._v(" "),r("li",[e._v("@andy-ms")]),e._v(" "),r("li",[e._v("Andy Hanson")]),e._v(" "),r("li",[e._v("Josh Goldberg")]),e._v(" "),r("li",[e._v("Kei Son")]),e._v(" "),r("li",[e._v("Klaus Meinhardt")]),e._v(" "),r("li",[e._v("Krati Ahuja")]),e._v(" "),r("li",[e._v("Martin Probst")]),e._v(" "),r("li",[e._v("Mohsen Azimi")]),e._v(" "),r("li",[e._v("Romke van der Meulen")]),e._v(" "),r("li",[e._v("cameron-mcateer")])]),e._v(" "),r("h2",{attrs:{id:"v4-3-1"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v4-3-1","aria-hidden":"true"}},[e._v("#")]),e._v(" v4.3.1")]),e._v(" "),r("ul",[r("li",[e._v("[bugfix] Fix back-compat break. Allow formattersDirectory === null (#1997)")])]),e._v(" "),r("h2",{attrs:{id:"v4-3-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v4-3-0","aria-hidden":"true"}},[e._v("#")]),e._v(" v4.3.0")]),e._v(" "),r("ul",[r("li",[r("strong",[e._v("Enabled additional rules in "),r("code",[e._v("tslint:latest")]),e._v(" configuration")]),e._v(" (#1981)")]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("space-before-function-paren")]),e._v(" (#1897)")]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("typeof-compare")]),e._v(" (#1927)")]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("import-spacing")]),e._v(" (#1935)")]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("unified-signatures")]),e._v(" (#1944)")]),e._v(" "),r("li",[e._v("[new-fixer] "),r("code",[e._v("object-literal-key-quotes")]),e._v(" (#1953)")]),e._v(" "),r("li",[e._v("[new-fixer] "),r("code",[e._v("no-angle-bracket-type-assertion")]),e._v(" (#1979)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("adjacent-overload-signature")]),e._v(" now handles static/computed function names (#1831)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("file-header")]),e._v(" now handles files with only comments (#1913)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("no-consecutive-blank-lines")]),e._v(" now allows blank lines in template strings (#1886)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("object-literal-key-quotes")]),e._v(" no longer throws exception when using rest operator (#1916)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("restrict-plus-operands")]),e._v(" no longer shows false positive in ternary operation (#1925)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("prefer-for-of")]),e._v(" now handles nested "),r("code",[e._v("for")]),e._v(" loops with reused iterator (#1926)")]),e._v(" "),r("li",[e._v("[bugfix] Exit gracefully when "),r("code",[e._v("tsconfig.json")]),e._v(" passed as "),r("code",[e._v("--project")]),e._v(" argument doens't have files (#1933)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("object-literal-key-quotes")]),e._v(" now handles shorthand and spread properties (#1945)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("arrow-parens")]),e._v(" Allow binding patterns "),r("code",[e._v("([x, y]) => ...")]),e._v(" and "),r("code",[e._v("({x, y}) => ...")]),e._v(" to have parens (#1958)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("semicolon")]),e._v(" fixer now handles comma separator in interfaces and indicates failure when commas are using in interfaces (#1856)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("only-arrow-functions")]),e._v(" option "),r("code",[e._v("allow-named-functions")]),e._v(" now allows function declarations (#1961)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("prefer-for-of")]),e._v(" no longer shows false positive when array is in parentheses (#1986)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("prefer-const")]),e._v(" now works for TypeScript versions < 2.1.0 (#1989)")]),e._v(" "),r("li",[e._v("[enhancement] "),r("code",[e._v("member-access")]),e._v(" narrow location of error (#1964)")])]),e._v(" "),r("p",[e._v("Thanks to our contributors!")]),e._v(" "),r("ul",[r("li",[e._v("Andrii Dieiev")]),e._v(" "),r("li",[e._v("@andy-ms")]),e._v(" "),r("li",[e._v("Andy Hanson")]),e._v(" "),r("li",[e._v("Josh Goldberg")]),e._v(" "),r("li",[e._v("Klaus Meinhardt")]),e._v(" "),r("li",[e._v("Linda_pp")]),e._v(" "),r("li",[e._v("Mohsen Azimi")]),e._v(" "),r("li",[e._v("Victor Grigoriu")]),e._v(" "),r("li",[e._v("Yuichi Nukiyama")]),e._v(" "),r("li",[e._v("cameron-mcateer")])]),e._v(" "),r("h2",{attrs:{id:"v4-2-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v4-2-0","aria-hidden":"true"}},[e._v("#")]),e._v(" v4.2.0")]),e._v(" "),r("ul",[r("li",[e._v("[new-rule] "),r("code",[e._v("no-string-throw")]),e._v(" (#1878)")]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("no-empty-interface")]),e._v(" (#1889)")]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("interface-over-type-literal")]),e._v(" (#1890)")]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("callable-types")]),e._v(" (#1891)")]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("no-void-expression")]),e._v(" (#1903)")]),e._v(" "),r("li",[e._v("[new-rule-option] "),r("code",[e._v("ban-single-arg-parens")]),e._v(" added to "),r("code",[e._v("arrow-parens")]),e._v(" (#1893)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("prefer-const")]),e._v(" handles destructuring arrays (#1894), destructuring objects (#1906), and forward references (#1908)")]),e._v(" "),r("li",[e._v("[bugfix] Don't error for misplaced braces for 'else' in "),r("code",[e._v("one-line")]),e._v(" rule (#1866)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("no-shadowed-variable")]),e._v(" now identifies shadowed "),r("code",[e._v("for")]),e._v(" iterator (#1816)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("object-literal-key-quotes")]),e._v(" now includes function names (#1874)")]),e._v(" "),r("li",[e._v("[bugfix] error when EOF comes after "),r("code",[e._v("disable-next-line")]),e._v(" comment (#1902)")])]),e._v(" "),r("p",[e._v("Thanks to our contributors!")]),e._v(" "),r("ul",[r("li",[e._v("Andrew Scott")]),e._v(" "),r("li",[e._v("@andy-ms")]),e._v(" "),r("li",[e._v("Andy Hanson")]),e._v(" "),r("li",[e._v("James Booth")]),e._v(" "),r("li",[e._v("Klaus Meinhardt")]),e._v(" "),r("li",[e._v("Vladimir Matveev")])]),e._v(" "),r("h2",{attrs:{id:"v4-1-1"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v4-1-1","aria-hidden":"true"}},[e._v("#")]),e._v(" v4.1.1")]),e._v(" "),r("ul",[r("li",[e._v("[bugfix] "),r("code",[e._v("typedef")]),e._v(" rule was showing false positive for "),r("code",[e._v("catch")]),e._v(" clause (#1887)")])]),e._v(" "),r("h2",{attrs:{id:"v4-1-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v4-1-0","aria-hidden":"true"}},[e._v("#")]),e._v(" v4.1.0")]),e._v(" "),r("ul",[r("li",[e._v("[new-rule] "),r("code",[e._v("prefer-const")]),e._v(" (#1801)")]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("strict-boolean-expressions")]),e._v(" (#1820)")]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("no-magic-numbers")]),e._v(" (#1799)")]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("import-blacklist")]),e._v(" (#1841)")]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("promise-functions-async")]),e._v(" (#1779)")]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("no-inferred-empty-object-type")]),e._v(": a type must be specified when using a generic class/function/etc (#1821)")]),e._v(" "),r("li",[e._v("[new-rule-option] "),r("code",[e._v("allow-named-functions")]),e._v(" added to "),r("code",[e._v("only-arrow-functions")]),e._v(" (#1857)")]),e._v(" "),r("li",[e._v("[new-fixer] "),r("code",[e._v("prefer-const")]),e._v(" (#1801)")]),e._v(" "),r("li",[e._v("[new-fixer] "),r("code",[e._v("quotemark")]),e._v(" (#1790)")]),e._v(" "),r("li",[e._v("[new-formatter] "),r("code",[e._v("code-frame")]),e._v(" formatter shows you the error in context (#1819)")]),e._v(" "),r("li",[e._v("[enhancement] "),r("code",[e._v("no-internal-module")]),e._v(" failures highlight less text (#1781)")]),e._v(" "),r("li",[e._v("[enhancement] Avoid auto-fixing errors that would result in compilation errors for rules that use type-check (#1608)")]),e._v(" "),r("li",[e._v("[rule-change] "),r("code",[e._v("only-arrow-functions")]),e._v(" will allow functions with a "),r("code",[e._v("this")]),e._v(" parameter (#1597)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("no-use-before-declare")]),e._v(" false positive on named import (#1620)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("prefer-for-of")]),e._v(" was showing false positive when the element is assigned (#1813)")]),e._v(" "),r("li",[e._v("[bugfix] The command line argument "),r("code",[e._v("type-check")]),e._v(" was swallowing the next argument (#1783)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("tslint:disable-line")]),e._v(" was re-enabling "),r("code",[e._v("tslint:disable")]),e._v(" (#1634)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("adjacent-overload-signatures")]),e._v(" did not work for constructors (#1800)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("checkstyle")]),e._v(" formatter was reporting errors under one file (#1811)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("trailing-comma")]),e._v(" was applied to parameter lists (#1775)")]),e._v(" "),r("li",[e._v("[api] CLI logic moved into API friendly class (#1688)")])]),e._v(" "),r("p",[e._v("Thanks to our contributors!")]),e._v(" "),r("ul",[r("li",[e._v("Alex Eagle")]),e._v(" "),r("li",[e._v("Andrii Dieiev")]),e._v(" "),r("li",[e._v("Andy Hanson")]),e._v(" "),r("li",[e._v("Art Chaidarun")]),e._v(" "),r("li",[e._v("Donald Pipowitch")]),e._v(" "),r("li",[e._v("Feisal Ahmad")]),e._v(" "),r("li",[e._v("Josh Goldberg")]),e._v(" "),r("li",[e._v("Klaus Meinhardt")]),e._v(" "),r("li",[e._v("Maciej Sypień")]),e._v(" "),r("li",[e._v("Mohsen Azimi")]),e._v(" "),r("li",[e._v("Ryan Lester")]),e._v(" "),r("li",[e._v("Simon Schick")]),e._v(" "),r("li",[e._v("Subhash Sharma")]),e._v(" "),r("li",[e._v("Timothy Slatcher")]),e._v(" "),r("li",[e._v("Yaroslav Admin")]),e._v(" "),r("li",[e._v("Yuichi Nukiyama")]),e._v(" "),r("li",[e._v("tdsmithATabc")]),e._v(" "),r("li",[e._v("@wmrowan")])]),e._v(" "),r("h2",{attrs:{id:"v4-0-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v4-0-2","aria-hidden":"true"}},[e._v("#")]),e._v(" v4.0.2")]),e._v(" "),r("ul",[r("li",[e._v("[enhancement] Don't exit when a rule can't be found. Print as a warning instead (#1771)")]),e._v(" "),r("li",[e._v("[api-change] Allow 3rd party apps to see exception when the config is invalid (#1764)")]),e._v(" "),r("li",[e._v("[bugfix] Don't flag a property named as empty string as not needing quotes in an object literal (#1762)")]),e._v(" "),r("li",[e._v("[bugfix] Report correct number of fixes done by --fix (#1767)")]),e._v(" "),r("li",[e._v("[bugfix] Fix false positives and exceptions in "),r("code",[e._v("prefer-for-of")]),e._v(" (#1758)")]),e._v(" "),r("li",[e._v("[bugfix] Fix "),r("code",[e._v("adjacent-overload-signatures")]),e._v(" false positive when a static function has the same name (#1772)")])]),e._v(" "),r("p",[e._v("Thanks to our contributors!")]),e._v(" "),r("ul",[r("li",[e._v("@gustavderdrache")])]),e._v(" "),r("h2",{attrs:{id:"v4-0-1"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v4-0-1","aria-hidden":"true"}},[e._v("#")]),e._v(" v4.0.1")]),e._v(" "),r("ul",[r("li",[e._v("[bugfix] Removed "),r("code",[e._v("no-unused-variable")]),e._v(" rule from recommended config, as it was causing spurious deprecation warnings.")])]),e._v(" "),r("h2",{attrs:{id:"v4-0-0-dev-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v4-0-0-dev-2","aria-hidden":"true"}},[e._v("#")]),e._v(" v4.0.0-dev.2")]),e._v(" "),r("ul",[r("li",[e._v("Include latest v4.0.0 changes")])]),e._v(" "),r("h2",{attrs:{id:"v4-0-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v4-0-0","aria-hidden":"true"}},[e._v("#")]),e._v(" v4.0.0")]),e._v(" "),r("ul",[r("li",[r("strong",[e._v("BREAKING CHANGES")]),e._v(" "),r("ul",[r("li",[e._v("[api-change] Minor changes to the library API. See this PR for changes and upgrade instructions (#1720)")]),e._v(" "),r("li",[e._v("[removed-rule] Removed "),r("code",[e._v("no-unreachable")]),e._v(" rule; covered by compiler (#661)")]),e._v(" "),r("li",[e._v("[enhancement] Changed order of applied configuration files for the "),r("code",[e._v("extends")]),e._v(" array to make it more intuitive. (#1503)")]),e._v(" "),r("li",[e._v("[enhancement] Changed TypeScript peer dependency to >= 2.0.0 (#1710)")])])]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("completed-docs")]),e._v(" rule added (#1644)")]),e._v(" "),r("li",[e._v("[new-fixer] "),r("code",[e._v("ordered-imports")]),e._v(" auto fixed (#1640)")]),e._v(" "),r("li",[e._v("[new-fixer] "),r("code",[e._v("arrow-parens")]),e._v(" auto fixed (#1731)")]),e._v(" "),r("li",[e._v("[rule-change] "),r("code",[e._v("indent")]),e._v(" rule now ignores template strings (#1611)")]),e._v(" "),r("li",[e._v("[new-rule-option] "),r("code",[e._v("object-literal-key-quotes")]),e._v(" adds the options "),r("code",[e._v("consistent")]),e._v(" and "),r("code",[e._v("consistent-as-needed")]),e._v(" (#1733)")]),e._v(" "),r("li",[e._v("[enhancement] "),r("code",[e._v("--fix")]),e._v(" option added to automatically fix selected rules (#1697)")]),e._v(" "),r("li",[e._v("[enhancement] Updated recommend rules (#1717)")]),e._v(" "),r("li",[e._v("[enhancement] "),r("code",[e._v("adjacent-overload-signatures")]),e._v(" now works with classes, source files, modules, and namespaces (#1707)")]),e._v(" "),r("li",[e._v("[enhancement] Users are notified if they are using an old TSLint version (#1696)")]),e._v(" "),r("li",[e._v("[bugfix] Lint "),r("code",[e._v(".jsx")]),e._v(" files if "),r("code",[e._v("jsRules")]),e._v(" are configured (#1714)")]),e._v(" "),r("li",[e._v("[bugfix] Command line glob patterns now handle single quotes (#1679)")])]),e._v(" "),r("p",[e._v("Thanks to our contributors!")]),e._v(" "),r("ul",[r("li",[e._v("Andrii Dieiev")]),e._v(" "),r("li",[e._v("Andy")]),e._v(" "),r("li",[e._v("Chris Barr")]),e._v(" "),r("li",[e._v("Davie Schoots")]),e._v(" "),r("li",[e._v("Jordan Hawker")]),e._v(" "),r("li",[e._v("Josh Goldberg")]),e._v(" "),r("li",[e._v("Stepan Riha")]),e._v(" "),r("li",[e._v("Yuichi Nukiyama")])]),e._v(" "),r("h2",{attrs:{id:"v4-0-0-dev-1"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v4-0-0-dev-1","aria-hidden":"true"}},[e._v("#")]),e._v(" v4.0.0-dev.1")]),e._v(" "),r("ul",[r("li",[r("strong",[e._v("BREAKING CHANGES")]),e._v(" "),r("ul",[r("li",[e._v("[enhancement] The "),r("code",[e._v("semicolon")]),e._v(" rule now disallows semicolons in multi-line bound class methods\n(to get the v3 behavior, use the "),r("code",[e._v("ignore-bound-class-methods")]),e._v(" option) (#1643)")]),e._v(" "),r("li",[e._v("[removed-rule] Removed "),r("code",[e._v("use-strict")]),e._v(" rule (#678)")]),e._v(" "),r("li",[e._v("[removed-rule] Removed "),r("code",[e._v("label-undefined")]),e._v(" rule; covered by compiler (#1614)")]),e._v(" "),r("li",[e._v("[enhancement] Renamed "),r("code",[e._v("no-constructor-vars")]),e._v(" to "),r("code",[e._v("no-parameter-properties")]),e._v(" (#1296)")]),e._v(" "),r("li",[e._v("[rule-change] The "),r("code",[e._v("orderedImports")]),e._v(" rule now sorts relative modules below non-relative modules (#1640)")])])]),e._v(" "),r("li",[r("strong",[e._v("Deprecated")]),e._v(" "),r("ul",[r("li",[e._v("[deprecated] "),r("code",[e._v("no-unused-variable")]),e._v(" rule. This is checked by the TypeScript v2 compiler using the flags "),r("a",{attrs:{href:"https://github.com/Microsoft/TypeScript/wiki/What%27s-new-in-TypeScript#flag-unused-declarations-with---nounusedparameters-and---nounusedlocals",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("--noUnusedParameters")]),e._v(" and "),r("code",[e._v("--noUnusedLocals")]),r("OutboundLink")],1),e._v(". (#1481)")])])]),e._v(" "),r("li",[e._v("[enhancement] Lint .js files (#1515)")]),e._v(" "),r("li",[e._v("[new-fixer] "),r("code",[e._v("no-var-keyword")]),e._v(" replaces "),r("code",[e._v("var")]),e._v(" with "),r("code",[e._v("let")]),e._v(" (#1547)")]),e._v(" "),r("li",[e._v("[new-fixer] "),r("code",[e._v("trailing-comma")]),e._v(" auto fixed (#1546)")]),e._v(" "),r("li",[e._v("[new-fixer] "),r("code",[e._v("no-unused-variable")]),e._v(" auto fixed for imports (#1568)")]),e._v(" "),r("li",[e._v("[new-fixer] "),r("code",[e._v("semicolon")]),e._v(" auto fixed (#1423)")]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("max-classes-per-file")]),e._v(" rule added (#1666)")]),e._v(" "),r("li",[e._v("[new-rule-option] "),r("code",[e._v("no-consecutive-blank-lines")]),e._v(" rule now accepts a number value indicating max blank lines (#1650)")]),e._v(" "),r("li",[e._v("[new-rule-option] "),r("code",[e._v("ordered-imports")]),e._v(" rule option "),r("code",[e._v("import-sources-order")]),e._v(" accepts value "),r("code",[e._v("any")]),e._v(" (#1602)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("no-empty")]),e._v(" rule fixed when parameter has readonly modifier")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("no-namespace")]),e._v(" rule: do not flag nested or .d.ts namespaces (#1571)")])]),e._v(" "),r("p",[e._v("Thanks to our contributors!")]),e._v(" "),r("ul",[r("li",[e._v("Alex Eagle")]),e._v(" "),r("li",[e._v("Andrii Dieiev")]),e._v(" "),r("li",[e._v("Ben Coveney")]),e._v(" "),r("li",[e._v("Boris Aranovich")]),e._v(" "),r("li",[e._v("Chris Barr")]),e._v(" "),r("li",[e._v("Cyril Gandon")]),e._v(" "),r("li",[e._v("Evgeniy Zhukovskiy")]),e._v(" "),r("li",[e._v("Jay Anslow")]),e._v(" "),r("li",[e._v("Kunal Marwaha")]),e._v(" "),r("li",[e._v("Martin Probst")]),e._v(" "),r("li",[e._v("Mingye Wang")]),e._v(" "),r("li",[e._v("Raghav Katyal")]),e._v(" "),r("li",[e._v("Sean Dawson")]),e._v(" "),r("li",[e._v("Yuichi Nukiyama")]),e._v(" "),r("li",[e._v("jakpaw")])]),e._v(" "),r("h2",{attrs:{id:"v4-0-0-dev-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v4-0-0-dev-0","aria-hidden":"true"}},[e._v("#")]),e._v(" v4.0.0-dev.0")]),e._v(" "),r("ul",[r("li",[r("strong",[e._v("BREAKING CHANGES")]),e._v(" "),r("ul",[r("li",[e._v("[enhancement] Drop support for configuration via package.json (#1579)")]),e._v(" "),r("li",[e._v("[removed-rule] Removed "),r("code",[e._v("no-duplicate-key")]),e._v(" rule; covered by compiler (#1109)")]),e._v(" "),r("li",[e._v("[enhancement] Call formatter once for all file results. Format output may be different (#656)")]),e._v(" "),r("li",[e._v("[rule-change] "),r("code",[e._v("trailing-comma")]),e._v(" supports function declarations, expressions, and types (#1486)")]),e._v(" "),r("li",[e._v("[rule-change] "),r("code",[e._v("object-literal-sort-keys")]),e._v(" now sorts quoted keys (#1529)")]),e._v(" "),r("li",[e._v("[rule-change] "),r("code",[e._v("semicolon")]),e._v(" now processes type aliases (#1475)")]),e._v(" "),r("li",[e._v("[rule-change] "),r("code",[e._v("no-var-keyword")]),e._v(" now rejects "),r("code",[e._v("export var")]),e._v(" statements (#1256)")]),e._v(" "),r("li",[e._v("[rule-change] "),r("code",[e._v("semicolon")]),e._v(" now requires semicolon for function declaration with no body (#1447)")])])]),e._v(" "),r("li",[e._v("[new-formatter] "),r("code",[e._v("fileslist")]),e._v(" formatter writes a list of files with errors without position or error type specifics (#1558)")]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("cyclomaticComplexity")]),e._v(", enforces a threshold of cyclomatic complexity.] (#1464)")]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("prefer-for-of")]),e._v(", which errors when "),r("code",[e._v("for(var x of y)")]),e._v(" can be used instead of "),r("code",[e._v("for(var i = 0; i < y.length; i++)")]),e._v(" (#1335)")]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("array-type")]),e._v(", which can require using either `T[]' or 'Array"),r("T",[e._v("' for arrays (#1498)")])],1),e._v(" "),r("li",[e._v("[rule-change] "),r("code",[e._v("object-literal-sort-keys")]),e._v(" checks multiline objects only (#1642)")]),e._v(" "),r("li",[e._v("[rule-change] "),r("code",[e._v("ban")]),e._v(" rule now can ban global functions (#327)")]),e._v(" "),r("li",[e._v("[bugfix] always write lint result, even if using formatter (#1353)")]),e._v(" "),r("li",[e._v("[bugfix] npm run test:bin fails on Windows (#1635)")]),e._v(" "),r("li",[e._v("[bugfix] Don't enforce trailing spaces on newlines in typedef-whitespace rule (#1531)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("jsdoc")]),e._v(" rule should not match arbitrary comments (#1543)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("one-line")]),e._v(" rule errors when declaring wildcard ambient modules (#1425)")])]),e._v(" "),r("p",[e._v("Thanks to our contributors!")]),e._v(" "),r("ul",[r("li",[e._v("Alex Eagle")]),e._v(" "),r("li",[e._v("Andrii Dieiev")]),e._v(" "),r("li",[e._v("Andy Hanson")]),e._v(" "),r("li",[e._v("Ben Coveney")]),e._v(" "),r("li",[e._v("Boris Aranovich")]),e._v(" "),r("li",[e._v("Chris Barr")]),e._v(" "),r("li",[e._v("Christian Dreher")]),e._v(" "),r("li",[e._v("Claas Augner")]),e._v(" "),r("li",[e._v("Josh Goldberg")]),e._v(" "),r("li",[e._v("Martin Probst")]),e._v(" "),r("li",[e._v("Mike Deverell")]),e._v(" "),r("li",[e._v("Nina Hartmann")]),e._v(" "),r("li",[e._v("Satoshi Amemiya")]),e._v(" "),r("li",[e._v("Scott Wu")]),e._v(" "),r("li",[e._v("Steve Van Opstal")]),e._v(" "),r("li",[e._v("Umar Bolatov")]),e._v(" "),r("li",[e._v("Vladimir Matveev")]),e._v(" "),r("li",[e._v("Yui")])]),e._v(" "),r("h2",{attrs:{id:"v3-15-1"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v3-15-1","aria-hidden":"true"}},[e._v("#")]),e._v(" v3.15.1")]),e._v(" "),r("ul",[r("li",[e._v("Enabled additional rules in "),r("code",[e._v("tslint:latest")]),e._v(" configuration (#1506)")])]),e._v(" "),r("h2",{attrs:{id:"v3-15-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v3-15-0","aria-hidden":"true"}},[e._v("#")]),e._v(" v3.15.0")]),e._v(" "),r("ul",[r("li",[e._v("Stable release containing changes from the last dev release (v3.15.0-dev.0)")])]),e._v(" "),r("h2",{attrs:{id:"v3-15-0-dev-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v3-15-0-dev-0","aria-hidden":"true"}},[e._v("#")]),e._v(" v3.15.0-dev.0")]),e._v(" "),r("ul",[r("li",[e._v("[enhancement] Rules can automatically fix errors (#1423)")]),e._v(" "),r("li",[e._v("[enhancement] Better error messages for invalid source files (#1480)")]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("adjacent-overload-signatures")]),e._v(" rule (#1426)")]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("file-header")]),e._v(" rule (#1441)")]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("object-literal-shorthand")]),e._v(" rule (#1488)")]),e._v(" "),r("li",[e._v("[new-rule-option] "),r("code",[e._v("allow-declarations")]),e._v(" option for "),r("code",[e._v("only-arrow-functions")]),e._v(" rule (#1452)")]),e._v(" "),r("li",[e._v("[new-rule-option] "),r("code",[e._v("import-sources-order")]),e._v(" option for "),r("code",[e._v("ordered-imports")]),e._v(" rule (#1466)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("arrow-parens")]),e._v(" rule handles async and generics (#1446, #1479)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("comment-format")]),e._v(" rule ignores tslint control comments (#1473)")]),e._v(" "),r("li",[e._v("[bugfix] Fix "),r("code",[e._v("no-shadowed-variable")]),e._v(" rule false positives (#1482)")])]),e._v(" "),r("p",[e._v("Thanks to our contributors!")]),e._v(" "),r("ul",[r("li",[e._v("@apacala")]),e._v(" "),r("li",[e._v("@danvk")]),e._v(" "),r("li",[e._v("@DovydasNavickas")]),e._v(" "),r("li",[e._v("@glen-84")]),e._v(" "),r("li",[e._v("@IllusionMH")]),e._v(" "),r("li",[e._v("@JoshuaKGoldberg")]),e._v(" "),r("li",[e._v("@markwongsk")]),e._v(" "),r("li",[e._v("@rakatyal")]),e._v(" "),r("li",[e._v("@rhysd")]),e._v(" "),r("li",[e._v("@ScottSWu")]),e._v(" "),r("li",[e._v("@YuichiNukiyama")])]),e._v(" "),r("h2",{attrs:{id:"v3-14-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v3-14-0","aria-hidden":"true"}},[e._v("#")]),e._v(" v3.14.0")]),e._v(" "),r("ul",[r("li",[e._v("Stable release containing changes from the last dev releases (v3.14.0-dev.0, v3.14.0-dev.1)")])]),e._v(" "),r("h2",{attrs:{id:"v3-14-0-dev-1"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v3-14-0-dev-1","aria-hidden":"true"}},[e._v("#")]),e._v(" v3.14.0-dev.1")]),e._v(" "),r("ul",[r("li",[e._v("[new-rule] "),r("code",[e._v("arrow-parens")]),e._v(" rule (#777)")]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("max-file-line-count")]),e._v(" rule (#1360)")]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("no-unsafe-finally")]),e._v(" rule (#1349)")]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("no-for-in-array")]),e._v(" rule (#1380)")]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("object-literal-key-quotes")]),e._v(" rule (#1364)")]),e._v(" "),r("li",[e._v("[enhancement] Better "),r("code",[e._v("ban")]),e._v(" rule failure messages (#1385)")]),e._v(" "),r("li",[e._v("[enhancement] New stylish formatter (#1406)")])]),e._v(" "),r("p",[e._v("Thanks to our contributors!")]),e._v(" "),r("ul",[r("li",[e._v("@chrismbarr")]),e._v(" "),r("li",[e._v("@danvk")]),e._v(" "),r("li",[e._v("@gjuchault")]),e._v(" "),r("li",[e._v("@lowkay")]),e._v(" "),r("li",[e._v("@ScottSWu")]),e._v(" "),r("li",[e._v("@YuichiNukiyama")])]),e._v(" "),r("h2",{attrs:{id:"v3-14-0-dev-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v3-14-0-dev-0","aria-hidden":"true"}},[e._v("#")]),e._v(" v3.14.0-dev.0")]),e._v(" "),r("ul",[r("li",[e._v("[enhancement] Add optional type information to rules (#1323)")])]),e._v(" "),r("p",[e._v("Thanks to our contributors!")]),e._v(" "),r("ul",[r("li",[e._v("@ScottSWu")])]),e._v(" "),r("h2",{attrs:{id:"v3-13-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v3-13-0","aria-hidden":"true"}},[e._v("#")]),e._v(" v3.13.0")]),e._v(" "),r("ul",[r("li",[e._v("Stable release containing changes from the last dev release (v3.13.0-dev.0)")])]),e._v(" "),r("h2",{attrs:{id:"v3-13-0-dev-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v3-13-0-dev-0","aria-hidden":"true"}},[e._v("#")]),e._v(" v3.13.0-dev.0")]),e._v(" "),r("ul",[r("li",[e._v("[new-rule] "),r("code",[e._v("ordered-imports")]),e._v(" rule (#1325)")]),e._v(" "),r("li",[e._v("[enhancement] MPEG transport stream files are ignored by the CLI (#1357)")])]),e._v(" "),r("p",[e._v("Thanks to our contributors!")]),e._v(" "),r("ul",[r("li",[e._v("@chrismbarr")]),e._v(" "),r("li",[e._v("@corydeppen")]),e._v(" "),r("li",[e._v("@danvk")]),e._v(" "),r("li",[e._v("@janaagaard75")]),e._v(" "),r("li",[e._v("@mprobst")])]),e._v(" "),r("h2",{attrs:{id:"v3-12-0-dev-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v3-12-0-dev-2","aria-hidden":"true"}},[e._v("#")]),e._v(" v3.12.0-dev.2")]),e._v(" "),r("ul",[r("li",[e._v("[enhancement] Support TypeScript v2.0.0-dev builds")])]),e._v(" "),r("h2",{attrs:{id:"v3-12-1"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v3-12-1","aria-hidden":"true"}},[e._v("#")]),e._v(" v3.12.1")]),e._v(" "),r("ul",[r("li",[e._v("Stable release containing changes from the last dev release (v3.12.0-dev.1)")])]),e._v(" "),r("h2",{attrs:{id:"v3-12-0-dev-1"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v3-12-0-dev-1","aria-hidden":"true"}},[e._v("#")]),e._v(" v3.12.0-dev.1")]),e._v(" "),r("ul",[r("li",[e._v("[bugfix] Fix null reference bug in typedef rule (#1345)")])]),e._v(" "),r("h2",{attrs:{id:"v3-12-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v3-12-0","aria-hidden":"true"}},[e._v("#")]),e._v(" v3.12.0")]),e._v(" "),r("ul",[r("li",[e._v("Stable release containing changes from the last dev release (v3.12.0-dev.0)")])]),e._v(" "),r("h2",{attrs:{id:"v3-12-0-dev-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v3-12-0-dev-0","aria-hidden":"true"}},[e._v("#")]),e._v(" v3.12.0-dev.0")]),e._v(" "),r("ul",[r("li",[e._v("[new-rule] "),r("code",[e._v("only-arrow-functions")]),e._v(" rule (#1318)")]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("no-unused-new")]),e._v(" rule (#1316)")]),e._v(" "),r("li",[e._v("[new-rule-option] "),r("code",[e._v("arrow-call-signature")]),e._v(" option for "),r("code",[e._v("typedef")]),e._v(" rule (#1284)")]),e._v(" "),r("li",[e._v("[enhancement] Metadata for every rule (#1311)")]),e._v(" "),r("li",[e._v("[enhancement] "),r("code",[e._v("typedef")]),e._v(" rule is more flexible about the location of typedefs for arrow functions (#1176)")]),e._v(" "),r("li",[e._v("[enhancement] Failure messages are clearer and more consistent for many rules (#1303, #1307, #1309)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("no-consecutive-blank-lines")]),e._v(" now handles lines with only whitespace correctly (#1249)")]),e._v(" "),r("li",[e._v("[bugfix] Correctly load "),r("code",[e._v(".json")]),e._v(" config files that have a BOM (#1338)")])]),e._v(" "),r("p",[e._v("Thanks to our contributors!")]),e._v(" "),r("ul",[r("li",[e._v("@allannienhuis")]),e._v(" "),r("li",[e._v("@arnaudvalle")]),e._v(" "),r("li",[e._v("@bencoveney")]),e._v(" "),r("li",[e._v("@chrismbarr")]),e._v(" "),r("li",[e._v("@corydeppen")]),e._v(" "),r("li",[e._v("@HamletDRC")]),e._v(" "),r("li",[e._v("@JoshuaKGoldberg")]),e._v(" "),r("li",[e._v("@timbrown81")]),e._v(" "),r("li",[e._v("@tomduncalf")]),e._v(" "),r("li",[e._v("@YuichiNukiyama")])]),e._v(" "),r("h2",{attrs:{id:"v3-11-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v3-11-0","aria-hidden":"true"}},[e._v("#")]),e._v(" v3.11.0")]),e._v(" "),r("ul",[r("li",[e._v("Stable release containing changes from the last dev release (v3.11.0-dev.0)")])]),e._v(" "),r("h2",{attrs:{id:"v3-11-0-dev-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v3-11-0-dev-0","aria-hidden":"true"}},[e._v("#")]),e._v(" v3.11.0-dev.0")]),e._v(" "),r("ul",[r("li",[e._v("[new-rule] "),r("code",[e._v("linebreak-style")]),e._v(" rule (#123)")]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("no-mergeable-namespace")]),e._v(" rule (#843)")]),e._v(" "),r("li",[e._v("[enhancement] Add built-in configurations (#1261)")]),e._v(" "),r("li",[e._v("[enhancement] New vso formatter (#1281)")]),e._v(" "),r("li",[e._v("[new-rule-option] "),r("code",[e._v("ignore-interfaces")]),e._v(" option for "),r("code",[e._v("semicolon")]),e._v(" rule (#1233)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("no-default-export")]),e._v(" rule handles more default export cases (#1241)")])]),e._v(" "),r("p",[e._v("Thanks to our contributors!")]),e._v(" "),r("ul",[r("li",[e._v("@cgwrench")]),e._v(" "),r("li",[e._v("@HamletDRC")]),e._v(" "),r("li",[e._v("@lijunle")]),e._v(" "),r("li",[e._v("@paldepind")]),e._v(" "),r("li",[e._v("@patsissons")]),e._v(" "),r("li",[e._v("@schmuli")]),e._v(" "),r("li",[e._v("@YuichiNukiyama")])]),e._v(" "),r("h2",{attrs:{id:"v3-10-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v3-10-2","aria-hidden":"true"}},[e._v("#")]),e._v(" v3.10.2")]),e._v(" "),r("ul",[r("li",[e._v("Stable release containing changes from the last dev release (v3.10.0-dev.2)")])]),e._v(" "),r("h2",{attrs:{id:"v3-10-0-dev-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v3-10-0-dev-2","aria-hidden":"true"}},[e._v("#")]),e._v(" v3.10.0-dev.2")]),e._v(" "),r("ul",[r("li",[e._v("[bugfix] "),r("code",[e._v("member-ordering")]),e._v(" rule doesn't crash on methods in class expressions (#1252)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("ban")]),e._v(" rule handles chained methods appropriately (#1234)")])]),e._v(" "),r("p",[e._v("Thanks to our contributors!")]),e._v(" "),r("ul",[r("li",[e._v("@marines")])]),e._v(" "),r("h2",{attrs:{id:"v3-10-1"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v3-10-1","aria-hidden":"true"}},[e._v("#")]),e._v(" v3.10.1")]),e._v(" "),r("ul",[r("li",[e._v("Stable release containing changes from the last dev release (v3.10.0-dev.1)")])]),e._v(" "),r("h2",{attrs:{id:"v3-10-0-dev-1"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v3-10-0-dev-1","aria-hidden":"true"}},[e._v("#")]),e._v(" v3.10.0-dev.1")]),e._v(" "),r("ul",[r("li",[e._v("[bugfix] "),r("code",[e._v("member-ordering")]),e._v(" rule doesn't crash on methods in object literals (#1243)")])]),e._v(" "),r("h2",{attrs:{id:"v3-10-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v3-10-0","aria-hidden":"true"}},[e._v("#")]),e._v(" v3.10.0")]),e._v(" "),r("ul",[r("li",[e._v("Stable release containing changes from the last dev release (v3.10.0-dev.0)")])]),e._v(" "),r("h2",{attrs:{id:"v3-10-0-dev-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v3-10-0-dev-0","aria-hidden":"true"}},[e._v("#")]),e._v(" v3.10.0-dev.0")]),e._v(" "),r("ul",[r("li",[e._v("[new-rule] "),r("code",[e._v("new-parens")]),e._v(" rule (#1177)")]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("no-default-export")]),e._v(" rule (#1182)")]),e._v(" "),r("li",[e._v("[new-rule-option] "),r("code",[e._v("order: ...")]),e._v(" option for "),r("code",[e._v("member-ordering")]),e._v(" rule (#1208)")]),e._v(" "),r("li",[e._v('[new-rule-option] "ignore-for-loop" option for '),r("code",[e._v("one-variable-per-declaration")]),e._v(" rule (#1204)")]),e._v(" "),r("li",[e._v('[enhancement] "no-this-in-function-in-method" option renamed to "check-function-in-method" (#1203)')]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("semicolon")]),e._v(" rule checks export statements (#1155)")])]),e._v(" "),r("p",[e._v("Thanks to our contributors!")]),e._v(" "),r("ul",[r("li",[e._v("@chrismbarr")]),e._v(" "),r("li",[e._v("@HamletDRC")]),e._v(" "),r("li",[e._v("@larshp")]),e._v(" "),r("li",[e._v("@patsissons")]),e._v(" "),r("li",[e._v("@YuichiNukiyama")])]),e._v(" "),r("h2",{attrs:{id:"v3-9-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v3-9-0","aria-hidden":"true"}},[e._v("#")]),e._v(" v3.9.0")]),e._v(" "),r("ul",[r("li",[e._v("Stable release containing changes from the last dev release (v3.9.0-dev.0)")])]),e._v(" "),r("h2",{attrs:{id:"v3-9-0-dev-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v3-9-0-dev-0","aria-hidden":"true"}},[e._v("#")]),e._v(" v3.9.0-dev.0")]),e._v(" "),r("ul",[r("li",[e._v("[new-rule] "),r("code",[e._v("no-namespace")]),e._v(" rule (#1133)")]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("one-variable-per-declaration")]),e._v(" rule (#525)")]),e._v(" "),r("li",[e._v('[new-rule-option] "ignore-params" option for '),r("code",[e._v("no-inferrable-types")]),e._v(" rule (#1190)")]),e._v(" "),r("li",[e._v('[new-rule-option] "no-this-in-function-in-method" option for '),r("code",[e._v("no-invalid-this")]),e._v(" rule (#1179)")]),e._v(" "),r("li",[e._v("[enhancement] Single line enable/disable comments (#144)")]),e._v(" "),r("li",[e._v("[enhancement] Resolve "),r("code",[e._v("extends")]),e._v(" packages relative to location of configuration file (#1171)")]),e._v(" "),r("li",[e._v("[enhancement] "),r("code",[e._v("Linter")]),e._v(" class will throw an error if configuration is of an invalid type (#1167)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("use-isnan")]),e._v(" allows assaignments to "),r("code",[e._v("NaN")]),e._v(" (#1054)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("no-unreachable")]),e._v(" handles allows hoisted type aliases (#564)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("member-ordering")]),e._v(" rule now checks constructors (#1158)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("--test")]),e._v(" CLI command works correctly with specifiying custom rules (#1195)")])]),e._v(" "),r("p",[e._v("Thanks to our contributors!")]),e._v(" "),r("ul",[r("li",[e._v("@abierbaum")]),e._v(" "),r("li",[e._v("@HamletDRC")]),e._v(" "),r("li",[e._v("@inthemill")]),e._v(" "),r("li",[e._v("@janslow")]),e._v(" "),r("li",[e._v("@JoshuaKGoldberg")]),e._v(" "),r("li",[e._v("@mprobst")]),e._v(" "),r("li",[e._v("@patsissions")]),e._v(" "),r("li",[e._v("@YuichiNukiyama")])]),e._v(" "),r("h2",{attrs:{id:"v3-8-1"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v3-8-1","aria-hidden":"true"}},[e._v("#")]),e._v(" v3.8.1")]),e._v(" "),r("ul",[r("li",[e._v("Stable release containing changes from the last dev release (v3.8.0-dev.1)")])]),e._v(" "),r("h2",{attrs:{id:"v3-8-0-dev-1"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v3-8-0-dev-1","aria-hidden":"true"}},[e._v("#")]),e._v(" v3.8.0-dev.1")]),e._v(" "),r("ul",[r("li",[e._v("[bugfix] Allow JS directives at the start of constructors, getters, and setters (#1159)")]),e._v(" "),r("li",[e._v("[bugfix] Remove accidentally included performance profiles from published NPM artifact (#1160)")])]),e._v(" "),r("h2",{attrs:{id:"v3-8-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v3-8-0","aria-hidden":"true"}},[e._v("#")]),e._v(" v3.8.0")]),e._v(" "),r("ul",[r("li",[e._v("Stable release containing changes from the last dev release (v3.8.0-dev.0)")])]),e._v(" "),r("h2",{attrs:{id:"v3-8-0-dev-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v3-8-0-dev-0","aria-hidden":"true"}},[e._v("#")]),e._v(" v3.8.0-dev.0")]),e._v(" "),r("ul",[r("li",[e._v("[new-rule] "),r("code",[e._v("no-invalid-this")]),e._v(" rule (#1105)")]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("use-isnan")]),e._v(" rule (#1054)")]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("no-reference")]),e._v(" rule (#1139)")]),e._v(" "),r("li",[e._v('[new-rule-option] "allow-pascal-case" option for '),r("code",[e._v("variable-name")]),e._v(" rule (#1079)")]),e._v(" "),r("li",[e._v("[enhancement] Comments now allowed in "),r("code",[e._v("tslint.json")]),e._v(" files (#1129)")]),e._v(" "),r("li",[e._v("[enhancement] Smarter "),r("code",[e._v("trailing-comma")]),e._v(" behavior (#1122)")]),e._v(" "),r("li",[e._v("[enhancement] "),r("code",[e._v("semicolon")]),e._v(" rule more lenient with arrow-function class members (#1076)")]),e._v(" "),r("li",[e._v("[enhancement] Allow enabling/disabling rules with "),r("code",[e._v("//")]),e._v(" comments (#1134)")]),e._v(" "),r("li",[e._v("[enhancement] New checkstyle formatter (#250)")]),e._v(" "),r("li",[e._v("[enhancement] Clearer message for "),r("code",[e._v("no-var-keyword")]),e._v(" rule (#1124)")]),e._v(" "),r("li",[e._v("[bugfix] Loaded configurations are not cached (#1128)")]),e._v(" "),r("li",[e._v("[bugfix] Allow JS directives at the start of class methods (#1144)")])]),e._v(" "),r("p",[e._v("Thanks to our contributors!")]),e._v(" "),r("ul",[r("li",[e._v("@AndyMoreland")]),e._v(" "),r("li",[e._v("@chrismbarr")]),e._v(" "),r("li",[e._v("@HamletDRC")]),e._v(" "),r("li",[e._v("@JoshuaKGoldberg")]),e._v(" "),r("li",[e._v("@sshev")]),e._v(" "),r("li",[e._v("@unional")])]),e._v(" "),r("h2",{attrs:{id:"v3-7-4"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v3-7-4","aria-hidden":"true"}},[e._v("#")]),e._v(" v3.7.4")]),e._v(" "),r("ul",[r("li",[e._v("Stable release containing changes from the last dev release (v3.7.0-dev.5)")])]),e._v(" "),r("h2",{attrs:{id:"v3-7-0-dev-5"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v3-7-0-dev-5","aria-hidden":"true"}},[e._v("#")]),e._v(" v3.7.0-dev.5")]),e._v(" "),r("ul",[r("li",[e._v("[bugfix] Allow JS directives in namespaces (#1115)")])]),e._v(" "),r("h2",{attrs:{id:"v3-7-3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v3-7-3","aria-hidden":"true"}},[e._v("#")]),e._v(" v3.7.3")]),e._v(" "),r("ul",[r("li",[e._v("Stable release containing changes from the last dev release (v3.7.0-dev.4)")])]),e._v(" "),r("h2",{attrs:{id:"v3-7-0-dev-4"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v3-7-0-dev-4","aria-hidden":"true"}},[e._v("#")]),e._v(" v3.7.0-dev.4")]),e._v(" "),r("ul",[r("li",[e._v("[bugfix] Downgrade "),r("code",[e._v("findup-sync")]),e._v(" dependency (#1108)")])]),e._v(" "),r("h2",{attrs:{id:"v3-7-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v3-7-2","aria-hidden":"true"}},[e._v("#")]),e._v(" v3.7.2")]),e._v(" "),r("ul",[r("li",[e._v("Stable release containing changes from the last dev release (v3.7.0-dev.3)")])]),e._v(" "),r("h2",{attrs:{id:"v3-7-0-dev-3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v3-7-0-dev-3","aria-hidden":"true"}},[e._v("#")]),e._v(" v3.7.0-dev.3")]),e._v(" "),r("ul",[r("li",[e._v("[bugfix] "),r("code",[e._v("findConfigurationPath")]),e._v(" always returns an absolute path (#1093)")]),e._v(" "),r("li",[e._v("[bugfix] Update "),r("code",[e._v("findup-sync")]),e._v(" dependency (#1080)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("declare global")]),e._v(" no longer triggers "),r("code",[e._v("no-internal-module")]),e._v(" rule (#1069)")]),e._v(" "),r("li",[e._v("[bugfix] Valid JS directives no longer trigger "),r("code",[e._v("no-unused-expression")]),e._v(" rule (#1050)")])]),e._v(" "),r("h2",{attrs:{id:"v3-7-1"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v3-7-1","aria-hidden":"true"}},[e._v("#")]),e._v(" v3.7.1")]),e._v(" "),r("ul",[r("li",[e._v("Stable release containing changes from the last dev release")])]),e._v(" "),r("h2",{attrs:{id:"v3-7-0-dev-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v3-7-0-dev-2","aria-hidden":"true"}},[e._v("#")]),e._v(" v3.7.0-dev.2")]),e._v(" "),r("ul",[r("li",[e._v("[bugfix] Improve handling of paths provided via the -c CLI option (#1083)")])]),e._v(" "),r("h2",{attrs:{id:"v3-7-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v3-7-0","aria-hidden":"true"}},[e._v("#")]),e._v(" v3.7.0")]),e._v(" "),r("ul",[r("li",[e._v("Stable release containing changes from the last dev release")])]),e._v(" "),r("h2",{attrs:{id:"v3-7-0-dev-1"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v3-7-0-dev-1","aria-hidden":"true"}},[e._v("#")]),e._v(" v3.7.0-dev.1")]),e._v(" "),r("ul",[r("li",[e._v("[enhancement] "),r("code",[e._v("extends")]),e._v(" field for "),r("code",[e._v("tslint.json")]),e._v(" files (#997)")]),e._v(" "),r("li",[e._v("[enhancement] "),r("code",[e._v("--force")]),e._v(" CLI option (#1059)")]),e._v(" "),r("li",[e._v("[enhancement] Improve how "),r("code",[e._v("Linter")]),e._v(" class handles configurations with a "),r("code",[e._v("rulesDirectory")]),e._v(" field (#1035)")]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("no-angle-bracket-type-assertion")]),e._v(" rule (#639)")]),e._v(" "),r("li",[e._v('[new-rule-option] "allow-undefined-check" option for '),r("code",[e._v("triple-equals")]),e._v(" rule (#602)")]),e._v(" "),r("li",[e._v('[new-rule-option] "always-prefix" and "never-prefix" option for '),r("code",[e._v("interface-name")]),e._v(" rule (#512)")])]),e._v(" "),r("p",[e._v("Thanks to our contributors!")]),e._v(" "),r("ul",[r("li",[e._v("@Arnavion")]),e._v(" "),r("li",[e._v("@chrismbarr")]),e._v(" "),r("li",[e._v("@ChrisPearce")]),e._v(" "),r("li",[e._v("@JoshuaKGoldberg")]),e._v(" "),r("li",[e._v("@patsissonso")]),e._v(" "),r("li",[e._v("@sasidhar")]),e._v(" "),r("li",[e._v("@unional")]),e._v(" "),r("li",[e._v("@vvakame")])]),e._v(" "),r("h2",{attrs:{id:"v3-6-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v3-6-0","aria-hidden":"true"}},[e._v("#")]),e._v(" v3.6.0")]),e._v(" "),r("ul",[r("li",[e._v("Stable release containing changes from the last dev release")])]),e._v(" "),r("h2",{attrs:{id:"v3-6-0-dev-1"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v3-6-0-dev-1","aria-hidden":"true"}},[e._v("#")]),e._v(" v3.6.0-dev.1")]),e._v(" "),r("ul",[r("li",[e._v("[enhancement] Add "),r("code",[e._v("--exclude")]),e._v(" CLI option (#915)")]),e._v(" "),r("li",[e._v("[bugfix] Fix "),r("code",[e._v("no-shadowed-variable")]),e._v(" rule handling of standalone blocks (#1021)")]),e._v(" "),r("li",[e._v("[deprecation] Configuration through "),r("code",[e._v("package.json")]),e._v(" files (#1020)")]),e._v(" "),r("li",[e._v('[API] Export additional configuration methods from top-level "tslint" module (#1009)')])]),e._v(" "),r("p",[e._v("Thanks to our contributors!")]),e._v(" "),r("ul",[r("li",[e._v("@blakeembrey")]),e._v(" "),r("li",[e._v("@hamhut1066")]),e._v(" "),r("li",[e._v("@meowtec")])]),e._v(" "),r("h2",{attrs:{id:"v3-5-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v3-5-0","aria-hidden":"true"}},[e._v("#")]),e._v(" v3.5.0")]),e._v(" "),r("ul",[r("li",[e._v("Stable release containing changes from the last dev release")])]),e._v(" "),r("h2",{attrs:{id:"v3-5-0-dev-1"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v3-5-0-dev-1","aria-hidden":"true"}},[e._v("#")]),e._v(" v3.5.0-dev.1")]),e._v(" "),r("ul",[r("li",[e._v('[new-rule-option] "ignore-pattern" option for '),r("code",[e._v("no-unused-variable")]),e._v(" rule (#314)")]),e._v(" "),r("li",[e._v("[bugfix] Fix occassional crash in "),r("code",[e._v("no-string-literal")]),e._v(" rule (#906)")]),e._v(" "),r("li",[e._v("[enhancement] Tweak behavior of "),r("code",[e._v("member-ordering")]),e._v(" rule with regards to arrow function types in interfaces (#226)")])]),e._v(" "),r("p",[e._v("Thanks to our contributors!")]),e._v(" "),r("ul",[r("li",[e._v("@arusakov")]),e._v(" "),r("li",[e._v("@Pajn")])]),e._v(" "),r("h2",{attrs:{id:"v3-4-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v3-4-0","aria-hidden":"true"}},[e._v("#")]),e._v(" v3.4.0")]),e._v(" "),r("ul",[r("li",[e._v("Stable release containing changes from the last two dev releases")])]),e._v(" "),r("h2",{attrs:{id:"v3-4-0-dev-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v3-4-0-dev-2","aria-hidden":"true"}},[e._v("#")]),e._v(" v3.4.0-dev.2")]),e._v(" "),r("ul",[r("li",[e._v('[new-rule-option] "arrow-parameter" option for '),r("code",[e._v("typedef")]),e._v(" rule (#333)")]),e._v(" "),r("li",[e._v('[new-rule-option] "never" option for '),r("code",[e._v("semicolon")]),e._v(" rule (#363)")]),e._v(" "),r("li",[e._v('[new-rule-option] "onespace" setting for '),r("code",[e._v("typedef-whitespace")]),e._v(" rule (#888)")]),e._v(" "),r("li",[e._v("[new-rule-option] "),r("code",[e._v("typedef-whitespace")]),e._v(" rule can now check spacing on right side of typdef colon (#888)")]),e._v(" "),r("li",[e._v("[enhancement] "),r("code",[e._v("member-ordering")]),e._v(" rule treats arrow functions as methods (#226)")]),e._v(" "),r("li",[e._v("[bugfix] Handle spaces before typedefs correctly in "),r("code",[e._v("typedef-whitespace")]),e._v(" rule (#955)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("label-position")]),e._v(" rule now allows labels on "),r("code",[e._v("for-of")]),e._v(" loops (#959)")])]),e._v(" "),r("p",[e._v("Thanks to our contributors!")]),e._v(" "),r("ul",[r("li",[e._v("@b0r3as")]),e._v(" "),r("li",[e._v("@ChaseMoskal")]),e._v(" "),r("li",[e._v("@Pajn")]),e._v(" "),r("li",[e._v("@pe8ter")]),e._v(" "),r("li",[e._v("@tomduncalf")])]),e._v(" "),r("h2",{attrs:{id:"v3-4-0-dev-1"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v3-4-0-dev-1","aria-hidden":"true"}},[e._v("#")]),e._v(" v3.4.0-dev.1")]),e._v(" "),r("ul",[r("li",[e._v("[enhancement] Revamped testing system (#620)\n"),r("ul",[r("li",[e._v("Writing tests for rules is now much simpler with a linter DSL.\nSee exisitng tests in "),r("code",[e._v("test/rules/**/*.ts.lint")]),e._v(" for examples.")])])]),e._v(" "),r("li",[e._v("[enhancement] New msbuild formatter (#947)")]),e._v(" "),r("li",[e._v("[bugfix] Fix handling of multiline literals in "),r("code",[e._v("trailing-comma")]),e._v(" rule (#856)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("one-line")]),e._v(" rule correctly checks space between "),r("code",[e._v("catch")]),e._v(" and opening brace (#925)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("one-line")]),e._v(" rule correctly checks multiline variable declarations (#935)")]),e._v(" "),r("li",[e._v("[new-rule-option] New option "),r("code",[e._v("check-finally")]),e._v(" for "),r("code",[e._v("one-line")]),e._v(" rule (#925)")]),e._v(" "),r("li",[r("strong",[e._v("BREAKING CHANGES")]),e._v(" "),r("ul",[r("li",[e._v("[bugfix] Report error when a rule in the config file is not found (#598)")])])])]),e._v(" "),r("p",[e._v("Thanks to our contributors!")]),e._v(" "),r("ul",[r("li",[e._v("@mmv")]),e._v(" "),r("li",[e._v("@pe8ter")])]),e._v(" "),r("h2",{attrs:{id:"v3-3-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v3-3-0","aria-hidden":"true"}},[e._v("#")]),e._v(" v3.3.0")]),e._v(" "),r("ul",[r("li",[e._v("[bugfix] Tweak TSLint build so TSLint works with typescript@next (#926)")])]),e._v(" "),r("h2",{attrs:{id:"v3-3-0-dev-1"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v3-3-0-dev-1","aria-hidden":"true"}},[e._v("#")]),e._v(" v3.3.0-dev.1")]),e._v(" "),r("ul",[r("li",[e._v("[bugfix] Correctly handle more than one custom rules directory (#928)")])]),e._v(" "),r("h2",{attrs:{id:"v3-2-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v3-2-2","aria-hidden":"true"}},[e._v("#")]),e._v(" v3.2.2")]),e._v(" "),r("ul",[r("li",[e._v("Stable release containing changes from the last dev release")])]),e._v(" "),r("h2",{attrs:{id:"v3-2-2-dev-1"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v3-2-2-dev-1","aria-hidden":"true"}},[e._v("#")]),e._v(" v3.2.2-dev.1")]),e._v(" "),r("ul",[r("li",[e._v("[enhancement] Throw an error if a path to a directory of custom rules is invalid (#910)")]),e._v(" "),r("li",[e._v('[new-rule-option] "jsx-single" and "jsx-double" options for '),r("code",[e._v("quotemark")]),e._v(" rule (#673)")]),e._v(" "),r("li",[e._v("[bugfix] Handle paths to directories of custom rules more accurately")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("no-unused-expression")]),e._v(" rule handles "),r("code",[e._v("await")]),e._v(" statements correctly (#887)")])]),e._v(" "),r("h2",{attrs:{id:"v3-2-1"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v3-2-1","aria-hidden":"true"}},[e._v("#")]),e._v(" v3.2.1")]),e._v(" "),r("ul",[r("li",[e._v("Stable release containing changes from the last dev release")])]),e._v(" "),r("h2",{attrs:{id:"v3-2-1-dev-1"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v3-2-1-dev-1","aria-hidden":"true"}},[e._v("#")]),e._v(" v3.2.1-dev.1")]),e._v(" "),r("ul",[r("li",[e._v("[enhancement] automatically generate a "),r("code",[e._v("tslint.json")]),e._v(" file with new "),r("code",[e._v("--init")]),e._v(" CLI command (#717)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("no-var-keyword")]),e._v(" rule detects the use of "),r("code",[e._v("var")]),e._v(" in all types of "),r("code",[e._v("for")]),e._v(" loops (#855)")])]),e._v(" "),r("h2",{attrs:{id:"v3-2-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v3-2-0","aria-hidden":"true"}},[e._v("#")]),e._v(" v3.2.0")]),e._v(" "),r("ul",[r("li",[e._v("Stable release containing changes from last two dev releases")])]),e._v(" "),r("h2",{attrs:{id:"v3-2-0-dev-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v3-2-0-dev-2","aria-hidden":"true"}},[e._v("#")]),e._v(" v3.2.0-dev.2")]),e._v(" "),r("ul",[r("li",[e._v("[bugfix] formatters are now exported correctly to work with TS 1.8 (#863)")])]),e._v(" "),r("h2",{attrs:{id:"v3-2-0-dev-1"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v3-2-0-dev-1","aria-hidden":"true"}},[e._v("#")]),e._v(" v3.2.0-dev.1")]),e._v(" "),r("ul",[r("li",[e._v("[bugfix] fixed bug in how custom rules directories are registered (#844)")]),e._v(" "),r("li",[e._v("[enhancement] better support for globs in CLI (#827)")]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("no-null-keyword")]),e._v(" rule (#722)")])]),e._v(" "),r("h2",{attrs:{id:"v3-1-1"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v3-1-1","aria-hidden":"true"}},[e._v("#")]),e._v(" v3.1.1")]),e._v(" "),r("ul",[r("li",[e._v("Bump TypeScript peer dependency to "),r("code",[e._v(">= 1.7.3")]),e._v(" due to "),r("code",[e._v("const enum")]),e._v(" incompatibility (#832)")])]),e._v(" "),r("h2",{attrs:{id:"v3-1-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v3-1-0","aria-hidden":"true"}},[e._v("#")]),e._v(" v3.1.0")]),e._v(" "),r("ul",[r("li",[e._v("[bugfix] build with TS v1.7.3 to fix null pointer exception (#832)")]),e._v(" "),r("li",[e._v("[bugfix] fixed false positive in "),r("code",[e._v("no-require-imports")]),e._v(" rule (#816)")])]),e._v(" "),r("h2",{attrs:{id:"v3-1-0-dev-1"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v3-1-0-dev-1","aria-hidden":"true"}},[e._v("#")]),e._v(" v3.1.0-dev.1")]),e._v(" "),r("ul",[r("li",[e._v("[bugfix] fixed "),r("code",[e._v("no-shadowed-variable")]),e._v(" false positives when handling destructuring in function params (#727)")]),e._v(" "),r("li",[e._v("[enhancement] "),r("code",[e._v("rulesDirectory")]),e._v(" in "),r("code",[e._v("tslint.json")]),e._v(" now supports multiple file paths (#795)")])]),e._v(" "),r("h2",{attrs:{id:"v3-0-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v3-0-0","aria-hidden":"true"}},[e._v("#")]),e._v(" v3.0.0")]),e._v(" "),r("ul",[r("li",[e._v("[bugfix] "),r("code",[e._v("member-access")]),e._v(" rule now handles object literals and get/set accessors properly (#801)\n"),r("ul",[r("li",[e._v("New rule options: "),r("code",[e._v("check-accessor")]),e._v(" and "),r("code",[e._v("check-constructor")])])])]),e._v(" "),r("li",[e._v("All the changes from the following releases, including some "),r("strong",[e._v("breaking changes")]),e._v(":\n"),r("ul",[r("li",[r("code",[e._v("3.0.0-dev.3")])]),e._v(" "),r("li",[r("code",[e._v("3.0.0-dev.2")])]),e._v(" "),r("li",[r("code",[e._v("3.0.0-dev.1")])]),e._v(" "),r("li",[r("code",[e._v("2.6.0-dev.2")])]),e._v(" "),r("li",[r("code",[e._v("2.6.0-dev.1")])])])])]),e._v(" "),r("h2",{attrs:{id:"v3-0-0-dev-3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v3-0-0-dev-3","aria-hidden":"true"}},[e._v("#")]),e._v(" v3.0.0-dev.3")]),e._v(" "),r("ul",[r("li",[e._v("TypeScript is now a peerDependency (#791)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("no-unused-variable")]),e._v(" rule with "),r("code",[e._v("react")]),e._v(" option works with self-closing JSX tags (#776)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("use-strict")]),e._v(" bugfix (#544)")])]),e._v(" "),r("h2",{attrs:{id:"v3-0-0-dev-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v3-0-0-dev-2","aria-hidden":"true"}},[e._v("#")]),e._v(" v3.0.0-dev.2")]),e._v(" "),r("ul",[r("li",[e._v('[new-rule-option] "react" option for '),r("code",[e._v("no-unused-variable")]),e._v(" rule (#698, #725)")]),e._v(" "),r("li",[e._v("[bugfix] Fix how "),r("code",[e._v("Linter")]),e._v(' is exported from "tslint" module (#760)')]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("no-use-before-declare")]),e._v(" rule doesn't crash on uncompilable code (#763)")])]),e._v(" "),r("h2",{attrs:{id:"v3-0-0-dev-1"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v3-0-0-dev-1","aria-hidden":"true"}},[e._v("#")]),e._v(" v3.0.0-dev.1")]),e._v(" "),r("ul",[r("li",[r("strong",[e._v("BREAKING CHANGES")]),e._v(" "),r("ul",[r("li",[e._v("Rearchitect TSLint to use external modules instead of merged namespaces (#726)\n"),r("ul",[r("li",[e._v("Dependencies need to be handled differently now by custom rules and formatters")]),e._v(" "),r("li",[e._v("See the "),r("a",{attrs:{href:"https://github.com/palantir/tslint/pull/726",target:"_blank",rel:"noopener noreferrer"}},[e._v("PR"),r("OutboundLink")],1),e._v(" for full details about this change")])])]),e._v(" "),r("li",[r("code",[e._v("no-trailing-comma")]),e._v(" rule removed, it is replaced by the "),r("code",[e._v("trailing-comma")]),e._v(" rule (#687)")]),e._v(" "),r("li",[e._v("Rename "),r("code",[e._v("sort-object-literal-keys")]),e._v(" rule to "),r("code",[e._v("object-literal-sort-keys")]),e._v(" (#304, #537)")]),e._v(" "),r("li",[r("code",[e._v("Lint.abstract()")]),e._v(" has been removed (#700)")])])]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("trailing-comma")]),e._v(" rule (#557, #687)")]),e._v(" "),r("li",[e._v('[new-rule-option] "ban-keywords" option for '),r("code",[e._v("variable-name")]),e._v(" rule (#735, #748)")]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("typedef")]),e._v(" rule now handles "),r("code",[e._v("for-of")]),e._v(" loops correctly (#743)")]),e._v(" "),r("li",[e._v("[bugfix] Handle tslint.json utf-8 files which have a BOM correctly (#90)")])]),e._v(" "),r("h2",{attrs:{id:"v2-6-0-dev-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v2-6-0-dev-2","aria-hidden":"true"}},[e._v("#")]),e._v(" v2.6.0-dev.2")]),e._v(" "),r("ul",[r("li",[e._v("Upgrade TypeScript compiler to "),r("code",[e._v("v1.7.0-dev.20151003")])]),e._v(" "),r("li",[e._v("[bugfix] "),r("code",[e._v("no-unused-expression")]),e._v(" rule now handles yield expressions properly (#706)")])]),e._v(" "),r("h2",{attrs:{id:"v2-6-0-dev-1"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v2-6-0-dev-1","aria-hidden":"true"}},[e._v("#")]),e._v(" v2.6.0-dev.1")]),e._v(" "),r("ul",[r("li",[e._v("Upgrade TypeScript compiler to "),r("code",[e._v("v1.7.0-dev.20150924")])])]),e._v(" "),r("h2",{attrs:{id:"v2-5-1"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v2-5-1","aria-hidden":"true"}},[e._v("#")]),e._v(" v2.5.1")]),e._v(" "),r("ul",[r("li",[e._v("[new-rule] no-inferrable-types rule (#676)")]),e._v(" "),r("li",[e._v('[new-rule-option] "avoid-escape" option for quotemark rule (#543)')]),e._v(" "),r("li",[e._v("[bugfix] type declaration for tslint external module #686")]),e._v(" "),r("li",[e._v("[enhancement] "),r("code",[e._v("AbstractRule")]),e._v(" and "),r("code",[e._v("AbstractFormatter")]),e._v(" are now abstract classes (#631)\n"),r("ul",[r("li",[e._v("Note: "),r("code",[e._v("Lint.abstract()")]),e._v(" is now deprecated")])])])]),e._v(" "),r("h2",{attrs:{id:"v2-5-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v2-5-0","aria-hidden":"true"}},[e._v("#")]),e._v(" v2.5.0")]),e._v(" "),r("ul",[r("li",[e._v("Use TypeScript compiler "),r("code",[e._v("v1.6.2")])]),e._v(" "),r("li",[e._v("[bugfixes] #637, #642, #650, #652")]),e._v(" "),r("li",[e._v("[bugfixes] fix various false positives in "),r("code",[e._v("no-unused-variable")]),e._v(" rule (#570, #613, #663)")]),e._v(" "),r("li",[e._v("Update project setup for latest VSCode (#662)")])]),e._v(" "),r("h2",{attrs:{id:"v2-5-0-beta"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v2-5-0-beta","aria-hidden":"true"}},[e._v("#")]),e._v(" v2.5.0-beta")]),e._v(" "),r("ul",[r("li",[e._v("Use TypeScript compiler "),r("code",[e._v("v1.6.0-beta")])]),e._v(" "),r("li",[e._v("[bugfix] Fix "),r("code",[e._v("no-internal-module")]),e._v(" false positives on nested namespaces (#600)")]),e._v(" "),r("li",[e._v("[docs] Add documentation for "),r("code",[e._v("sort-object-literal-keys")]),e._v(" rule")])]),e._v(" "),r("h2",{attrs:{id:"v2-5-0-dev-5"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v2-5-0-dev-5","aria-hidden":"true"}},[e._v("#")]),e._v(" v2.5.0-dev.5")]),e._v(" "),r("ul",[r("li",[e._v("Upgrade TypeScript compiler to "),r("code",[e._v("v1.7.0-dev.20150828")])]),e._v(" "),r("li",[e._v("[bugfix] Handle .tsx files appropriately (#597, #558)")])]),e._v(" "),r("h2",{attrs:{id:"v2-5-0-dev-4"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v2-5-0-dev-4","aria-hidden":"true"}},[e._v("#")]),e._v(" v2.5.0-dev.4")]),e._v(" "),r("ul",[r("li",[e._v("Upgrade TypeScript compiler to "),r("code",[e._v("v1.6.0-dev.20150825")])])]),e._v(" "),r("h2",{attrs:{id:"v2-5-0-dev-3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v2-5-0-dev-3","aria-hidden":"true"}},[e._v("#")]),e._v(" v2.5.0-dev.3")]),e._v(" "),r("ul",[r("li",[e._v("Upgrade TypeScript compiler to "),r("code",[e._v("v1.6.0-dev.20150821")])])]),e._v(" "),r("h2",{attrs:{id:"v2-5-0-dev-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v2-5-0-dev-2","aria-hidden":"true"}},[e._v("#")]),e._v(" v2.5.0-dev.2")]),e._v(" "),r("ul",[r("li",[e._v("Upgrade TypeScript compiler to "),r("code",[e._v("v1.6.0-dev.20150811")])]),e._v(" "),r("li",[e._v("[bug] fix "),r("code",[e._v("whitespace")]),e._v(" false positive in JSX elements (#559)")])]),e._v(" "),r("h2",{attrs:{id:"v2-5-0-dev-1"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v2-5-0-dev-1","aria-hidden":"true"}},[e._v("#")]),e._v(" v2.5.0-dev.1")]),e._v(" "),r("ul",[r("li",[e._v("Upgrade TypeScript compiler to "),r("code",[e._v("v1.6.0-dev.20150805")])]),e._v(" "),r("li",[e._v("[enhancement] Support "),r("code",[e._v(".tsx")]),e._v(" syntax (#490)")])]),e._v(" "),r("h2",{attrs:{id:"v2-4-5"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v2-4-5","aria-hidden":"true"}},[e._v("#")]),e._v(" v2.4.5")]),e._v(" "),r("ul",[r("li",[e._v("[bugfix] fix false positives on "),r("code",[e._v("no-shadowed-variable")]),e._v(" rule (#500)")]),e._v(" "),r("li",[e._v("[enhancement] add "),r("code",[e._v("allow-trailing-underscore")]),e._v(" option to "),r("code",[e._v("variable-name")]),e._v(" rule")])]),e._v(" "),r("h2",{attrs:{id:"v2-4-4"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v2-4-4","aria-hidden":"true"}},[e._v("#")]),e._v(" v2.4.4")]),e._v(" "),r("ul",[r("li",[e._v('[bugfix] remove "typescript" block from package.json (#606)')])]),e._v(" "),r("h2",{attrs:{id:"v2-4-3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v2-4-3","aria-hidden":"true"}},[e._v("#")]),e._v(" v2.4.3")]),e._v(" "),r("ul",[r("li",[e._v("[new-rule] "),r("code",[e._v("no-conditional-assignment")]),e._v(" (#507)")]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("member-access")]),e._v(" (#552)")]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("no-internal-module")]),e._v(" (#513)")]),e._v(" "),r("li",[e._v("[bugfix] small fixes to "),r("code",[e._v("sample.tslint.json")]),e._v(" (#545)")]),e._v(" "),r("li",[e._v("[bugfix] fix README docs for quotemark and indent (#523)")]),e._v(" "),r("li",[e._v("[enhancement] update "),r("code",[e._v("findup-sync")]),e._v(" and "),r("code",[e._v("underscore.string")]),e._v(" dependencies")]),e._v(" "),r("li",[e._v("[enhancement] add "),r("code",[e._v('"typescript"')]),e._v(" field to "),r("code",[e._v("package.json")]),e._v(" (#560)")]),e._v(" "),r("li",[e._v("[enhancement] small improvements to CLI help text")]),e._v(" "),r("li",[e._v("[enhancement] expose raw failures array in the JS API (#477)")])]),e._v(" "),r("h2",{attrs:{id:"v2-4-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v2-4-2","aria-hidden":"true"}},[e._v("#")]),e._v(" v2.4.2")]),e._v(" "),r("ul",[r("li",[e._v("[bug] remove npm-shrinkwrap.json from the published package")])]),e._v(" "),r("h2",{attrs:{id:"v2-4-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v2-4-0","aria-hidden":"true"}},[e._v("#")]),e._v(" v2.4.0")]),e._v(" "),r("ul",[r("li",[e._v("Upgraded Typescript compiler to 1.5.3")]),e._v(" "),r("li",[e._v("[bugs] #332, #493, #509, #483")]),e._v(" "),r("li",[e._v("[bug] fix error message in "),r("code",[e._v("no-var-keyword")]),e._v(" rule")]),e._v(" "),r("li",[e._v("[enhancement] CI tests are now run on node v0.12 in addition to v0.10")]),e._v(" "),r("li",[r("strong",[e._v("BREAKING")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("-f")]),e._v(" option removed from CLI")])])])]),e._v(" "),r("h2",{attrs:{id:"v2-3-1-beta"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v2-3-1-beta","aria-hidden":"true"}},[e._v("#")]),e._v(" v2.3.1-beta")]),e._v(" "),r("ul",[r("li",[e._v("[bugs] #137 #434 #451 #456")]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("no-require-imports")]),e._v(" disallows "),r("code",[e._v("require()")]),e._v(" style imports")]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("no-shadowed-variable")]),e._v(" moves over shadowed variable checking from "),r("code",[e._v("no-duplicate-variable")]),e._v(" into its own rule")]),e._v(" "),r("li",[r("strong",[e._v("BREAKING")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("no-duplicate-variable")]),e._v(" now only checks for duplicates within the same block scope; enable "),r("code",[e._v("no-shadowed-variable")]),e._v(" to get duplicate-variable checking across block scopes")])])]),e._v(" "),r("li",[e._v("[enhancement] "),r("code",[e._v("no-duplicate-variable")]),e._v(", "),r("code",[e._v("no-shadowed-variable")]),e._v(", and "),r("code",[e._v("no-use-before-declare")]),e._v(" now support ES6 destructuring")]),e._v(" "),r("li",[e._v("[enhancement] tslint CLI now uses a default configuration if no config file is found")])]),e._v(" "),r("h2",{attrs:{id:"v2-3-0-beta"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v2-3-0-beta","aria-hidden":"true"}},[e._v("#")]),e._v(" v2.3.0-beta")]),e._v(" "),r("ul",[r("li",[e._v("[bugs] #401 #367 #324 #352")]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("no-var-keyword")]),e._v(" disallows "),r("code",[e._v("var")]),e._v(" in favor of "),r("code",[e._v("let")]),e._v(" and "),r("code",[e._v("const")])]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("sort-object-literal-keys")]),e._v(" forces object-literal keys to be sorted alphabetically")]),e._v(" "),r("li",[e._v("Add support for ES6 destructuring and module syntax (affects "),r("code",[e._v("variable-name")]),e._v(", "),r("code",[e._v("no-use-before-declare")]),e._v(", "),r("code",[e._v("whitespace")]),e._v(" and "),r("code",[e._v("no-unused-variable")]),e._v(")")]),e._v(" "),r("li",[e._v("Add support for ES6 for-of and spread operator syntax")]),e._v(" "),r("li",[e._v("Use tsconfig.json & JSCS in the build system")])]),e._v(" "),r("h2",{attrs:{id:"v2-2-0-beta"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v2-2-0-beta","aria-hidden":"true"}},[e._v("#")]),e._v(" v2.2.0-beta")]),e._v(" "),r("ul",[r("li",[e._v("Upgraded Typescript compiler to 1.5.0-beta")]),e._v(" "),r("li",[r("strong",[e._v("BREAKING CHANGES")]),e._v(" "),r("ul",[r("li",[e._v("due to changes to the typescript compiler API, old custom rules may no longer work and may need to be rewritten")]),e._v(" "),r("li",[e._v("the JSON formatter's line and character positions are now back to being 0-indexed instead of 1-indexed")])])]),e._v(" "),r("li",[e._v("[bugs] #328 #334 #319 #351 #365 #254")]),e._v(" "),r("li",[e._v("[bug] fixes for tslint behavior around template strings (fixes #357, #349, #332, and more)")]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("align")]),e._v(" rule now enforces vertical alignment on parameters, arguments, and statements")]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("switch-default")]),e._v(" enforces a "),r("code",[e._v("default")]),e._v(" case in "),r("code",[e._v("switch")]),e._v(" statements")]),e._v(" "),r("li",[e._v("[feature] "),r("code",[e._v("no-duplicate-variable")]),e._v(" rule now additionally checks if function parameters have been shadowed")]),e._v(" "),r("li",[e._v("Additional fixes to existing rules to work as before with the typescript 1.5 compiler")])]),e._v(" "),r("h2",{attrs:{id:"v2-1-1"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v2-1-1","aria-hidden":"true"}},[e._v("#")]),e._v(" v2.1.1")]),e._v(" "),r("ul",[r("li",[e._v("[bugs] #292 #293 #295 #301 #302")]),e._v(" "),r("li",[e._v("Some internal refactoring")]),e._v(" "),r("li",[e._v("Added Windows CI testing (appveyor)")])]),e._v(" "),r("h2",{attrs:{id:"v2-1-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v2-1-0","aria-hidden":"true"}},[e._v("#")]),e._v(" v2.1.0")]),e._v(" "),r("ul",[r("li",[e._v("Fix crash on Windows")])]),e._v(" "),r("h2",{attrs:{id:"v2-0-1"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v2-0-1","aria-hidden":"true"}},[e._v("#")]),e._v(" v2.0.1")]),e._v(" "),r("ul",[r("li",[e._v("Upgraded Typescript compiler to 1.4")]),e._v(" "),r("li",[r("strong",[e._v("BREAKING CHANGES")]),e._v(" "),r("ul",[r("li",[e._v("typedef rule options were modified:\n"),r("ul",[r("li",[e._v("index-signature removed as no longer necessary")]),e._v(" "),r("li",[e._v("property-signature renamed to property-declaration")]),e._v(" "),r("li",[e._v("variable-declarator renamed to variable-declaration")]),e._v(" "),r("li",[e._v("member-variable-declarator renamed to member-variable-declaration")])])]),e._v(" "),r("li",[e._v("typedef-whitespace rule options were modified:\n"),r("ul",[r("li",[e._v("catch-clause was removed as invalid")]),e._v(" "),r("li",[e._v("further options were added, see readme for more details")])])]),e._v(" "),r("li",[e._v("due to changes to the typescript compiler API, old custom rules may no longer work and may need to be rewritten")]),e._v(" "),r("li",[e._v("the JSON formatter's line and character positions are now 1-indexed instead of 0-indexed")])])])]),e._v(" "),r("h2",{attrs:{id:"v1-2-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v1-2-0","aria-hidden":"true"}},[e._v("#")]),e._v(" v1.2.0")]),e._v(" "),r("ul",[r("li",[e._v("[bug] #245")])]),e._v(" "),r("h2",{attrs:{id:"v1-0-1"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v1-0-1","aria-hidden":"true"}},[e._v("#")]),e._v(" v1.0.1")]),e._v(" "),r("ul",[r("li",[e._v("[bug] #238")])]),e._v(" "),r("h2",{attrs:{id:"v1-0-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v1-0-0","aria-hidden":"true"}},[e._v("#")]),e._v(" v1.0.0")]),e._v(" "),r("ul",[r("li",[e._v("upgrade TypeScript compiler to 1.3")]),e._v(" "),r("li",[r("strong",[e._v("BREAKING CHANGES")]),e._v(" "),r("ul",[r("li",[e._v("all error messages now start with a lower-case character and do not end with a period")]),e._v(" "),r("li",[e._v("all rule options are consistent in nomenclature. The "),r("code",[e._v("typedef")]),e._v(" and "),r("code",[e._v("typedef-whitespace")]),e._v(" rules now take in hyphenated options")]),e._v(" "),r("li",[r("code",[e._v("unused-variables")]),e._v(" rule cannot find unused private variables defined in the constructor due to a bug in 1.3 compiler")]),e._v(" "),r("li",[r("code",[e._v("indent")]),e._v(" rule has changed to only check for tabs or spaces and not enforce indentation levels")])])])]),e._v(" "),r("h2",{attrs:{id:"v0-4-12"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v0-4-12","aria-hidden":"true"}},[e._v("#")]),e._v(" v0.4.12")]),e._v(" "),r("ul",[r("li",[e._v("multiple files with -f on cli")]),e._v(" "),r("li",[e._v("config file search starts with input file")])]),e._v(" "),r("h2",{attrs:{id:"v0-4-11"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v0-4-11","aria-hidden":"true"}},[e._v("#")]),e._v(" v0.4.11")]),e._v(" "),r("ul",[r("li",[e._v("[bugs] #136, #163")]),e._v(" "),r("li",[e._v("internal refactors")])]),e._v(" "),r("h2",{attrs:{id:"v0-4-10"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v0-4-10","aria-hidden":"true"}},[e._v("#")]),e._v(" v0.4.10")]),e._v(" "),r("ul",[r("li",[e._v("[bugs] #138, #145, #146, #148")])]),e._v(" "),r("h2",{attrs:{id:"v0-4-9"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v0-4-9","aria-hidden":"true"}},[e._v("#")]),e._v(" v0.4.9")]),e._v(" "),r("ul",[r("li",[e._v("[new-rule] "),r("code",[e._v("no-any")]),e._v(" disallows all uses of "),r("code",[e._v("any")])]),e._v(" "),r("li",[e._v("[bug] "),r("code",[e._v("/* tslint:disable */")]),e._v(" now disables semicolon rule as well")]),e._v(" "),r("li",[e._v("[bug] delete operator no longer results in a false positive for "),r("code",[e._v("no-unused-expression")])])]),e._v(" "),r("h2",{attrs:{id:"v0-4-8"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v0-4-8","aria-hidden":"true"}},[e._v("#")]),e._v(" v0.4.8")]),e._v(" "),r("ul",[r("li",[e._v("[new-rule] "),r("code",[e._v("no-var-requires")]),e._v(" disallows require statements not part of an import statement")]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("typedef")]),e._v(" rule also checks for member variables")]),e._v(" "),r("li",[e._v("[bug] "),r("code",[e._v("no-unused-variable")]),e._v(" no longer triggers false positives for class members labeled only "),r("code",[e._v("static")])]),e._v(" "),r("li",[e._v("[bug] "),r("code",[e._v("no-unused-expression")]),e._v(" no longer triggers false positives for "),r("code",[e._v('"use strict";')]),e._v(" expressions")]),e._v(" "),r("li",[e._v("[bug] "),r("code",[e._v("use-strict")]),e._v(" works correctly on function declarations")]),e._v(" "),r("li",[e._v("[bug] config file is now discoverable from other drives on Windows")])]),e._v(" "),r("h2",{attrs:{id:"v0-4-7"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v0-4-7","aria-hidden":"true"}},[e._v("#")]),e._v(" v0.4.7")]),e._v(" "),r("ul",[r("li",[e._v("[new-rule] added "),r("code",[e._v("no-unused-expression")]),e._v(" rule which disallows unused expression statements")]),e._v(" "),r("li",[e._v("[feature] the "),r("code",[e._v("check-operator")]),e._v(" option for the "),r("code",[e._v("whitespace")]),e._v(" rule now checks whitespace around the => token")]),e._v(" "),r("li",[e._v("[bug] "),r("code",[e._v("no-use-before-declare-rule")]),e._v(" no longer triggers false positives for member variables of classes used before the class is declared")]),e._v(" "),r("li",[e._v("[bug] semicolon at end of file no longer triggers false positives for "),r("code",[e._v("whitespace")]),e._v(" rule")]),e._v(" "),r("li",[e._v("[bug] hoisted functions no longer cause false positives for the "),r("code",[e._v("no-unreachable")]),e._v(" rule")]),e._v(" "),r("li",[e._v("[bug] the rule loader no longer transforms/ignores the leading and trailing underscores and dashes of rule names in the config file")]),e._v(" "),r("li",[e._v("[bug] "),r("code",[e._v("export import")]),e._v(" statements no longer false positives for "),r("code",[e._v("no-unused-variable-rule")])]),e._v(" "),r("li",[e._v("[docs] added documentation for creating custom rules and formatters")]),e._v(" "),r("li",[e._v("[docs] added sample "),r("code",[e._v("tslint.json")]),e._v(" file, under "),r("code",[e._v("docs/sample.tslint.json")])])]),e._v(" "),r("h2",{attrs:{id:"v0-4-6"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v0-4-6","aria-hidden":"true"}},[e._v("#")]),e._v(" v0.4.6")]),e._v(" "),r("ul",[r("li",[e._v("[build] migrated build to use "),r("code",[e._v("grunt-ts")]),e._v(" instead of "),r("code",[e._v("grunt-typescript")])]),e._v(" "),r("li",[e._v("[feature] "),r("code",[e._v("package.json")]),e._v(" now contains a "),r("code",[e._v("tslintConfig")]),e._v(" paramater to allow users to specify the location of the configuration file there")]),e._v(" "),r("li",[e._v("[feature] tslint now searches for the configuration file in the user's home directory if not found in the current path")]),e._v(" "),r("li",[e._v("[bug] unbraced conditionals no longer cause false positives for the "),r("code",[e._v("no-unreachable")]),e._v(" rule")])]),e._v(" "),r("h2",{attrs:{id:"v0-4-5"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v0-4-5","aria-hidden":"true"}},[e._v("#")]),e._v(" v0.4.5")]),e._v(" "),r("ul",[r("li",[e._v("[feature] "),r("code",[e._v("no-unused-variable")]),e._v(" no longer checks parameters by default. Parameters are now only checked if the "),r("code",[e._v("check-parameters")]),e._v(" option is set.")]),e._v(" "),r("li",[e._v("[bug] "),r("code",[e._v("no-unused-variable")]),e._v(" parameter check no longer fails on variable argument parameters (like ...args) and on cases where the parameters are broken up by newlines.")])]),e._v(" "),r("h2",{attrs:{id:"v0-4-4"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v0-4-4","aria-hidden":"true"}},[e._v("#")]),e._v(" v0.4.4")]),e._v(" "),r("ul",[r("li",[e._v("[bug] "),r("code",[e._v("no-unused-variable")]),e._v(" validates function parameters and constructor methods")]),e._v(" "),r("li",[e._v("[bug] "),r("code",[e._v("no-empty")]),e._v(" and "),r("code",[e._v("no-trailing-comma")]),e._v(" rules handle empty objects")])]),e._v(" "),r("h2",{attrs:{id:"v0-4-3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v0-4-3","aria-hidden":"true"}},[e._v("#")]),e._v(" v0.4.3")]),e._v(" "),r("ul",[r("li",[e._v("[new-rule] "),r("code",[e._v("no-unused-variable")])]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("no-trailing-comma")])]),e._v(" "),r("li",[e._v("[new-rule] "),r("code",[e._v("no-use-before-declare")])]),e._v(" "),r("li",[e._v("[feature] support "),r("code",[e._v("--version")]),e._v(" in CLI")]),e._v(" "),r("li",[e._v("[feature] expose rule names to custom formatters")]),e._v(" "),r("li",[e._v("[feature] add "),r("code",[e._v("verbose")]),e._v(" formatter")]),e._v(" "),r("li",[e._v("[bug] "),r("code",[e._v("no-empty")]),e._v(" allows constructors with member declaration parameters")]),e._v(" "),r("li",[e._v("[bug] CLI supports "),r("code",[e._v("--help")])]),e._v(" "),r("li",[e._v("[bug] "),r("code",[e._v("max-line-length")]),e._v(" allows CRLF endings")])])])},[],!1,null,null,null);t.default=i.exports}}]);